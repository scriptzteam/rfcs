<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" xml:lang="en" docName="draft-ietf-calext-ical-relations-11" number="9253" submissionType="IETF" category="std" consensus="true" updates="5545" obsoletes="" ipr="trust200902" tocInclude="true" tocDepth="5" symRefs="true" sortRefs="true" version="3">

  <!-- xml2rfc v2v3 conversion 3.12.2 -->
  <front>
    <title abbrev="iCalendar Relationships">Support for iCalendar Relationships</title>
    <seriesInfo name="RFC" value="9253"/>
    <author initials="M." surname="Douglass" fullname="Michael Douglass">
      <organization abbrev="Bedework">Bedework</organization>
      <address>
        <postal>
          <street>226 3rd Street</street>
          <city>Troy</city>
          <region>NY</region>
          <code>12180</code>
          <country>United States of America</country>
        </postal>
        <email>mdouglass@bedework.com</email>
        <uri>https://bedework.com</uri>
      </address>
    </author>
    <date month="August" year="2022"/>
    <area>art</area>
    <workgroup>calext</workgroup>
    <keyword>iCalendar</keyword>
    <keyword>link</keyword>
    <keyword>related-to</keyword>
    <keyword>relationships</keyword>
    <abstract>
      <t>
        This specification updates the iCalendar RELATED-TO property
        defined in RFC 5545
        by adding new relation types and introduces new iCalendar
        properties (LINK, CONCEPT, and REFID) to allow better
        linking and grouping of iCalendar components and related data.
      </t>
    </abstract>
  </front>
  <middle>
    <section>
      <name>Introduction</name>
      <t>
        iCalendar entities defined in <xref target="RFC5545"/> often
        need to be related to each other or to
        associated metadata. The specifications below support
        relationships of the following forms:
      </t>
      <dl newline="false" spacing="normal">
        <dt>Structured iCalendar:</dt>
        <dd>
            iCalendar entities can be related to each other in some structured
            way, for example, as parent, sibling, before, or after.
          </dd>
        <dt>Grouped iCalendar:</dt>
        <dd>
            iCalendar entities can be related to each other as a group.
            CATEGORIES are often used for this purpose but are problematic
            for application developers due to their lack of consistency
            and use as a free-form tag.
          </dd>
        <dt>Linked:</dt>
        <dd>
            Entities can be linked to other entities, such as vCards,
            through a URI and associated REL and FMTTYPE parameters.
          </dd>
      </dl>
      <section>
        <name>Structured iCalendar Relationships</name>
        <t>
          The iCalendar <xref target="RFC5545"/>
          RELATED-TO property has no support for temporal relationships
          as used by project management tools.
        </t>
        <t>
          The RELTYPE parameter is extended to take new values
          defining temporal relationships, a GAP parameter is defined to provide
          lead and lag values, and RELATED-TO is extended to allow URI values.
          These changes allow the RELATED-TO property to define a richer set of
          relationships useful for project management.
        </t>
      </section>
      <section>
        <name>Grouped iCalendar Relationships</name>
        <t>
          This specification defines a new REFID property, which
          allows arbitrary groups of entities to be associated with the same
          key value. 
        </t>
        <t>
          REFID is used to identify a key allowing the association of
          components that are all related to the referring, aggregating
          component and the retrieval of components based on this key.
          For example, this may be used to identify the tasks associated
          with a given project without having to communicate the task
          structure of the project. A further example is the grouping
          of all sub-tasks associated with the delivery of a specific
          package in a package delivery system.
        </t>
        <t>
          As such, the presence of a REFID property imparts no meaning
          to the component. It is merely a key to allow retrieval. This is
          distinct from categorization, which, while allowing grouping,
          also adds meaning to the component to which it is attached.
        </t>
      </section>
      <section>
        <name>Concept Relationships</name>
        <t>
          The name CONCEPT is used by the Simple Knowledge Organization
          System, as defined in <xref target="W3C.REC-skos-reference-20090818"/>.
          The term "concept" more accurately defines what we often
          mean by a category. It's not the text string that is important
          but the meaning attached to it. For example, the term
          "football" can mean very different sports.
        </t>
        <t>
          The introduction of CONCEPT allows a more structured
          approach to categorization, with the possibility of namespaced
          and path-like values. Unlike REFID, the CONCEPT property imparts some
          meaning. It is assumed that the value of this property will
          reference a well-defined category.
        </t>
        <t>
          The current CATEGORIES property defined in <xref target="RFC5545"/> is used
          as a free-form 'tagging' field. These values have some meaning
          to those who apply them but not necessarily to any consumer.
          As such, it is difficult to establish
          formal relationships between components based on their category.
        </t>
        <t>
          Rather than attempt to add semantics to the CATEGORIES property,
          it seems best to continue its usage as an informal tag and
          establish a new CONCEPT property with more constraints.
        </t>
      </section>
      <section>
        <name>Linked Relationships</name>
        <t>
          The currently existing iCalendar standard <xref target="RFC5545"/> lacks
          a general purpose method for referencing additional, external information
          relating to calendar components.
        </t>
        <t>
          This document proposes a method for referencing typed external
          information that can provide additional information about an iCalendar
          component. This new LINK property is closely aligned to
          <xref target="RFC8288"/>, which defines the generic concept
          of Web Linking, as well as its expression in the HTTP LINK header
          field.
        </t>
        <t>
          The LINK property defines a typed reference or relation to external
          metadata or related resources. By providing type and format information
          as parameters, clients and servers are able to discover interesting
          references and make use of them, perhaps for indexing or the
          presentation of interesting links for the user.
        </t>
        <t>
          Calendar components are often grouped into collections to represent a
          calendar or a series of tasks, for example, Calendaring Extensions to
	  WebDAV (CalDAV) calendar collections <xref target="RFC4791"/>.
        </t>
        <t>
          It is also often necessary to reference calendar components
          in other collections. For example, a VEVENT might refer to
          a VTODO from which it was derived. The PARENT, SIBLING, and CHILD
          relationships defined for the
          RELATED-TO property only allow for a unique identifier (UID), which is inadequate for many
          purposes. Allowing other value types for those relationships may help
          but would cause
          backward-compatibility issues. The LINK property can link components
          in different collections or even on different servers.
        </t>
        <t>
          When publishing events, it is useful to be able to refer back to the
          source of that information. The actual event may have been consumed from
          a feed or an ics file on a website. A LINK property can provide
          a reference to the originator of the event.
        </t>
        <t>
          Beyond the need to relate elements temporally, project
          management tools often need to be able to specify the relationships
          between the various events and tasks that make up a project.
          The LINK property provides such a mechanism.
        </t>
        <t>
          The LINK property <bcp14>MUST NOT</bcp14> be treated as just another
          attachment. The ATTACH property defined in
          <xref target="RFC5545"/> has been extended by
          <xref target="RFC8607"/>
          to handle server-side management and stripping of inline data and to
          provide additional data about the attachment (size, filename, etc.).
        </t>
        <t>
          Additionally, clients may choose to handle attachments differently
          from the LINK property, as attachments are often an integral part
          of the message, for example, the agenda.
        </t>
      </section>
      <section anchor="caching">
        <name>Caching and Offline Use</name>
        <t>
          In general, the calendar entity should be self explanatory
          without the need to download referenced metadata, such as a
          web page.
        </t>
        <t>
          However, to facilitate offline display, the link type may identify
          important pieces of data that should be downloaded in
          advance.
        </t>
      </section>
      <section anchor="conventions">
        <name>Conventions Used in This Document</name>
	        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are
    to be interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/>
    <xref target="RFC8174"/> when, and only when, they appear in all capitals,
    as shown here.
        </t>
        <t>
          The notation used in this memo to (re-)define iCalendar elements is
          the ABNF notation of <xref target="RFC5234"/>, as used by
          <xref target="RFC5545"/>.  Any syntax
          elements shown below that are not explicitly defined in this
          specification come from iCalendar [RFC5545].
        </t>
      </section>
    </section>
    <section anchor="link_reference_types">
      <name>LINK Property Reference Types</name>
      <t>
        The reference value in the LINK property defined below can take
        three forms specified by the VALUE parameter:
      </t>
      <dl newline="false" spacing="normal">
        <dt>URI:</dt>
        <dd>
            This is a URI referring to the target.
          </dd>
        <dt>UID:</dt>
        <dd>
            This allows for linking within a single collection of calendar
            components, and the value <bcp14>MUST</bcp14> refer to another component
            within the same collection.
          </dd>
        <dt>XML-REFERENCE:</dt>
        <dd>
            In an XML environment, it may be necessary to refer to a
            fragment of an external XML artifact. This value is a URI
            with an XPointer anchor value. The XPointer is defined in
            <xref target="W3C.WD-xptr-xpointer-20021219"/>, and its
            use as an anchor is defined in <xref target="W3C.REC-xptr-framework-20030325"/>.
        </dd>
      </dl>
      <t>
        Note that UID references may need updating on import. An example
        is data to be imported from a file containing VTODO and VEVENT components,
        with a VTODO referring to VEVENT components by UID. When imported
        into a CalDAV system, the VTODO components are typically placed in a different
        collection from the VEVENT components. This would require the
        UID reference to be replaced with a URI.
      </t>
    </section>
    <section anchor="link_relation_types">
      <name>Link Relation Types</name>
      <t>
        Two forms of relation types are defined in <xref target="RFC8288"/>: registered and
        extension.  Registered relation types are added to the "Link
        Relations" registry, as specified in <xref target="RFC8288" section="2.1.1"
	sectionFormat="of" />.
        Extension relation types, defined in <xref target="RFC8288" section="2.1.2"
	sectionFormat="of" />,
        are specified as unique URIs that are not registered in the registry.
      </t>
      <t>
        The relation types defined in <xref target="linkrel"/> will
        be registered with IANA in
        accordance with the specifications in  <xref target="RFC8288"/>.
      </t>
    </section>
    <section anchor="new_temporal_reltype_values">
      <name>New Temporal RELTYPE Parameter Values</name>
      <t>
        This section defines the usual temporal relationships
        for use with the RELTYPE parameter defined in
        <xref target="RFC5545" section="3.2.15" sectionFormat="of" />:
        FINISHTOSTART, FINISHTOFINISH, STARTTOFINISH, or STARTTOSTART.
      </t>
      <t>
        The <xref target="RFC5545"/> RELATED-TO property with one or
        more of these temporal relationships will be present in the
        predecessor entity and will refer to the successor entity.
      </t>
      <t>
        The GAP parameter (see <xref target="gap"/>)
        specifies the lead (a negative value) or lag (a positive value)
        time between the predecessor and the successor.
      </t>
      <t>
        In the description of each temporal relationship
        below, we refer to Task-A, which contains and controls the relationship, and
        Task-B, which is the target of the relationship. This is indicated by
        the direction of the arrows in the diagrams below.
      </t>
      <t>
        Also, each relationship may be modified by the addition of a
        GAP parameter to the relationship that applies to the targeted
        component.
      </t>
      <dl newline="false" spacing="normal">
        <dt>RELTYPE=FINISHTOSTART:</dt>
        <dd>
          <t>
            Task-B cannot start until Task-A finishes.
            For example, when painting is complete, carpet laying can begin.
          </t>
          <figure anchor="finishtostart">
            <name>Finish-to-Start Relationship</name>
            <artwork><![CDATA[
            ============
            |  Task-A  |
            ============
                       |
                       V
                       ============
                       |  Task-B  |
                       ============
]]></artwork>
          </figure>
        </dd>
        <dt>RELTYPE=FINISHTOFINISH:</dt>
        <dd>
            <t>Task-B can only be completed after Task-A
            is finished. The related tasks may run in parallel before
            completion.</t>
          <t>
            For example, in the development of two related pieces of
            software (e.g., the API and the implementation), the design
            of the implementation (Task-B) cannot be completed until the
            design of the API (Task-A) has been completed.
          </t>
          <figure anchor="finishtofinish">
            <name>Finish-to-Finish Relationship</name>
            <artwork><![CDATA[
                    ==================
                    |     Task-A     |--+
                    ==================  |
                                        |
                          ============  |
                          |  Task-B  |<-+
                          ============
]]></artwork>
          </figure>
        </dd>
        <dt>RELTYPE=STARTTOFINISH:</dt>
        <dd>
          <t>
            The start of Task-A (which occurs after Task-B)
            controls the finish of Task-B.
            For example, ticket sales (Task-B) end after the game
            starts (Task-A).
          </t>
          <figure anchor="starttofinish">
            <name>Start-to-Finish Relationship</name>
            <artwork><![CDATA[
                           ============
                        +--|  Task-A  |
                        |  ============
                        +---------+
                    ============  |
                    |  Task-B  |<-+
                    ============
]]></artwork>
          </figure>
        </dd>
        <dt>RELTYPE=STARTTOSTART:</dt>
        <dd>
          <t>
            The start of Task-A triggers the start of Task-B,
            that is, Task-B can start anytime after Task-A starts.
          </t>
          <figure anchor="starttostart">
            <name>Start-to-Start Relationship</name>
            <artwork><![CDATA[
                    ============
                 +--|  Task-A  |
                 |  ============
                 |
                 |  ============
                 +->|  Task-B  |
                    ============
]]></artwork>
          </figure>
        </dd>
      </dl>
    </section>
    <section anchor="additional_new_reltype_values">
      <name>Additional New RELTYPE Parameter Values</name>
      <t>
        This section defines the additional relationships below:
      </t>
      <dl newline="false" spacing="normal">
        <dt>RELTYPE=FIRST:</dt>
        <dd>
            This indicates that the referenced calendar component is the
            first in a series the referencing calendar component is
            part of.
          </dd>
        <dt>RELTYPE=NEXT:</dt>
        <dd>
            This indicates that the referenced calendar component is the
            next in a series the referencing calendar component is
            part of.
          </dd>
        <dt>RELTYPE=DEPENDS-ON:</dt>
        <dd>
            This indicates that the current calendar component depends on
            the referenced calendar component in some manner. For example,
            a task may be blocked waiting on the other, referenced, task.
          </dd>
        <dt>RELTYPE=REFID:</dt>
        <dd>
            This establishes a reference from the current component to
            components with a REFID property that matches the value
            given in the associated RELATED-TO property.
          </dd>
        <dt>RELTYPE=CONCEPT:</dt>
        <dd>
            This establishes a reference from the current component to
            components with a CONCEPT property that matches the value
            given in the associated RELATED-TO property.
          </dd>
      </dl>
      <t>
        Note that the relationship types of PARENT, CHILD, and SIBLING
        establish a hierarchical relationship. The new types of FIRST
        and NEXT are an ordering relationship.
      </t>
    </section>
    <section anchor="new_property_parameters">
      <name>New Property Parameters</name>
      <section anchor="linkrel">
        <name>Link Relation</name>
        <dl newline="false" spacing="normal">
          <dt>Parameter name:</dt>
          <dd>
              LINKREL
            </dd>
          <dt>Purpose:</dt>
          <dd>
              This property specifies the relationship of data referenced by a LINK property.
            </dd>
          <dt>Format Definition:</dt>
          <dd>
            <t keepWithNext="true">
                  This parameter is defined by the following notation:
            </t>  
            <sourcecode type="abnf"><![CDATA[
linkrelparam = "LINKREL" "="
                (DQUOTE uri DQUOTE
               / iana-token)   ; Other IANA registered type
]]></sourcecode>
          </dd>
          <dt>Description:</dt>
          <dd>
              <t>This parameter <bcp14>MUST</bcp14> be specified on all LINK properties and
              define the type of reference. This allows programs consuming this
              data to automatically scan for references they support. There is no default
	      relation type.</t>
              <t>Any link relation 
              in the link registry established by <xref target="RFC8288"/>,
              or new link relations, may be used.
              It is expected that link relation types seeing significant
              usage in calendaring will have the calendaring usage
              described in an RFC.</t>
            </dd>
          <dt>LINKREL=latest-version:</dt>
          <dd>
	    This identifies the latest version of the event information.
            </dd>
          <dt>Registration:</dt>
          <dd>
              These relation types are registered in <xref target="RFC8288"/>.
          </dd>
        </dl>
      </section>
      <section anchor="gap">
        <name>Gap</name>
        <dl newline="false" spacing="normal">
          <dt>Parameter name:</dt>
          <dd>
              GAP
            </dd>
          <dt>Purpose:</dt>
          <dd>
              This property specifies the length of the gap, positive or negative,
              between two components with a temporal relationship.
            </dd>
          <dt>Format Definition:</dt>
          <dd>
            <t keepWithNext="true">
                  This parameter is defined by the following notation, where
                  dur-value is defined in <xref target="RFC5545" section="3.3.6" sectionFormat="of" />. :
            </t>
            <sourcecode type="abnf"><![CDATA[
  gapparam      = "GAP" "=" dur-value
]]></sourcecode>
          </dd>
          <dt>Description:</dt>
          <dd>
              <t>This parameter <bcp14>MAY</bcp14> be specified on the RELATED-TO property and
              defines the duration of time between the predecessor and successor
              in an interval. When positive, it defines the lag time between
              a task and its logical successor. When negative, it defines
              the lead time.</t>
            <t>
              An example of lag time might be if Task-A is "paint the room"
              and Task-B is
              "lay the carpets". Then, Task-A may be related to Task-B with
              RELTYPE=FINISHTOSTART with a gap of 1 day -- long enough for the paint to
              dry.
            </t>
            <figure anchor="finishtostart-lag">
              <name>Finish-to-Start Relationship with Lag</name>
              <artwork><![CDATA[
            ====================
            |  paint the room  |--+
            ====================  |
                                  |(lag of one day)
                                  |
                                  |  ===================
                                  +->| lay the carpet  |
                                     ===================
]]></artwork>
            </figure>
            <t>
              For an example of lead time, in constructing a two-story
              building, the electrical work must be done before painting.
              However, the painter can move in to the first floor as the
              electricians move upstairs.
            </t>
            <figure anchor="finishtostart-lead">
              <name>Finish-to-Start Relationship with Lead</name>
              <artwork><![CDATA[
            =====================
            |  electrical work  |--+
            =====================  |
                     +-------------+
                     |(lead of estimated time)
                     |  ==================
                     +->|    painting    |
                        ==================
]]></artwork>
            </figure>
          </dd>
        </dl>
      </section>
    </section>
    <section anchor="new_value_data_types">
      <name>New Value Data Types</name>
      <t>
        This specification defines the following new value types to
        be used with the VALUE property parameter:

      </t>
      <dl newline="false" spacing="normal">
        <dt>UID:</dt>
        <dd>
            VALUE=UID indicates that the associated value is the UID for a
            component.
          </dd>
        <dt>XML-REFERENCE:</dt>
        <dd>
            VALUE=XML-REFERENCE indicates that the associated value
            references an associated XML artifact and is a URI
            with an XPointer anchor value. The XPointer is defined in
            <xref target="W3C.WD-xptr-xpointer-20021219"/>, and its
            use as an anchor is defined in <xref target="W3C.REC-xptr-framework-20030325"/>.
          </dd>
      </dl>
    </section>
    <section anchor="new_properties">
      <name>New Properties</name>
      <section anchor="concept">
        <name>Concept</name>
        <dl newline="false" spacing="normal">
          <dt>Property name:</dt>
          <dd>
              CONCEPT
            </dd>
          <dt>Purpose:</dt>
          <dd>
              This property defines the formal categories for a calendar
              component. 
            </dd>
          <dt>Value type:</dt>
          <dd>
              URI
            </dd>
          <dt>Property Parameters:</dt>
          <dd>
              IANA and non-standard parameters can be specified on this property.
            </dd>
          <dt>Conformance:</dt>
          <dd>
              This property can be specified zero or more times in any
              iCalendar component.
            </dd>
          <dt>Description:</dt>
          <dd>
              <t>This property is used to specify formal categories or
              classifications of the calendar component.  The values
              are useful in searching for a calendar component of a
              particular type and category.</t>
              <t>This categorization is distinct from the more informal
              "tagging" of components provided by the existing CATEGORIES
              property. It is expected that the value of the CONCEPT
              property will reference an external resource that
              provides information about the categorization.</t>
              <t>In addition, a structured URI value allows for
              hierarchical categorization of events.</t>
              <t>Possible category resources are the various proprietary
              systems, for example, the Library of Congress, or an open
              source of categorization data.</t>
            </dd>
          <dt>Format Definition:</dt>
          <dd>
            <t keepWithNext="true">
                  This property is defined by the following notation:
            </t>
            <sourcecode type="abnf"><![CDATA[
  concept        =  "CONCEPT" conceptparam ":"
                        uri CRLF

  conceptparam = *(";" other-param)
]]></sourcecode>
          </dd>
          <dt>Example:</dt>
          <dd>
            <t keepWithNext="true">
                  The following is an example of this property. It points to a
                  server acting as the source for the calendar object.
            </t>
            <sourcecode><![CDATA[
  CONCEPT:https://example.com/event-types/arts/music
                ]]></sourcecode>
          </dd>
        </dl>
      </section>
      <section anchor="link">
        <name>Link</name>
        <dl newline="false" spacing="normal">
          <dt>Property name:</dt>
          <dd>
              LINK
            </dd>
          <dt>Purpose:</dt>
          <dd>
              This property provides a reference to external information
              related to a component.
            </dd>
          <dt>Value type:</dt>
          <dd>
              URI, UID, or XML-REFERENCE
            </dd>
          <dt>Property Parameters:</dt>
          <dd>
              The VALUE parameter is required. Non-standard, link relation type,
              format type, label, and language parameters can also be
              specified on this property. The LABEL parameter
              is defined in <xref target="RFC7986"/>.
            </dd>
          <dt>Conformance:</dt>
          <dd>
              This property can be specified zero or more times in any
              iCalendar component.
            </dd>
          <dt>Description:</dt>
          <dd>
              When used in a component, the value of this property points to
              additional information related to the component. For example,
              it may reference the originating web server.
            </dd>
          <dt>Format Definition:</dt>
          <dd>
            <t keepWithNext="true">
                  This property is defined by the following notation:
            </t>

            <sourcecode type="abnf"><![CDATA[
   link           = "LINK" linkparam ":"
                      ( uri /  ; for VALUE=XML-REFERENCE
                        uri /  ; for VALUE=URI
                        text ) ; for VALUE=UID
                    CRLF

   linkparam      = (";" "VALUE" "=" ("XML-REFERENCE" /
                                "URI" /
                                "UID"))
                    1*(";" linkrelparam)
                    1*(";" fmttypeparam)
                    1*(";" labelparam)
                    1*(";" languageparam)
                    *(";" other-param)
                    ; the elements herein may appear in any order,
                    ; and the order is not significant.		    
                ]]></sourcecode>
            <t>This property is a serialization of the model in
              <xref target="RFC8288"/>, where the link target is
              carried in the property value, the link context is the
              containing calendar entity, and the link relation type
              and any target attributes are carried in iCalendar property
              parameters.</t>
            <t>
              The LINK property parameters
              map to <xref target="RFC8288"/> attributes as follows:</t>
            <dl newline="false" spacing="normal">
              <dt>LABEL:</dt>
              <dd>
                  This parameter maps to the "title" attribute defined in <xref target="RFC8288" section="3.4.1" sectionFormat="of" />.
                </dd>
              <dt>LANGUAGE:</dt>
              <dd>
                  This parameter maps to the "hreflang" attribute defined in <xref target="RFC8288" section="3.4.1" sectionFormat="of" />.
                </dd>
              <dt>LINKREL:</dt>
              <dd>
                  This parameter maps to the link relation type defined in <xref target="RFC8288" section="2.1" sectionFormat="of" />.
                </dd>
              <dt>FMTTYPE:</dt>
              <dd>
                  This parameter maps to the "type" attribute defined in <xref target="RFC8288" section="3.4.1" sectionFormat="of" />.
                </dd>
            </dl>
            <t>There is no mapping for "title*",
              "anchor", "rev", or "media" <xref target="RFC8288"/>.</t>
            </dd>
          <dt>Example:</dt>
          <dd>
            <t keepWithNext="true">
                  The following is an example of this property, which
                  provides a reference to the source for the calendar object.
            </t>
            <sourcecode><![CDATA[
  LINK;LINKREL=SOURCE;LABEL=Venue;VALUE=URI:
   https://example.com/events
                ]]></sourcecode>
          </dd>
          <dt>Example:</dt>
          <dd>
            <t keepWithNext="true">
                  The following is an example of this property, which
                  provides a reference to an entity from which this one
                  was derived. The link relation is a vendor-defined value.
            </t>
            <sourcecode><![CDATA[
  LINK;LINKREL="https://example.com/linkrel/derivedFrom";
   VALUE=URI:
   https://example.com/tasks/01234567-abcd1234.ics
                ]]></sourcecode>
          </dd>
          <dt>Example:</dt>
          <dd>
            <t keepWithNext="true">
                  The following is an example of this property, which
                  provides a reference to a fragment of an XML document.
                  The link relation is a vendor-defined value.
            </t>
            <sourcecode><![CDATA[
  LINK;LINKREL="https://example.com/linkrel/costStructure";
   VALUE=XML-REFERENCE:
   https://example.com/xmlDocs/bidFramework.xml
   #xpointer(descendant::CostStruc/range-to(
   following::CostStrucEND[1]))
                ]]></sourcecode>
          </dd>
        </dl>
      </section>
      <section anchor="refid">
        <name>Refid</name>
        <dl newline="false" spacing="normal">
          <dt>Property name:</dt>
          <dd>
              REFID
            </dd>
          <dt>Purpose:</dt>
          <dd>
              This property value acts as a key for associated
              iCalendar entities.
            </dd>
          <dt>Value type:</dt>
          <dd>
              TEXT
            </dd>
          <dt>Property Parameters:</dt>
          <dd>
              Non-standard parameters can be specified on this property.
            </dd>
          <dt>Conformance:</dt>
          <dd>
              This property can be specified zero or more times in any
              iCalendar component.
            </dd>
          <dt>Description:</dt>
          <dd>
              The value of this property is free-form text that
              creates an identifier for associated components.  All components
              that use the same REFID value are associated through that value
              and can be located or retrieved as a group.  For example, all of
              the events in a travel itinerary would have the same REFID value,
              so as to be grouped together.
            </dd>
          <dt>Format Definition:</dt>
          <dd>
            <t keepWithNext="true">
                  This property is defined by the following notation:
            </t>
            <sourcecode type="abnf"><![CDATA[
  refid      = "REFID" refidparam ":" text CRLF


  refidparam      = *(";" other-param)

  ]]></sourcecode>
            </dd>
          <dt>Example:</dt>
          <dd>
            <t keepWithNext="true">
                  The following is an example of this property.
            </t>
            <sourcecode><![CDATA[
  REFID:itinerary-2014-11-17
                ]]></sourcecode>
          </dd>
        </dl>
      </section>
    </section>
    <section anchor="updates_to_rfc_5545">
      <name>Updates to RFC 5545</name>
      <t>
        This specification updates the RELATED-TO property defined
        in <xref target="RFC5545" section="3.8.4.5" sectionFormat="of" />. The contents
        of <xref target="related-to"/> replace that section.
      </t>
      <t>
        The RELTYPE parameter is extended to take new values defining
        temporal relationships, a GAP parameter is defined to provide lead
        and lag values, and RELATED-TO is extended to allow URI values.
        These changes allow the RELATED-TO property to define a richer set of
        relationships useful for project management.
      </t>
      <section anchor="related-to">
        <name>RELATED-TO</name>
        <dl newline="false" spacing="normal">
          <dt>Property name:</dt>
          <dd>
              RELATED-TO
            </dd>
          <dt>Purpose:</dt>
          <dd>
              This property is used to represent a relationship or
              reference between one calendar component and another. The definition
              here extends the definition in <xref target="RFC5545" section="3.8.4.5" sectionFormat="of" /> by allowing URI or UID values and a GAP parameter.
            </dd>
          <dt>Value Type:</dt>
          <dd>
              URI, UID, or TEXT
            </dd>
          <dt>Property Parameters:</dt>
          <dd>
              Relationship type, IANA, and non-standard
              property parameters can be specified on this property.
            </dd>
          <dt>Conformance:</dt>
          <dd>
              This property <bcp14>MAY</bcp14> be specified in any iCalendar component.
            </dd>
          <dt>Description:</dt>
          <dd>
              <t>By default or when VALUE=UID is specified, the property value
              consists of the persistent, globally
              unique identifier of another calendar component.  This value would
              be represented in a calendar component by the UID property.</t>
              <t>By default, the property value points to another calendar
              component that has a PARENT relationship to the referencing
              object.  The RELTYPE property parameter is used to either
              explicitly state the default PARENT relationship type to the
              referenced calendar component or to override the default PARENT
              relationship type and specify either a CHILD or SIBLING
              relationship or a temporal relationship.</t>
              <t>The PARENT relationship indicates that the calendar
              component is a subordinate of the referenced calendar component.
              The CHILD relationship indicates that the calendar component is a
              superior of the referenced calendar component.  The SIBLING
              relationship indicates that the calendar component is a peer of
              the referenced calendar component.</t>
              <t>To preserve backwards compatibility, the value type <bcp14>MUST</bcp14>
              be UID when the PARENT, SIBLING, or CHILD
              relationships are specified.</t>	      
              <t>The FINISHTOSTART, FINISHTOFINISH, STARTTOFINISH, or STARTTOSTART
              relationships define temporal relationships, as specified in the
              RELTYPE parameter definition.</t>
              <t>The FIRST and NEXT define ordering relationships between
              calendar components.</t>
              <t>The DEPENDS-ON relationship indicates that the current
              calendar component depends on
              the referenced calendar component in some manner. For example,
              a task may be blocked waiting on the other, referenced, task.</t>
              <t>The REFID and CONCEPT relationships establish a reference
              from the current component to the referenced component.</t>
              <t>Changes to a calendar component referenced by this property can
              have an implicit impact on the related calendar component.  For
              example, if a group event changes its start or end date or time,
              then the related, dependent events will need to have their start
              and end dates and times changed in a corresponding way.  Similarly, if a
              PARENT calendar component is canceled or deleted, then there is
              an implied impact to the related CHILD calendar components.  This
              property is intended only to provide information on the
              relationship of calendar components.</t>
              <t>Deletion of the target component, for example, the target
              of a FIRST, NEXT, or temporal relationship, can result in broken
              links.</t>
              <t>It is up to the target calendar system to maintain any
              property implications of these relationships.</t>
            </dd>
          <dt>Format Definition:</dt>
          <dd>
            <t keepWithNext="true">
                  This property is defined by the following notation:
            </t>
            <sourcecode type="abnf"><![CDATA[
   related    = "RELATED-TO" relparam ":"
                            ( text / ; for VALUE=UID
                              uri /  ; for VALUE=URI
                              text ) ; for VALUE=TEXT or default
                CRLF

   relparam   = ; the elements herein may appear in any order,
                ; and the order is not significant.
                [";" "VALUE" "=" ("UID" /
                                  "URI" /
                                  "TEXT")]
                [";" reltypeparam]
                [";" gapparam]
                *(";" other-param)
                ]]></sourcecode>
          </dd>
          <dt>Example:</dt>
          <dd>
            <t keepWithNext="true">
                  The following are examples of this property.
            </t>
            <sourcecode><![CDATA[
  RELATED-TO:jsmith.part7.19960817T083000.xyzMail@example.com

  RELATED-TO:19960401-080045-4000F192713-0052@example.com

  RELATED-TO;VALUE=URI;RELTYPE=STARTTOFINISH:
   https://example.com/caldav/user/jb/cal/
   19960401-080045-4000F192713.ics
                ]]></sourcecode>
          </dd>
        </dl>
      </section>
    </section>
    <section>
      <name>Security Considerations</name>
      <t>
        All of the security considerations of <xref target="RFC5545" section="7"
	sectionFormat="of"/> apply to this specification.
      </t>
      <t>
       Applications using the LINK property need to be aware of the risks
       entailed in using the URIs provided as values. See <xref target="RFC3986" section="7" sectionFormat="of" /> for
       a discussion of the security considerations relating to URIs.
      </t>
      <t>
        In particular, note Section <xref target="RFC3986" section="7.1"
	sectionFormat="bare">Reliability and Consistency</xref> of <xref target="RFC3986"/>,
	which points out the lack of a stability
        guarantee for referenced resources.
      </t>
      <t>
        When the value is an XML-REFERENCE type, the targeted data is an XML document
        or portion thereof. Consumers need to be aware of the security issues
        related to XML processing -- in particular, those related to XML entities.
        See <xref target="RFC4918" sectionFormat="of" section="20.6"/>. Additionally, note that
        the reference may be invalid or become so over time.
      </t>
      <t>
        The CONCEPT and redefined RELATED-TO properties have
        the same issues in that values may be URIs.
      </t>
      <t>
        Extremely large values for the GAP parameter may lead to
        unexpected behavior.
      </t>
    </section>
    <section anchor="iana_considerations">
      <name>IANA Considerations</name>
      <section anchor="property_registrations">
        <name>iCalendar Property Registrations</name>
        <t>
          The following iCalendar property names have been added to
          the iCalendar "Properties" registry defined in <xref target="RFC5545" section="8.3.2" sectionFormat="of" />.  IANA has also added a
          reference to this document, where the properties originally defined in
          <xref target="RFC5545"/> have been updated by this document.
        </t>
        <table>
          <thead>
            <tr>
              <th align="left">Property</th>
              <th align="left">Status</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">CONCEPT</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="concept"/></td>
            </tr>
            <tr>
              <td align="left">LINK</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="link"/></td>
            </tr>
            <tr>
              <td align="left">REFID</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="refid"/></td>
            </tr>
            <tr>
              <td align="left">RELATED-TO</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="RFC5545" section="3.8.4.5" sectionFormat="comma"/>; RFC 9253, <xref target="related-to"/></td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="property_parameter_registrations">
        <name>iCalendar Property Parameter Registrations</name>
        <t>
          The following iCalendar property parameter names have been added to
          the iCalendar "Parameters" registry defined in <xref target="RFC5545" section="8.3.3" sectionFormat="of" />.
        </t>
        <table>
          <thead>
            <tr>
              <th align="left">Parameter</th>
              <th align="left">Status</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">GAP</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="gap"/></td>
            </tr>
            <tr>
              <td align="left">LINKREL</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="linkrel"/></td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="value_data_types_registrations">
        <name>iCalendar Value Data Type Registrations</name>
        <t>
          The following iCalendar property parameter names have been added to
          the iCalendar "Value Data Types" registry defined in <xref target="RFC5545" section="8.3.4" sectionFormat="of" />.
        </t>
        <table>
          <thead>
            <tr>
              <th align="left">Value Data Type</th>
              <th align="left">Status</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">XML-REFERENCE</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="new_value_data_types"/></td>
            </tr>
            <tr>
              <td align="left">UID</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="new_value_data_types"/></td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="reltype_value_registrations">
        <name>iCalendar RELTYPE Value Registrations</name>
        <t>
          The following iCalendar "RELTYPE" values have been added to
          the iCalendar "Relationship Types" registry defined in <xref target="RFC5545" section="8.3.8" sectionFormat="of" />.
        </t>
        <table>
          <thead>
            <tr>
              <th align="left">Relationship Type</th>
              <th align="left">Status</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">CONCEPT</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="additional_new_reltype_values"/></td>
            </tr>
            <tr>
              <td align="left">DEPENDS-ON</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="additional_new_reltype_values"/></td>
            </tr>
            <tr>
              <td align="left">FINISHTOFINISH</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="new_temporal_reltype_values"/></td>
            </tr>
            <tr>
              <td align="left">FINISHTOSTART</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="new_temporal_reltype_values"/></td>
            </tr>
            <tr>
              <td align="left">FIRST</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="additional_new_reltype_values"/></td>
            </tr>
            <tr>
              <td align="left">NEXT</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="additional_new_reltype_values"/></td>
            </tr>
            <tr>
              <td align="left">REFID</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="additional_new_reltype_values"/></td>
            </tr>
            <tr>
              <td align="left">STARTTOFINISH</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="new_temporal_reltype_values"/></td>
            </tr>
            <tr>
              <td align="left">STARTTOSTART</td>
              <td align="left">Current</td>
              <td align="left">
                <xref target="new_temporal_reltype_values"/></td>
            </tr>
          </tbody>
        </table>
      </section>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4918.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5545.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7986.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8288.xml"/>

        <reference anchor="W3C.WD-xptr-xpointer-20021219" target="http://www.w3.org/TR/2002/WD-xptr-xpointer-20021219">
          <front>
            <title>XPointer xpointer() Scheme</title>
            <author initials="S." surname="DeRose" fullname="Steven DeRose">
              <organization/>
            </author>
            <author initials="E." surname="Maler" fullname="Eve Maler">
              <organization/>
            </author>
            <author initials="R." surname="Daniel" fullname="Ron Daniel Jr.">
              <organization/>
            </author>	    
            <date month="December" day="19" year="2002"/>
          </front>
          <seriesInfo name="W3C WD" value="WD-xptr-xpointer-20021219"/>
        </reference>

        <reference anchor="W3C.REC-xptr-framework-20030325" target="https://www.w3.org/TR/2003/REC-xptr-framework-20030325">
          <front>
            <title>XPointer Framework</title>
            <author initials="P." surname="Grosso" fullname="Paul Grosso">
              <organization/>
            </author>
            <author initials="E." surname="Maler" fullname="Eve Maler">
              <organization/>
            </author>
            <author initials="J." surname="Marsh" fullname="Jonathan Marsh">
              <organization/>
            </author>
            <author initials="N." surname="Walsh" fullname="Norman Walsh">
              <organization/>
            </author>
            <date month="March" day="25" year="2003"/>
          </front>
          <seriesInfo name="W3C Recommendation" value="REC-xptr-framework-20030325"/>
        </reference>

        <reference anchor="W3C.REC-skos-reference-20090818" target="https://www.w3.org/TR/2009/REC-skos-reference-20090818">
          <front>
            <title>SKOS Simple Knowledge Organization System Reference</title>
            <author initials="A." surname="Miles" fullname="Alistair Miles">
              <organization/>
            </author>
            <author initials="S." surname="Bechhofer" fullname="Sean Bechhofer">
              <organization/>
            </author>
            <date month="August" day="18" year="2009"/>
          </front>
          <seriesInfo name="W3C Recommendation" value="REC-skos-reference-20090818"/>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4791.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8607.xml"/>
      </references>
    </references>
        <section numbered="false">
      <name>Acknowledgements</name>
      <t>
        The author would like to thank the members of CalConnect,
        the Calendaring and
        Scheduling Consortium technical committees, and the following
        individuals for contributing their ideas, support, and comments:
      </t>
      <t>
        <contact fullname="Adrian Apthorp"/>, <contact fullname="Cyrus Daboo"/>,
	<contact fullname="Marten Gajda"/>, and <contact fullname="Ken Murchison"/>
      </t>
      <t>
        The author would also like to thank CalConnect and the Calendaring and
        Scheduling Consortium for advice with this specification.
      </t>
    </section>
  </back>
  </rfc>
