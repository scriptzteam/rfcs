<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
 <!ENTITY nbsp    "&#160;">
 <!ENTITY zwsp   "&#8203;">
 <!ENTITY nbhy   "&#8209;">
 <!ENTITY wj     "&#8288;">
]>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-alto-unified-props-new-24" number="9240" obsoletes="" updates="" submissionType="IETF" category="std" consensus="true" xml:lang="en" tocInclude="true" tocDepth="3" sortRefs="true" symRefs="true" version="3">

  <front>
    <title abbrev="Entity Property Maps">An Extension for Application-Layer Traffic Optimization (ALTO): Entity Property Maps</title>
    <seriesInfo name="RFC" value="9240"/>
    <author initials="W." surname="Roome" fullname="Wendy Roome">
      <organization abbrev="Nokia Bell Labs">Nokia Bell Labs (Retired)</organization>
      <address>
        <postal>
          <street>124 Burlington Rd</street>
          <city>Murray Hill</city>
          <region>NJ</region>
          <code>07974</code>
          <country>United States of America</country>
        </postal>
        <phone>+1-908-464-6975</phone>
        <email>wendy@wdroome.com</email>
      </address>
    </author>
    <author initials="S." surname="Randriamasy" fullname="Sabine Randriamasy">
      <organization>Nokia Bell Labs</organization>
      <address>
        <postal>
          <street>Route de Villejust</street>
          <city>NOZAY</city>
          <code>91460</code>
          <country>France</country>
        </postal>
        <email>Sabine.Randriamasy@nokia-bell-labs.com</email>
      </address>
    </author>
    <author initials="Y." surname="Yang" fullname="Y. Richard Yang">
      <organization>Yale University</organization>
      <address>
        <postal>
          <street>51 Prospect Street</street>
          <city>New Haven</city>
          <region>CT</region>
          <code>06511</code>
          <country>United States of America</country>
        </postal>
        <phone>+1-203-432-6400</phone>
        <email>yry@cs.yale.edu</email>
      </address>
    </author>
    <author initials="J." surname="Zhang" fullname="Jingxuan Jensen Zhang">
      <organization>Tongji University</organization>
      <address>
        <postal>
          <street>4800 Cao'An Hwy</street>
          <city>Shanghai</city>
          <code>201804</code>
          <country>China</country>
        </postal>
        <email>jingxuan.n.zhang@gmail.com</email>
      </address>
    </author>
    <author initials="K." surname="Gao" fullname="Kai Gao">
      <organization>Sichuan University</organization>
      <address>
        <postal>
          <street>No.24 South Section 1, Yihuan Road</street>
          <city>Chengdu</city>
          <code>610000</code>
          <country>China</country>
        </postal>
        <email>kaigao@scu.edu.cn</email>
      </address>
    </author>
    <date year="2022" month="July"/>
    <area>tsv</area>
    <workgroup>alto</workgroup>
    <keyword>ALTO</keyword>
    <abstract>
      <t>This document specifies an extension to the base 
      Application-Layer Traffic Optimization (ALTO)
	Protocol that generalizes the concept of "endpoint properties",
	which have been tied to IP addresses so far,  
	to entities defined by a wide set of objects. 
	Further, these properties are presented as maps, similar to the
	network and cost maps in the base ALTO Protocol. 
	While supporting the endpoints and related Endpoint Property Service defined in RFC 7285,
	the ALTO Protocol is extended in two major directions. 
	First, from endpoints restricted to IP addresses to
	entities covering a wider and extensible set of objects; second, from
	properties for specific endpoints to entire entity property maps. These
	extensions introduce additional features that allow entities and property
	values to be specific to a given information resource. This is made possible
	by a generic and flexible design of entity and property types.</t>
    </abstract>
  </front>
  <middle>

    
    <section anchor="introduction" numbered="true" toc="default">
      <name>Introduction</name>
	 <t>The ALTO Protocol <xref target="RFC7285" format="default"/> introduces 
	 the concept of "properties" attached to "endpoint addresses". 
	 It also defines the Endpoint Property Service (EPS) to
	allow ALTO clients to retrieve those properties. While useful, the EPS as
	defined in <xref target="RFC7285" format="default"/> has at least three limitations,
	which are elaborated here.</t>
      <t>First, the EPS allows properties to be associated only with endpoints that
	are identified by individual communication addresses like IPv4 and IPv6
	addresses. It is reasonable to think that collections of endpoints
        identified by Provider-Defined Identifiers (PIDs) may also have properties. 
	Furthermore, recent ALTO use cases show that properties
   	of entities such as Abstract Network Elements as defined in
   	<xref target="I-D.ietf-alto-path-vector" format="default"/> 
     are also useful. 
	However, the current EPS is restricted to
	individual endpoints and cannot be applied to those entities.</t>

      <t>Second, the EPS only allows endpoints identified by global communication
addresses. However, an endpoint address may be a local IP address or an
anycast IP address that may not be globally unique. Additionally, an entity
such as a PID may have an identifier that is not globally unique. That is, the
same PID may be used in multiple network maps, while in each
network map, this PID points to a different set of addresses. 
</t>

      <t>Third, in <xref target="RFC7285" section="11.4" sectionFormat="of" format="default"/>, 
      the EPS is only defined as a POST-mode service. ALTO clients must request
the properties for an explicit set of endpoint addresses. By contrast,
<xref target="RFC7285" section="11.2.3" sectionFormat="of" format="default"/>
defines a GET-mode cost map resource that returns all available
costs, so an ALTO Client can retrieve a full set of costs once and then process cost
lookups without querying the ALTO server. 
<xref target="RFC7285" format="default"/> does not define a
similar service for endpoint properties. At first, a map of endpoint
properties might seem impractical because it could require enumerating the
property value for every possible endpoint. 
In particular, the number of endpoint addresses involved by
an ALTO server can be quite large. To avoid enumerating a large number 
of endpoint addresses inefficiently, the ALTO server might define 
properties for a sufficiently large subset of endpoints and then use an aggregation 
representation to reference endpoints in order to allow efficient enumeration. 
This is particularly true if blocks of
endpoint addresses with a common prefix have the same value
for a property. Entities in other domains may very well allow aggregated
representation and hence be enumerable as well.</t>

<t>To address these three limitations, this document specifies an
      ALTO Protocol extension for defining and retrieving ALTO properties:</t>
      <ul spacing="normal">
      
        <li>The first limitation is addressed by introducing a generic
concept called ALTO entity, which generalizes an endpoint and may represent
a PID, a network element, a cell in a cellular network, an Abstract
Network Element <xref target="I-D.ietf-alto-path-vector" format="default"/>, 
or other physical or logical objects involved in a network topology. Each entity is
included in a collection called an ALTO entity domain. Since each ALTO
entity domain includes only one type of entity, each entity domain can be
classified by the type of enclosed entities.</li>
        <li>The second limitation is addressed by using resource-specific
entity domains. A resource-specific entity domain contains entities that
are defined and identified with respect to a given ALTO information
resource, which provides scoping. For example, an entity domain containing
PIDs is identified with respect to the network map in which these PIDs are
defined. Likewise, an entity domain containing local IP addresses may be
defined with respect to a local network map.</li>
        <li>The third limitation is addressed by defining two new types of ALTO
	information resources: property map (<xref target="prop-map" format="default"/>) 
	and filtered property map (<xref target="filter-prop-map" format="default"/>). 
	The former is a resource that is requested using the HTTP GET method,
	returns the property values for all entities in one or more
	entity domains, and is analogous to a network map or a cost map in
	<xref target="RFC7285" section="11.2" sectionFormat="of" format="default"/>. 
	The latter is a resource that is requested using the HTTP POST method, 
	returns the values for
	sets of properties and entities requested by the client, and is analogous
	to a filtered network map or a filtered cost map.</li>
      </ul>
      
      <t>The entity property maps extension described in this document introduces a
number of features that are summarized in
<xref target="features-introduced-with-epm-extension" format="default"/>, 
where <xref target="TableUPFeatures" format="default"/> lists
the features and references the sections in this document that give 
their high-level and their normative descriptions.</t>
      
      <t>The protocol extension defined in this document can be augmented. New entity
domain types can be defined without revising the present specification. 
Similarly, new cost metrics and new endpoint properties can be
defined in other documents without revising the protocol specification
defined in <xref target="RFC7285" format="default"/>.</t>

 
      <section anchor="terminology" numbered="true" toc="default">
        <name>Terminology and Notation</name>
        <t>This document uses the following terms and abbreviations that will be
further defined in the document. While this document introduces the feature
"entity property map", it will use both the term "property map" and "entity
property map" to refer to this feature.</t>
        <dl spacing="normal">
          <dt>Transaction:</dt>
          <dd>A request/response exchange between an ALTO client and an ALTO server.</dd>

          <dt>Client:</dt>
          <dd>When used with a capital "C", this term refers to an ALTO client. 
          Note that expressions "ALTO client", "ALTO Client", and "Client" are equivalent. </dd>

          <dt>Server:</dt>
          <dd>When used with a capital "S", this term refers to an ALTO server.
          Note that expressions "ALTO server", "ALTO Server", and "Server" are equivalent.</dd>

          <dt>EPS:</dt>
          <dd>An abbreviation for Endpoint Property Service.</dd>
        </dl>
      <t>This document uses the notation defined in 
      <xref target="RFC7285" section="8.2" sectionFormat="of" format="default"/>.</t>  
      </section>
    </section>
    
    <section anchor="requirements-language" numbered="true" toc="default">
      <name>Requirements Language</name>
      <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", 
"<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>", "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this 
document are to be interpreted as described in BCP&nbsp;14 <xref target="RFC2119" format="default"/> <xref target="RFC8174" format="default"/> 
when, and only when, they appear in all capitals, as shown here.</t>
    </section>
    
    <section anchor="basic-features-of-the-unified-property-extension" numbered="true" toc="default">
      <name>Basic Features of the Entity Property Map Extension</name>
      <t>This section gives a high-level overview of the basic features involved in
ALTO entity property maps. It assumes the reader is familiar with the ALTO
Protocol <xref target="RFC7285" format="default"/>. The purpose of this extension is to convey
properties for objects that extend ALTO endpoints and are called ALTO
Entities, or entities for short.</t>
      <t>The features introduced in this section can be used standalone. However,
in some cases, these features may depend on particular information resources
and need to be defined with respect to them. To this end,
<xref target="advanced-features-of-the-unified-property-extension" format="default"/> introduces
additional features that extend the ones presented in this section.
</t>

      <section anchor="con-entity" numbered="true" toc="default">
        <name>Entity</name>
        <t>The concept of an ALTO entity generalizes the concept of an ALTO endpoint
defined in <xref target="RFC7285" section="2.1" sectionFormat="of" format="default"/>. 
An entity is an object that can be an
endpoint defined by its network address, but it can also be an object
that has a defined mapping to a set of one or more network addresses or an
object that is not even related to any network address. Thus, whereas all
endpoints are entities, not all entities are endpoints.</t>

<t>Examples of entities are:</t>
        <ul spacing="normal">
          <li>an ALTO endpoint 
          that represents an application or a host identified by a communication address 
          (e.g., an IPv4 or IPv6 address) in a network,</li>
          <li>a PID, defined in <xref target="RFC7285" format="default"/>, that has a provider-defined, human-readable
		identifier specified by an ALTO network map, which maps a PID to a set of
		IPv4 and IPv6 addresses,
		</li>
          <li>an Autonomous System (AS) that has an AS number (ASN) as its identifier
		and maps to a set of IPv4 and IPv6 addresses, 
		which is defined in <xref target="RFC9241" format="default"/>, 
		</li>
          <li>a country with a code specified in <xref target="ISO3166-1" format="default"/> 
          to which applications such as content delivery network (CDN) providers associate properties and capabilities,
          which is defined in <xref target="RFC9241" format="default"/>, 
          </li>
          <li>a TCP or UDP network flow that is identified by a 5-tuple
          specifying its source and destination addresses and port numbers,
          and the IP protocol (TCP or UDP),
		</li>
          <li>a routing element, as specified in <xref target="RFC7921" format="default"/>, that is associated with
routing capabilities information, or</li>
          <li>an Abstract Network Element, 
          as specified in <xref target="I-D.ietf-alto-path-vector" format="default"/>,
          that represents an abstraction of a network
		part such as a router, one or more links, a network domain, or their
		aggregation.</li>
        </ul>
<t>Some of the example entities listed above have already been documented as ALTO entities. 
The other examples are provided for illustration as potential entities. </t>
      </section>

      <section anchor="con-entity-domain" numbered="true" toc="default">
        <name>Entity Domain</name>
        <t>An entity domain defines a set of entities of the same semantic type. An
entity domain is characterized by a type and identified by a name.</t>
        <t>In this document, an entity is owned by exactly one entity domain name.
An entity identifier points to exactly one entity. If two entities in two
different entity domains refer to the same physical or logical object, they
are treated as different entities. For example, if an end host has both an IPv4
and an IPv6 address, these two addresses will be treated as two entities,
defined respectively in the "ipv4" and "ipv6" entity domains.</t>

        <section anchor="con-entity-domain-type" numbered="true" toc="default">
          <name>Entity Domain Type</name>
          <t>The entity domain type defines the semantics of the type of
   entity found in an entity domain.
	Entity domain types can be defined in different documents. For example: the
	present document defines entity domain types "ipv4" and "ipv6" in <xref target="inet-addr-domain" format="default"/>
        and "pid" 
	in <xref target="pid-domain" format="default"/>. 
        The entity domain type
        "ane", which defines Abstract Network Elements (ANEs), is introduced in
        <xref target="I-D.ietf-alto-path-vector" format="default"/>.
	The "countrycode" entity domain type that defines country
	codes is introduced in <xref target="RFC9241" format="default"/>. An entity
	domain type <bcp14>MUST</bcp14> be registered with IANA, as specified in 
	<xref target="dom-reg-process" format="default"/>.</t>
        </section>

        <section anchor="con-entity-domain-name" numbered="true" toc="default">
          <name>Entity Domain Name</name>
          <t>
		In this document, the identifier of an entity domain is mostly called "entity domain name". 
		The identifier of an entity domain is scoped to an ALTO server. 
		An entity domain identifier can sometimes be identical to the identifier 
		of its relevant entity domain type.  
                This is the case when the entities of a domain have an
                identifier that points to the same object throughout all the
                information resources of the Server that are providing entity properties
                for this domain.  For
		example, a domain of type "ipv4" containing entities that are identified by a public
		IPv4 address can be named "ipv4" because its entities are uniquely identified
		by all the Server resources.</t>
 
          <t>In some cases, the name of an entity domain cannot be 
           simply its entity domain type. 
		Indeed, for some domain types, entities are defined relative to a given
		information resource. This is the case for entities of domain type "pid". A
		PID is defined relative to a network map. For example, an entity "mypid10" of
		domain type "pid" may be defined in a given network map and be undefined in
		other network maps. The entity "mypid10" may even be defined in two different network
		maps, and it may map in each of these network maps to a different set of endpoint
		addresses. In this case, naming an entity domain only by its type "pid" does
		not guarantee that its set of entities is owned by exactly one entity domain.</t>
          <t>Sections <xref target="rsed-name" format="counter"/> and 
          <xref target="domain-names" format="counter"/> 
          describe how a domain is uniquely identified across the ALTO
		server by a name that associates the domain type and the related information
		resource.</t>
        </section>
      </section>

      <section anchor="con-property" numbered="true" toc="default">
        <name>Entity Property Type</name>
        <t>An entity property defines a property of an entity. This is similar to the
endpoint property defined in <xref target="RFC7285" section="7.1" sectionFormat="of" format="default"/>. An entity property
can convey either network-aware or network-agnostic information. Similar to
an entity domain, an entity property is characterized by a type and
identified by a name. An entity property type <bcp14>MUST</bcp14> be registered with 
IANA, as specified in <xref target="IANAEntityProp" format="default"/>.</t>
        <t>Below are listed some examples with real and fictitious entity domain and property
names:</t>
        <ul spacing="normal">
          <li>an entity in the "ipv4" domain type may have a property whose value is an
Autonomous System (AS) number indicating the AS to which this IPv4 address
belongs and another property named "countrycode" indicating a country code mapping
to this address,</li>
          <li>an entity identified by its country code in the entity domain type
"countrycode", defined in <xref target="RFC9241" format="default"/>, may
have a property indicating what delivery protocol is used by a CDN, or</li>
          <li>an entity in the "netmap1.pid" domain may have a property that indicates
the central geographical location of the endpoints it includes.</li>
        </ul>
        <t>It should be noted that some identifiers may be used for both an entity
domain type and a property type. For example:</t>
        <ul spacing="normal">
          <li>the identifier "countrycode" may point to both the entity domain type
"countrycode" and the fictitious property type "countrycode".</li>
          <li>the identifier "pid" may point to both the entity domain type "pid" and the
property type "pid".</li>
        </ul>
        <t>Likewise, the same identifier may point to both a domain name and a property
name. For example: the identifier "netmap10.pid" may point to either the
domain defined by the PIDs of network map "netmap10" or to a property that
returns, for an entity defined by its IPv4 address, the PID of "netmap10" that
contains this entity. Such cases are further explained in
<xref target="advanced-features-of-the-unified-property-extension" format="default"/>.</t>
      </section>

      <section anchor="con-propmap" numbered="true" toc="default">
        <name>New Information Resource and Media Type: ALTO Property Map</name>
        <t>This document introduces a new ALTO information resource named property map.
An ALTO property map provides a set of properties for one or more sets of
entities. A property may apply to different entity domain types and names.
For example, an ALTO property map may define the "ASN" property for both
"ipv4" and "ipv6" entity domains.</t>
        <t>The present extension also introduces a new media type.</t>
        <t>This document uses the same definition of an information resource as 
<xref target="RFC7285" section="9.1" sectionFormat="of" format="default"/>. ALTO uses media types to uniquely indicate the data
format used to encode the content to be transmitted between an ALTO server
and an ALTO client in the HTTP entity body. In the present case, an ALTO
property map resource is
defined by the media type "application/alto-propmap+json".</t>
        <t>A property map can be queried as a GET-mode resource, thus conveying all
properties for all entities indicated in its capabilities. It can also be
queried as a POST-mode resource, thus conveying a selection of properties for 
a selection of entities.</t>
      </section>
    </section>

    
    <section anchor="advanced-features-of-the-unified-property-extension" numbered="true" toc="default">
      <name>Advanced Features of the Entity Property Map Extension</name>
      <t>This section gives a high-level overview of the advanced features
   involved in ALTO entity property maps. Most of these features 
extend the features defined in 
<xref target="basic-features-of-the-unified-property-extension" format="default"/>.</t>

      <section anchor="entity-identifier-and-entity-domain" numbered="true" toc="default">
        <name>Entity Identifier and Entity Domain Name</name>        
        <t>In <xref target="RFC7285" format="default"/>, an endpoint has an identifier that is explicitly associated
with the "ipv4" or "ipv6" address domain. Examples are "ipv4:192.0.2.14" and
"ipv6:2001:db8::12".</t>
	<t>In this document, example IPv4 and IPv6 addresses and prefixes are taken
	from the address ranges reserved for documentation by 
	<xref target="RFC5737" format="default"/> and 
	<xref target="RFC3849" format="default"/>.
	</t>
        <t>In this document, an entity must be owned by exactly one entity
   domain name, and an entity identifier must point to exactly one
   entity.  To ensure this, an entity identifier is explicitly attached
   to the name of its entity domain, and an entity domain type
   characterizes the semantics and identifier format of its entities. 
</t>
        <t>The encoding format of an entity identifier is further specified in
<xref target="entity-addrs" format="default"/> of this document.</t>
        <t>For instance:</t>
        <ul spacing="normal">
          <li>if an entity is an endpoint with IPv4 address
"192.0.2.14", its identifier is associated with entity domain name "ipv4" and is
"ipv4:192.0.2.14";</li>
          <li>if an entity is a PID named "mypid10" in network map resource "netmap2",
its identifier is associated with entity domain name "netmap2.pid" and is
"netmap2.pid:mypid10".</li>
        </ul>
      </section>

      <section anchor="rsed-name" numbered="true" toc="default">
        <name>Resource-Specific Entity Domain Name</name>
        <t>Some entities are defined and identified uniquely and globally 
        in the context of an ALTO server. This is the
case, for instance, when entities are endpoints that are identified by a
reachable IPv4 or IPv6 address. The entity domain for such entities can be
globally defined and named "ipv4" or "ipv6". Those entity domains are called
resource-agnostic entity domains in this document, as they are not associated
with any specific ALTO information resources.</t>
        <t>Some other entities and entity types are only defined relative to a given
information resource. This is the case for entities of domain type "pid",
which can only be understood with respect to the network map where they are
defined. For example, a PID named "mypid10" may be defined to represent a set
S1 of IP addresses in a network map resource named "netmap1". Another network
map "netmap2" may use the same name "mypid10" and define it to represent
another set S2 of IP addresses. The identifier "pid:mypid10" may thus point
to different objects because the information on the originating information
resource is lost.</t>
        <t>To solve this ambiguity, the present extension introduces the concept of
resource-specific entity domain. This concept applies to domain types where
entities are defined relative to a given information resource. It can also
apply to entity domains that are defined locally, such as local networks of
objects identified with a local IPv4 address.</t>
        <t>In such cases, an entity domain type is explicitly associated with an
identifier of the information resource where these entities are defined. Such
an information resource is referred to as the "specific information
resource". Using a resource-aware entity domain name, an ALTO property map
can unambiguously identify distinct entity domains of the same type, on which
entity properties may be queried. Examples of resource-specific entity domain
names may look like "netmap1.pid" or "netmap2.pid". Thus, a name association
such as "netmap1.pid:mypid10" and "netmap2.pid:mypid10" distinguishes
the two abovementioned PIDs that are both named "mypid10" but in two
different resources, "netmap1" and "netmap2".</t>
        <t>An information resource is defined in the scope of an ALTO Server and so is
an entity domain name. The format of a resource-specific entity domain name
is further specified in <xref target="domain-names" format="default"/>.</t>
      </section>

      <section anchor="rsep" numbered="true" toc="default">
        <name>Resource-Specific Entity Property Value</name>
        <t>Like entity domains, some types of properties are defined relative to an
information resource. That is, an entity may have a property of a given type
whose values are associated with different information resources.</t>

        <t>For example, suppose entity "192.0.2.34" defined in the "ipv4" domain has a
property of type "pid" whose value is the PID to which address "192.0.2.34"
is attached in a network map. The mapping of network addresses to PIDs is
specific to a network map and probably different from one network map
resource to another one. Thus, if a property "pid" is defined for entity
"192.0.2.34" in two different network maps "netmap1" and "netmap2", the value
for this property can be a different value in "netmap1" and
"netmap2".</t>

        <t>To support information-resource-dependent property values, this document uses
the same approach as in Section <xref target="RFC7285" section="10.8.1" sectionFormat="bare"> 
"Resource-Specific Endpoint Properties"</xref> of <xref target="RFC7285" format="default"/>. When a property value depends on a
given information resource, the name of this property <bcp14>MUST</bcp14> be explicitly
associated with the information resource that defines it.</t>
        <t>For example, the property "pid" queried on entity "ipv4:192.0.2.34" and
defined in both "netmap1" and "netmap2" can be named "netmap1.pid" and
"netmap2.pid". This allows a Client to get a property of the same type but
defined in different information resources with a single query.
Specifications for the property name format are provided in <xref target="def-property" format="default"/>.</t>
      </section>
  
 	<section anchor="con-hni" numbered="true" toc="default">
        <name>Entity Hierarchy and Property Inheritance</name>
        <t>For some domain types, there is an underlying structure that allows entities to 
	be efficiently grouped into a set and be defined by the identifier of this set. 
	This is the case for domain types "ipv4" and "ipv6",
	where individual Internet addresses can be grouped in blocks. When the same
	property value applies to a whole set, a Server can define a property for the
	identifier of this set instead of enumerating all the entities and their
	properties. This allows a substantial reduction of transmission payload both
	for the Server and the Client. For example, all the entities included in the
	set defined by the address block "ipv6:2001:db8::1/64" share the same
	properties and values defined for this block.</t>
        <t>Additionally, entity sets sometimes are related by inclusion, hierarchy, or
	other relations. This allows defining inheritance rules for entity properties
	that propagate properties among related entity sets. The Server and the
	Client can use these inheritance rules for further payload savings. Entity
	hierarchy and property inheritance rules are specified in the documents that
	define the applicable domain types. The present document defines these rules
	for the "ipv4" and "ipv6" domain types.</t>
        <t>For applicable domain types, this document introduces entity property
	inheritance rules with the following concepts: entity hierarchy, property
	inheritance, and property value unicity. A detailed specification of entity
	hierarchy and property inheritance rules is provided in
	<xref target="def-hierarchy-and-inheritance" format="default"/>.</t>
 
        <section anchor="entity-hierarchy" numbered="true" toc="default">
          <name>Entity Hierarchy</name>
          <t>An entity domain may allow the use of a single identifier to identify a set of
		related individual entities. For example, a Classless Inter-Domain Routing 
                (CIDR) block can be used to identify a set
		of IPv4 or IPv6 entities. A CIDR block is called a hierarchical entity
		identifier, as it can reflect inclusion relations among entity sets. 
		That is, in an entity hierarchy, "supersets" are defined at upper levels 
		and include "subsets" defined at lower levels. 
		For example, the CIDR "ipv4:192.0.1.0/24" includes all the individual IPv4
		entities identified by the CIDR "ipv4:192.0.1.0/26". 
		This document will sometimes use the term "hierarchical address" 
		to refer to a hierarchical entity identifier. </t>
        </section>

	<section anchor="property-inheritance" numbered="true" toc="default">
	<name>Property Inheritance</name>
	
     <t>A property may be defined for a hierarchical entity identifier, while it may
	be undefined for individual entities covered by this identifier. In this
	case, these individual entities inherit the property value defined for the
	identifier that covers them. For example, suppose a property map defines a
	property P for which it assigns value V1 only for the hierarchical entity
	identifier "ipv4:192.0.1.0/24" but not for individual entities in this block.
	Suppose also that inheritance rules are specified for CIDR blocks in the
	"ipv4" domain type. When receiving this property map, a Client can infer that
	entity "ipv4:192.0.1.1" inherits the property value V1 of block
	"ipv4:192.0.1.0/24" because the address "ipv4:192.0.1.1" is included in the
	CIDR block "ipv4:192.0.1.0/24".</t>
	          <t>Property value inheritance rules also apply among entity sets. A property map
	may define values for an entity set belonging to a hierarchy but not for
	"subsets" that are covered by this set identifier. In this case, inheritance
	rules must specify how entities in "subsets" inherit property values from
	their "superset". 
	For instance, suppose a property P is defined only for the entity set defined 
	by address block "ipv4:192.0.1.0/24". We know that entity set "ipv4:192.0.1.0/30" 
	is included in "ipv4:192.0.1.0/24". Therefore, the entities of "ipv4:192.0.1.0/30" 
	may inherit the value of property P from set "ipv4:192.0.1.0/24" 
	if an inheritance rule from "ipv4" CIDR blocks to included "ipv4" CIDR blocks is specified.</t>
   </section>

        <section anchor="property-value-unicity" numbered="true" toc="default">
          <name>Property Value Unicity</name>
          <t>The inheritance rules must ensure that an entity belonging to a hierarchical
	set of entities inherits no more than one property value, for the sake of
	consistency. Indeed, a property map may define a property for a hierarchy of
	entity sets that inherits property values from one or more supersets (located at upper
	levels). On the other hand, a property value defined for a subset (located at a lower
	level) may be different from the value defined for a superset. In such a case,
	subsets may potentially end up with different property values. This may be
	the case for address blocks with increasing prefix length, on which a property
	value becomes increasingly accurate and thus may differ. For example, a
	fictitious property such as "geo-location" or "average transfer volume" may
	be defined at a progressively finer grain for lower-level subsets of entities defined with
	progressively longer CIDR prefixes. It seems more interesting to have
	property values of progressively higher accuracy. A unicity rule applied to
	the entity domain type must specify an arbitration rule among the different
	property values for an entity. An example illustrating the need for such
	rules is provided in <xref target="inet-inheritance" format="default"/>.</t>
        </section>
      </section>

      <section anchor="applicable-entity-domains-and-properties-in-the-property-map-capabilities" numbered="true" toc="default">
        <name>Supported Properties for Entity Domains in Property Map Capabilities</name>
        <t>A property type is not necessarily applicable to any domain type, or an ALTO
	Server may choose not to provide a property for all applicable domains. For
	instance, a property type reflecting link bandwidth is likely not defined for 
	entities of a domain of type "countrycode". Therefore, an ALTO server
	providing property maps needs to specify the properties that can be queried
	on the different entity domains it supports.</t>
        <t>This document explains how the Information Resource Directory (IRD)
	capabilities of a property map resource unambiguously expose which properties
	a Client can query on a given entity domain:</t>
        <ul spacing="normal">
          <li>a field named "mappings" lists the names of the entity domains supported by
	the property map, and</li>
          <li>for each listed entity domain, a list of the names of the applicable
	properties is provided.</li>
        </ul>
        <t>An example is provided in <xref target="ird-example" format="default"/>. 
        The "mappings" field associates
	entity domains and properties that can be resource-agnostic or
	resource-specific. This allows a Client to formulate compact and unambiguous
	entity property queries, possibly relating to one or more information
	resources. In particular:</t>
        <ul spacing="normal">
          <li>it prevents a Client from querying a property for entity domains for which it is not
		defined;</li>
          <li>it allows a Client to query, for an entity E, values for a property P that
		are defined in several information resources; and</li>
          <li>it allows a Client to query a property P on entities that are defined in
		several information resources.</li>
        </ul>
        <t>Further details are provided in <xref target="FullPropMapCapabilities" format="default"/>.</t>
      </section>

      <section anchor="def-ir" numbered="true" toc="default">
        <name>Defining Information Resource for Resource-Specific Entity Domains</name>
        <t>A Client willing to query entity properties belonging to a domain needs
to know how to retrieve these entities. To this end, the Client can look up
the "mappings" field exposed in IRD capabilities of a property map; see
<xref target="applicable-entity-domains-and-properties-in-the-property-map-capabilities" format="default"/>.
This field, in its keys, exposes all the entity domains supported by the
property map. The syntax of the entity domain identifier specified in
<xref target="domain-names" format="default"/> allows the client to infer whether the entity domain is
resource-specific or not. The Client can extract, if applicable, the
identifier of the specific resource, query the resource, and retrieve the 
entities. For example:
</t>
        <ul spacing="normal">
          <li>an entity domain named "netmap1.ipv4" includes the IPv4 addresses that
appear in the "ipv4" field of the endpoint address group of each PID in the
network map "netmap1" and that have no meaning outside "netmap1"
because, for instance, these are local addresses not reachable outside some private network;</li>
          <li>an entity domain named "netmap1.pid" includes the PIDs listed in network
map "netmap1"; and</li>
          <li>an entity domain named "ipv4" is resource-agnostic and covers all the
reachable IPv4 addresses.</li>
        </ul>
        
        <t>Besides, it is not possible to prevent a Server from mistakenly exposing  
        inappropriate associations of information resources and entity domain types. 
        To prevent failures due to invalid queries, it is necessary to inform the Client 
        which associations are allowed.   
		An informed Client will just ignore inappropriate associations exposed by a
		Server and avoid error-prone transactions with the Server.
		</t>
        <t>For example, the association "costmap3.pid" is not allowed for the following
reason: although a cost map exposes PID identifiers, it does not define the
set of addresses included in this PID. Neither does a cost map list all the
PIDs on which properties can be queried because a cost map only exposes PID
pairs on which a queried cost type is defined. Therefore, the resource
"costmap3" does not enable a Client to extract information on the existing
PID entities or on the addresses they contain.</t>
        <t>Instead, the cost map uses a network map where all the PIDs used in a cost
map are defined together with the addresses contained by the PIDs. This
network map is qualified in this document as the defining information
resource for the entity domain of type "pid", and this concept is explained in
<xref target="defining-information-resource-and-media-type" format="default"/>.</t>

	<section anchor="defining-information-resource-and-media-type" numbered="true" toc="default">
     <name>Defining Information Resource and Its Media Type</name>
     <t>For the reasons explained in <xref target="def-ir" format="default"/>,
     this document introduces the concept of "Defining Information Resource 
     and its Media Type".</t>
     
     <t>A defining information resource for an entity domain D is the information
	resource where entities of D are defined. That is, all the information on the
	entities of D can be retrieved in this resource. 
	
	A defining information resource is defined for resource-specific entity domains. 
	It does not exist for entity domains that are not resource-specific such as 
	"ipv4" or "ipv6". Neither does it exist for entity domains that are covering 
	entity identifiers already defined in other standardization documents, 
	as is the case for country code identifiers standardized in <xref target="ISO3166-1" format="default"/> 
	or AS numbers allocated by IANA. 
	
	This is useful for entity domain types that are by
	essence domain-specific, such as the domain type "pid". It is also
	useful for resource-specific entity domains constructed from
	resource-agnostic domain types, such as network-map-specific domains of local
	IPv4 addresses.</t>
	
     <t>The defining information resource of a resource-specific entity domain D, 
     when it exists, is unique and has the following characteristics:</t>
     
          <ul spacing="normal">
            <li>it has an entry in the IRD;</li>
            <li>it defines the entities of D;</li>
            <li>it does not use another information resource that defines these entities;</li>
            <li>it defines and exposes entity identifiers that are all persistent; and</li>
            <li>its media type is equal to the one that is specified for the
			defining information resource of an entity domain type.</li>
          </ul>
          <t>A fundamental characteristic of a defining information resource is its media type.
	There is a unique association between an entity domain type and the media
	type of its defining information resource. When an entity domain type allows associations 
	with defining information resources, the media type of the potential defining information 
	resource <bcp14>MUST</bcp14> be specified:</t>
	<ul spacing="normal">
	 <li>in the document that defines this entity domain type, and</li>
	 <li>in the "ALTO Entity Domain Types" IANA registry.</li>
	</ul>
          <t>When the Client wants to use a resource-specific entity domain, it needs to
be cognizant of the media type of its defining information resource. If the
Server exposes a resource-specific entity domain with a
noncompliant media type for the defining resource, the Client <bcp14>MUST</bcp14> ignore the
entities from that entity domain to avoid errors.</t>
</section>

	<section anchor="example-specific-ir-mediatype" numbered="true" toc="default">
          <name>Examples of Defining Information Resources and Their Media Types</name>
          <t>Here are examples of defining information resource types and their media
types associated with different entity domain types:</t>

          <ul spacing="normal">
            <li>For entity domain type "pid", the media type of the specific resource is
"application/alto-networkmap+json" because PIDs are defined in network map
resources.</li>

            <li>For entity domain types "ipv4" and "ipv6", the media type of the specific
resource is "application/alto-networkmap+json" because IPv4 and IPv6
addresses covered by the Server are defined in network map resources.</li>

            <li>For entities of domain type "ane"; <xref target="I-D.ietf-alto-path-vector" format="default"/> defines
entities named "ANE", where ANE stands for Abstract Network Element, and
the entity domain type "ane". An ANE may have a persistent identifier, say,
"entity-4", that is provided by the Server as a value of the
"persistent-entity-id" property of this ANE. Further properties may then be
queried on an ANE by using its persistent entity identifier. These properties are
available from a persistent property map that defines properties for a
specific "ane" domain. Together with the persistent identifier, the Server
also provides the property map resource identifier where the "ane" domain
containing "entity-4" is defined. The definition of the "ane" entity domain
containing "entity-4" is thus specific to the property map. Therefore, for
entities of domain type "ane" that have a persistent identifier, the media
type of the defining information resource is
"application/alto-propmap+json".</li>

            <li>Last, the entity domain types "asn" and "countrycode" defined in
<xref target="RFC9241" format="default"/> do not have a defining
information resource. Indeed, the entity identifiers in these two entity
domain types are already standardized in documents that the Client can use.</li>
          </ul>
        </section>        
      </section>
      
      <section anchor="def-ir-for-irsp" numbered="true" toc="default">
        <name>Defining Information Resources for Resource-Specific Property Values</name>
        <t>As explained in <xref target="rsep" format="default"/>, a property type may
take values that are resource-specific. This is the case for property type
"pid", whose values are by essence defined relative to a specific network
map. That is, the PID value returned for an IPv4 address is specific to the network
map defining this PID and may differ from one network map to another one.</t>
<t>Another example is provided in 
<xref target="RFC9241" format="default"/>,
which defines property type "cdni-capabilities". The value of this property is
specific to a Content Delivery Network Interconnection (CDNI) Advertisement resource, which provides a list of CDNI
capabilities. The property is provided for entity domain types "ipv4",
"ipv6", "asn", and "countrycode". However, a CDNI Advertisement resource does 
not define PID values for IPv4 addresses, while a network map does not define
CDNI capabilities for IPv4 addresses.</t>
<t>Similar to resource-specific entity domains, the Client needs to be
cognizant of appropriate associations of information resource and property
types. Therefore, when specifying and registering a property type whose
values are resource-specific, the media type of its defining information
resource needs to be specified. For example:</t>

<ul spacing="normal">
          <li>The media type of the defining information resource for property type "pid"
is "application/alto-networkmap+json".</li>
          <li>The media type of the defining information resource for property type
"cdni-capabilities" defined in <xref target="RFC9241" format="default"/>
is "application/alto-cdni+json".</li>
        </ul>
      </section>
    </section>
    
    <section anchor="protocol-specification-basic-data-types" numbered="true" toc="default">
      <name>Protocol Specification: Basic Data Types</name>
      
      <section anchor="def-domain" numbered="true" toc="default">
        <name>Entity Domain</name>
 
	<section anchor="domain-types" numbered="true" toc="default">
     <name>Entity Domain Type</name>
     <t>An entity domain has a type, which is uniquely identified by a string that
	<bcp14>MUST</bcp14> be no more than 64 characters, and <bcp14>MUST NOT</bcp14> contain characters other
	than US-ASCII alphanumeric characters (U+0030-U+0039, U+0041-U+005A, and
	U+0061-U+007A), the hyphen-minus ('-', U+002D), the colon (':', U+003A), 
	or the low line ('_', U+005F).</t>

	<t>The usage of colon (':', U+003A) <bcp14>MUST</bcp14> obey the rules below:</t>
	 <ul spacing="normal"> 
	 <li>The colon (':', U+003A) character <bcp14>MUST NOT</bcp14> appear more than once;</li>
	 <li>The colon character <bcp14>MUST NOT</bcp14> be used unless within the string "priv:";</li>	
	 <li>The string "priv:" <bcp14>MUST NOT</bcp14> be used unless it starts the string that identifies an entity domain type; and</li>
	 <li>For an entity domain type identifier with the "priv:" prefix, 
	 	an additional string (e.g., company identifier or random string) <bcp14>MUST</bcp14> follow "priv:" 
	 	to reduce potential collisions.</li>
	 </ul>
	
     <t>For example, the strings "ipv4", "ipv6", "pid", and "priv:example-test-edt",
     are valid entity domain types. "ipv4.anycast", "pid.local", and "priv:" are invalid.</t>

     <t>Although "_", "-", "__--" are valid entity domain types, 
	it is desirable to add characters, such as alphanumeric ones, 
	for better intelligibility. </t>

     <t>The type EntityDomainType is used in this document to denote a JSON string
meeting the preceding requirements.</t>

	<t>An entity domain type defines the semantics of a type of entity,
   independently of any specifying resource. All entity
   domain types that are not prefixed with "priv:" <bcp14>MUST</bcp14> be registered with IANA
   in the "ALTO Entity Domain Types" registry, defined in <xref target="IANADomain" format="default"/>, 
   following the procedure specified in <xref target="dom-reg-process" format="default"/> 
   of this document.
   The format of the entity identifiers (see <xref target="entity-addrs" format="default"/>) 
   in that entity domain type, as well as any hierarchical or inheritance rules 
   (see <xref target="def-hierarchy-and-inheritance" format="default"/>) for
   those entities, <bcp14>MUST</bcp14> be specified in the IANA registration.</t>

   <t>Entity domain type identifiers prefixed with "priv:" are reserved for Private Use
   (see <xref target="RFC8126" format="default"/>) without a need to register with IANA.
   The definition of a private-use entity domain type <bcp14>MUST</bcp14> apply the same way in all 
   property maps of an IRD where it is present. 
   </t>
 
     </section>
 
        <section anchor="domain-names" numbered="true" toc="default">
          <name>Entity Domain Name</name>
          <t>As discussed in <xref target="con-entity-domain" format="default"/>, 
          an entity domain is characterized by a type and identified by a name.</t>

          <t>This document distinguishes three categories of entity domains:
		resource-specific entity domains, resource-agnostic entity domains, and
		self-defined entity domains. Their entity domain names are constructed as
		specified in the following subsections.</t>
          <t>Each entity domain is identified by a unique entity domain name. 
          Borrowing the symbol "::=" from the Backus-Naur Form notation 
          <xref target="RFC5511" format="default"/>, 
          the format of an entity domain name is defined as follows:</t>
          <sourcecode type="rbnf"><![CDATA[
EntityDomainName ::= [ [ ResourceID ] '.' ] EntityDomainType
]]></sourcecode>

          <t>The presence and construction of the component</t>
           <sourcecode type="rbnf"><![CDATA[
                "[ [ ResourceID ] '.' ]"
]]></sourcecode>
          <t>depends on the category of entity domain.</t>

          <t>Note that the '.' separator is not allowed in EntityDomainType, and hence
		there is no ambiguity on whether an entity domain name refers to a
		resource-agnostic entity domain or a resource-specific entity domain.</t>
          <t>Note also that <xref target="RFC7285" section="10.1" sectionFormat="of" format="default"/> 
          specifies the format of the PID
		name, which is the format of the resource identifier including the following
		specification:</t>
          <blockquote>The '.' separator is reserved for future use and <bcp14>MUST NOT</bcp14> be
		used unless specifically indicated in this document, or an extension
		document.</blockquote>
          <t>The present extension keeps the format specification of
		<xref target="RFC7285" format="default"/>, hence the '.' separator <bcp14>MUST NOT</bcp14> 
		be used in an information resource identifier.</t>

     <section anchor="resource-specific-ED" numbered="true" toc="default">
            <name>Resource-Specific Entity Domain</name>
            <t>A resource-specific entity domain is identified by an entity domain name
constructed as follows. It <bcp14>MUST</bcp14> start with a resource identifier using the ResourceID
type defined in <xref target="RFC7285" section="10.2" sectionFormat="of" format="default"/>, followed by the '.' separator
(U+002E), followed by a string of the type EntityDomainType specified in
<xref target="domain-types" format="default"/>.</t>
            <t>For example, if an ALTO server provides two network maps "netmap-1" and
"netmap-2", these network maps can define two resource-specific domains of
type "pid", respectively identified by "netmap-1.pid" and "netmap-2.pid".</t>
          </section>
          <section anchor="resource-agnostic-ED" numbered="true" toc="default">
            <name>Resource-Agnostic Entity Domain</name>
            <t>A resource-agnostic entity domain contains entities that are identified
independently of any information resource. The identifier of a
resource-agnostic entity domain is simply the identifier of its entity domain
type. For example, "ipv4" and "ipv6" identify the two resource-agnostic
Internet address entity domains defined in <xref target="inet-addr-domain" format="default"/>.</t>
          </section>

          <section anchor="self-defined-ED" numbered="true" toc="default">
            <name>Self-Defined Entity Domain</name>
            <t>A property map can define properties for entities that are specific to a
unique information resource, which is the property map itself. This may be
the case when an ALTO Server provides properties for a set of entities that
are defined only in this property map, are not relevant to another one, and do
not depend on another specific resource.</t>
            <t>For example: a specialized property map may define a domain of type "ane",
defined in <xref target="I-D.ietf-alto-path-vector" format="default"/>, that contains a set of ANEs
representing data centers that each have a persistent identifier and are
relevant only to this property map.</t>
            <t>In this case, the entity domain is qualified as "self-defined". The
identifier of a self-defined entity domain can be of the format:</t>
            <sourcecode type="rbnf"><![CDATA[
    EntityDomainName ::= '.' EntityDomainType
]]></sourcecode>
            <t>where '.' indicates that the entity domain only exists within the property
map resource using it.</t>
            <t>A self-defined entity domain can be viewed as a particular case of
resource-specific entity domain, where the specific resource is the current
resource that uses this entity domain. In that case, for the sake of
simplification, the component ResourceID <bcp14>MUST</bcp14> be omitted in its entity
domain name.</t>
          </section>
        </section>
   <section anchor="entity-addrs" numbered="true" toc="default">
     <name>Entity Identifier</name>

	<t>Entities in an entity domain are identified by entity identifiers (EntityID) of
	the following format:
	</t>
          <sourcecode type="rbnf"><![CDATA[
EntityID ::= EntityDomainName ':' DomainTypeSpecificEntityID
]]></sourcecode>
     <t>Examples from the Internet address entity domains include individual IP
	addresses such as "net1.ipv4:192.0.2.14" and "net1.ipv6:2001:db8::12", as well
	as address blocks such as "net1.ipv4:192.0.2.0/26" and
	"net1.ipv6:2001:db8::/48".</t>

     <t>The format of the second part of an entity identifier,
   	DomainTypeSpecificEntityID, depends on the entity domain type and <bcp14>MUST</bcp14> be
   	specified when defining a new entity domain type and registering it with 
   	IANA.
	Identifiers <bcp14>MAY</bcp14> be hierarchical, and properties
	<bcp14>MAY</bcp14> be inherited based on that hierarchy. The rules defining any hierarchy or
	inheritance <bcp14>MUST</bcp14> be defined when the entity domain type is registered.
	</t>
          <t>The type EntityID is used in this document to denote a JSON string
representing an entity identifier in this format.</t>
          <t>Note that two entity identifiers with different, valid textual representations
may refer to the same entity, for a given entity domain. For example, the
strings "net1.ipv6:2001:db8::1" and "net1.ipv6:2001:db8:0:0:0:0:0:1" refer to
the same entity in the "ipv6" entity domain. Such equivalences should be
established by the object represented by DomainTypeSpecificEntityID. For
example, <xref target="RFC5952" format="default"/> establishes equivalence for IPv6 addresses, while
<xref target="RFC4632" format="default"/> does so for IPv4 addresses.</t>
        </section>
        <section anchor="def-hierarchy-and-inheritance" numbered="true" toc="default">
          <name>Hierarchy and Inheritance</name>
          <t>To simplify the representation, some types of entity domains allow the ALTO
Client and Server to use a hierarchical entity identifier format to represent
a block of individual entities. For instance, in an IPv4 domain "net1.ipv4",
a CIDR "net1.ipv4:192.0.2.0/26" covers 64 individual IPv4 entities. In this
case, the corresponding property inheritance rule <bcp14>MUST</bcp14> be defined for the
entity domain type. The hierarchy and inheritance rule <bcp14>MUST</bcp14> have no
ambiguity.</t>
        </section>
      </section>
      <section anchor="def-property" numbered="true" toc="default">
        <name>Entity Property</name>
        <t>Each entity property has a type to indicate the encoding and the semantics of
the value of this entity property, and has a name to identify it.</t>

   	<section anchor="def-property-type" numbered="true" toc="default">
          <name>Entity Property Type</name>
     <t>The type EntityPropertyType is used in this document to indicate a string
	denoting an entity property type. The string <bcp14>MUST</bcp14> be no more than 32
	characters, and it <bcp14>MUST NOT</bcp14> contain characters other than US-ASCII
	alphanumeric characters (U+0030-U+0039, U+0041-U+005A, and U+0061-U+007A),
	the hyphen-minus ('-', U+002D), the colon (':', U+003A), or the low line ('_',
	U+005F). Note that the '.' separator is not allowed because it is reserved to
	separate an entity property type and an information resource identifier when
	an entity property is resource-specific.</t>

	<t>While <xref target="domain-types" format="default"/> allows the use of the  
	character ":" with restrictions on entity domain identifiers, 
	it can be used without restrictions on entity property type identifiers. 
	This relates to <xref target="RFC7285" format="default"/>, where a Server 
	can define properties for endpoints "ipv4" and "ipv6". In the present extension, 
	there is a mapping of ALTO entity domain types "ipv4" and "ipv6" to ALTO 
	address types "ipv4" and "ipv6". Properties defined for "ipv4" and "ipv6" 
	endpoints should be reusable on "ipv4" and "ipv6" entities. Forbidding the 
	usage of ":" in a non-private entity property type identifier would not 
	allow the use of properties previously defined for "ipv4" and "ipv6" endpoints 
	because their identifiers would be invalid.</t>

	<t>Although ":" or "_::-" are valid entity domain types, 
	it is desirable to add characters, such as alphanumeric ones, 
	for better intelligibility. </t>
 
     <t>Identifiers prefixed with "priv:" are reserved for Private Use 
     <xref target="RFC8126" format="default"/>
	without a need to register with IANA. All other identifiers for entity
	property types <bcp14>MUST</bcp14> be registered in the "ALTO Entity
	Property Types" registry, which is defined in <xref target="IANAEntityProp" format="default"/>. 
	The intended semantics of the entity property type <bcp14>MUST</bcp14> be specified in the IANA registration.
	</t>
	<t>For an entity
	property identifier with the "priv:" prefix, an additional string (e.g.,
	company identifier or random string) <bcp14>MUST</bcp14> follow the prefix to reduce
	potential collisions, that is, the string "priv:" alone is not a valid
	entity property identifier.
	 The definition of a private-use entity property type must apply 
	 the same way in all property maps of an IRD where it is present. 
	</t>
  
          <t>To distinguish from the endpoint property type, the entity property type has
the following characteristics:</t>
          <ul spacing="normal">
            <li>Some entity property types are applicable only to entities in particular entity
domain types. For example, the property type "pid" is applicable to
entities in the entity domain types "ipv4" or "ipv6", while it is not
applicable to entities in an entity domain of type "pid".</li>
            <li>The intended semantics of the value of an entity property may also depend
		on the entity domain type. For example, suppose that a property named
		"geo-location" is defined as the coordinates of a point and is encoded as:
		"latitude longitude [altitude]." When applied to an entity that represents
		a specific host computer and identified by an address in an entity domain of
		type "ipv4" or "ipv6", the "geo-location" property would define the host's
		location. However, when applied to an entity in a domain of type "pid", the
		property would indicate a location representative of all hosts in this
		"pid" entity.</li>
          </ul>
        </section>
        
        <section anchor="entity-property-name" numbered="true" toc="default">
          <name>Entity Property Name</name>
          <t>Each entity property is identified by an entity property name, which is a
string of the following format:</t>
          <sourcecode type=""><![CDATA[
EntityPropertyName ::= [ [ ResourceID ] '.' ] EntityPropertyType
]]></sourcecode>
          <t>Similar to the endpoint property type defined in <xref target="RFC7285" section="10.8" sectionFormat="of" format="default"/>,
each entity property may be defined by either the property map itself
(self-defined) or some other specific information resource
(resource-specific).</t>
          <t>The entity property name of a resource-specific entity property starts with a
string of the type ResourceID defined in <xref target="RFC7285" format="default"/>, followed by the '.'
separator (U+002E) and an EntityDomainType typed string. For example, the
"pid" properties of an "ipv4" entity defined by two different maps
"net-map-1" and "net-map-2" are identified by "net-map-1.pid" and
"net-map-2.pid" respectively.</t>
          <t>The specific information resource of an entity property may be the current
information resource itself, that is, the property map defining the property.
In that case, the ResourceID in the property name <bcp14>SHOULD</bcp14> be omitted. For
example, the property name ".ASN" applied to an entity identified by its
IPv4 address indicates the AS number of the AS that "owns" the entity, where
the returned AS number is defined by the property map itself.</t>
        </section>

        <section anchor="format-entity-property-value" numbered="true" toc="default">
          <name>Format for Entity Property Value</name>
          <t><xref target="RFC7285" section="11.4.1.6" sectionFormat="of" format="default"/> specifies that an implementation of the
Endpoint Property Service specified in <xref target="RFC7285" format="default"/> <bcp14>SHOULD</bcp14> assume that the
property value is a JSONString and fail to parse if it is not. This document
extends the format of a property value by allowing it to be a JSONValue
instead of just a JSONString.</t>
        </section>
      </section>
    </section>

    <section anchor="entity-domain-types" numbered="true" toc="default">
      <name>Entity Domain Types Defined in This Document</name>
      <t>The definition of each entity domain type <bcp14>MUST</bcp14> include
the entity domain type name and the domain-specific entity identifiers.
The definition of an entity domain type
<bcp14>MAY</bcp14> include hierarchy and inheritance semantics. This
document defines three initial entity domain types as follows.</t>
      <section anchor="inet-addr-domain" numbered="true" toc="default">
        <name>Internet Address Domain Types</name>
        <t>The document defines two entity domain types (IPv4 and IPv6) for Internet
addresses. Both types are resource-agnostic entity domain types and hence
define corresponding resource-agnostic entity domains as well. Since the two
domains use the same hierarchy and inheritance semantics, we define the
semantics together, instead of repeating for each.</t>

        
        <section anchor="ipv4-domain" numbered="true" toc="default">
          <name>Entity Domain Type: IPv4</name>
          <section anchor="ipv4-edt" numbered="true" toc="default">
            <name>Entity Domain Type Identifier</name>
            <t>The identifier for this entity domain type is "ipv4".</t>
          </section>
          <section anchor="ipv4-dsei" numbered="true" toc="default">
            <name>Domain-Specific Entity Identifiers</name>
            <t>Individual addresses are strings as specified by the IPv4address rule in
		<xref target="RFC3986" section="3.2.2" sectionFormat="of" format="default"/>; 
		hierarchical addresses are strings as specified by the prefix notation in
		<xref target="RFC4632" section="3.1" sectionFormat="of" format="default"/>. 
		An
		individual Internet address and the corresponding full-length prefix are
		considered aliases for the same entity on which to define properties. 
		Thus, "ipv4:192.0.2.0" and "ipv4:192.0.2.0/32" are equivalent.</t>
          </section>
        </section>

        
        <section anchor="ipv6-domain" numbered="true" toc="default">
          <name>Entity Domain Type: IPv6</name>
          <section anchor="ipv6-edt" numbered="true" toc="default">
            <name>Entity Domain Type Identifier</name>
            <t>The identifier for this Entity Domain Type is "ipv6".</t>
          </section>

          <section anchor="ipv6-dsei" numbered="true" toc="default">
            <name>Domain-Specific Entity Identifiers</name>
            
            <t>Individual addresses are strings as specified by 
   		 <xref target="RFC5952" section="4" sectionFormat="of" format="default"/>;
		hierarchical addresses are strings as specified by 
		 IPv6 address prefixes notation in 
		<xref target="RFC4291" section="2.3" sectionFormat="of" format="default"/>. 
		
		To define properties, an individual Internet address and the
		corresponding 128-bit prefix are considered aliases for the same entity. That
		is, "ipv6:2001:db8::1" and "ipv6:2001:db8::1/128" are equivalent and have
		the same set of properties.</t>
          </section>
        </section>

        <section anchor="inet-inheritance" numbered="true" toc="default">
          <name>Hierarchy and Inheritance of Internet Address Domains</name>
          <t>Both Internet address domains allow property values to be inherited.
		Specifically, if a property P is not defined for a specific Internet address
		I, but P is defined for a hierarchical Internet address C that 
		represents a set of addresses containing I, then the address I inherits 
		the value of P defined for the hierarchical address C. 
		If more than one such hierarchical addresses define a
		value for P, I inherits the value of P in the hierarchical address with the
		longest prefix. Note that this longest prefix rule ensures no multiple value
		inheritances, and hence no ambiguity.</t>
          <t>Hierarchical addresses can also inherit properties. For instance, if a property P:</t>
            <ul>
              <li>is not
		  defined for the hierarchical address C,</li>
              <li>
                <t>but is defined for 
		   a set of hierarchical addresses where:</t> 
                <ul>
                  <li>each address C' in the set 
		      contains all IP addresses in C, and</li>
                  <li>C' has a shorter prefix length than C,</li>
                </ul>
              </li>
             </ul> 
	  <t>then C <bcp14>MUST</bcp14> inherit the property P from the C' having the longest prefix length. 
		</t>
          <t>As an example, suppose that a server defines a property P for the following
entities:</t>
          <table anchor="fig_def-prop-val">
            <name>Defined Property Values</name>
            <tbody>
              <tr>
                <td>ipv4:192.0.2.0/26:</td>
                <td>P=v1</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.0/28:</td>
                <td>P=v2</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.0/30:</td>
                <td>P=v3</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.0:</td>
                <td>P=v4</td>
              </tr>
            </tbody> 
          </table>
          <t>Then the following entities have the indicated values:</t>
          <table anchor="fig_inh-prop-val"> 
            <name>Inherited Property Values</name>
            <tbody>
              <tr>
                <td>ipv4:192.0.2.0:</td>
                <td>P=v4</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.1:</td>
                <td>P=v3</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.16:</td>
                <td>P=v1</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.32:</td>
                <td>P=v1</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.64:</td>
                <td>(not defined)</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.0/32:</td>
                <td>P=v4</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.0/31:</td>
                <td>P=v3</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.0/29:</td>
                <td>P=v2</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.0/27:</td>
                <td>P=v1</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.0/25:</td>
                <td>(not defined)</td>
              </tr>
            </tbody>
          </table>

<t>An ALTO server <bcp14>MAY</bcp14> explicitly indicate a property as not having a value for
a particular entity. That is, a server <bcp14>MAY</bcp14> say that property P of entity X is
"defined to have no value" instead of "undefined". To indicate "no value",
a server <bcp14>MAY</bcp14> perform different behaviors:</t>
          <ul spacing="normal">
            <li>
		If entity X would inherit a value for property P, and if the ALTO server decides to 
		say that "X has no value for P", then the 
      	ALTO server <bcp14>MUST</bcp14> return a "null" value for that property on X. In this
      	case, the ALTO client <bcp14>MUST</bcp14> recognize the JSON "null" value as "no value"
      	and interpret it as "do not apply the inheritance rules for this property on X".
		</li>
            <li>If the entity would not inherit a value, then the ALTO server <bcp14>MAY</bcp14> return
		"null" or just omit the property. In this case, the ALTO client cannot infer
		the value for this property of this entity from the Inheritance rules. Thus, the
		client <bcp14>MUST</bcp14> interpret that this property has no value.</li>
          </ul>
          <t>If the ALTO server does not define any properties for an entity, then the
server <bcp14>MAY</bcp14> omit that entity from the response.</t>
        </section>

        <section anchor="defining-IR-media-type-ipv4-ipv6" numbered="true" toc="default">
          <name>Defining Information Resource Media Type for Domain Types IPv4 and IPv6</name>
          <t>Entity domain types "ipv4" and "ipv6" both allow the definition of resource-specific
entity domains. When resource-specific domains are defined with entities of
domain type "ipv4" or "ipv6", the defining information resource for an entity
domain of type "ipv4" or "ipv6" <bcp14>MUST</bcp14> be a network map. The media type of a
defining information resource is therefore:</t>
          <t>application/alto-networkmap+json</t>
        </section>
      </section>

      <section anchor="pid-domain" numbered="true" toc="default">
        <name>Entity Domain Type: PID</name>
        <t>The PID entity domain associates property values with the PIDs in a network map.
Accordingly, this entity domain always depends on a network map.</t>
        <section anchor="entity-domain-type-identifier" numbered="true" toc="default">
          <name>Entity Domain Type Identifier</name>
          <t>The identifier for this Entity Domain Type is "pid".</t>
        </section>

        <section anchor="domain-specific-entity-identifiers" numbered="true" toc="default">
          <name>Domain-Specific Entity Identifiers</name>
          <t>The entity identifiers are the PID names of the associated network map.</t>
        </section>
        <section anchor="hierarchy-and-inheritance" numbered="true" toc="default">
          <name>Hierarchy and Inheritance</name>
          <t>There is no hierarchy or inheritance for properties associated with PIDs.</t>
        </section>

        <section anchor="defining-IR-media-type-pid" numbered="true" toc="default">
          <name>Defining Information Resource Media Type for Domain Type PID</name>
          <t>The entity domain type "pid" allows the definition of resource-specific entity
domains. When resource-specific domains are defined with entities of domain
type "pid", the defining information resource for entity domain type "pid"
<bcp14>MUST</bcp14> be a network map. The media type of a defining information resource is
therefore:</t>
          <t>application/alto-networkmap+json</t>
        </section>

        <section anchor="relationship-to-internet-addresses-domains" numbered="true" toc="default">
          <name>Relationship To Internet Addresses Domains</name>
          <t>The PID domain and the Internet address domains are completely independent;
the properties associated with a PID have no relation to the properties
associated with the prefixes or endpoint addresses in that PID. An ALTO
server <bcp14>MAY</bcp14> choose to assign all the properties of a PID to the prefixes in
that PID or only some of these properties.</t>
          <t>For example, suppose "PID1" consists of the prefix "ipv4:192.0.2.0/24" and
has the property P with value v1. The Internet address entities
"ipv4:192.0.2.0" and "ipv4:192.0.2.0/24" in the IPv4 domain <bcp14>MAY</bcp14> have a value
for the property P, and if they do, it is not necessarily v1.</t>
        </section>
      </section>

      <section anchor="internet-address-properties-vs-pid-properties" numbered="true" toc="default">
        <name>Internet Address Properties vs. PID Properties</name>
        <t>Because the Internet address and PID domains relate to completely distinct domain types, the
question may arise as to which entity domain type is the best for a property. In general, the
Internet address domain types are <bcp14>RECOMMENDED</bcp14> for properties that are closely related
to the Internet address or are associated with, and inherited through, hierarchical addresses.</t>
        <t>The PID domain type is <bcp14>RECOMMENDED</bcp14> for properties that arise from the definition of
the PID, rather than from the Internet address prefixes in that PID.</t>
        <t>For example, because Internet addresses are allocated to service providers by
blocks of prefixes, an "ISP" property would be best associated with Internet
address domain types. On the other hand, a property that explains why a PID
was formed, or how it relates to a provider's network, would best be
associated with the PID domain type.</t>
      </section>
    </section>

    
    <section anchor="prop-map" numbered="true" toc="default">
      <name>Property Map</name>
      <t>A property map returns the properties defined for all entities in one or more
	domains, e.g., the "location" property of entities in a domain of type "pid", and the
	"ASN" property of entities in domains of types "ipv4" and "ipv6". 
	<xref target="prop-map-example" format="default"/> gives an example of a 
	property map request and its response.
	</t>
	<t>Downloading the whole property map is a way for the Client to obtain the entity identifiers 
	that can be used as input for a filtered property map request. 
	However, a whole property map may be too voluminous for a Client that 
	only wants the list of applicable entity identifiers. How to obtain the list of entities 
	of a filtered property map in a simplified response is specified in 
	<xref target="filter-prop-map" format="default"/>.
	</t>
	
      <section anchor="FullPropMapMediaType" numbered="true" toc="default">
        <name>Media Type</name>
        <t>The media type of a property map is "application/alto-propmap+json".</t>
      </section>

      <section anchor="http-method" numbered="true" toc="default">
        <name>HTTP Method</name>
        <t>The property map is requested using the HTTP GET method.</t>
      </section>

      <section anchor="accept-input-parameters" numbered="true" toc="default">
        <name>Accept Input Parameters</name>
        <t>A property map has no Accept Input parameters.</t>
      </section>

      <section anchor="FullPropMapCapabilities" numbered="true" toc="default">
        <name>Capabilities</name>
        <t>The capabilities are defined by an object of type PropertyMapCapabilities:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
    object {
      EntityPropertyMapping mappings;
    } PropertyMapCapabilities;
    
    object-map {
      EntityDomainName -> EntityPropertyName<1..*>;
    } EntityPropertyMapping
]]></artwork>
        <t>with fields:</t>
        <dl newline="false" spacing="normal">
          <dt>mappings:</dt>
          <dd>
  A JSON object whose keys are names of entity domains and values are the
supported entity properties of the corresponding entity domains.</dd>
        </dl>
      </section>
      
      <section anchor="FullPropMapUses" numbered="true" toc="default">
        <name>Uses</name>
        <t> The "uses" field of a property map resource in an IRD entry specifies
	   the resources in this same IRD on which this property map directly depends. It is an array of 
	   resource identifier(s). This array identifies the defining information resources associated with 
	   the resource-specific entity domains and properties that are indicated in this resource.  
	</t>
      </section>
      
      <section anchor="FullPropMapResponse" numbered="true" toc="default">
        <name>Response</name>
        <t>If the entity domains in this property map depend on other resources, the
"dependent-vtags" field in the "meta" field of the response <bcp14>MUST</bcp14> be an array
that includes the version tags of those resources, and the order <bcp14>MUST</bcp14> be
consistent with the "uses" field of this property map resource. The data
component of a property map response is named "property-map", which is a JSON
object of type PropertyMapData, where:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
    object {
      PropertyMapData property-map;
    } InfoResourceProperties : ResponseEntityBase;

    object-map {
      EntityID -> EntityProps;
    } PropertyMapData;

    object {
      EntityPropertyName -> JSONValue;
    } EntityProps;
]]></artwork>
        <t>The ResponseEntityBase type is defined in 
        <xref target="RFC7285" section="8.4" sectionFormat="of" format="default"/>.
        </t>
        <t>Specifically, a PropertyMapData object has one member for each entity in the
		property map. The entity's properties are encoded in the corresponding
		EntityProps object. EntityProps encodes one name/value pair for each property,
		where the property names are encoded as strings of type PropertyName.
		A protocol implementation <bcp14>SHOULD</bcp14> assume that the property value is either
		a JSONString or a JSON "null" value, and fail to parse if it is not, unless the
		implementation is using an extension to this document that indicates when and
		how property values of other data types are signaled.</t>
 
        <t>For each entity in the property map:</t>
        <ul spacing="normal">
          <li>If the entity is in a resource-specific entity domain, the ALTO server <bcp14>MUST</bcp14>
		only return self-defined properties and resource-specific properties that 
		depend on the same resource as the entity does. The ALTO client <bcp14>MUST</bcp14> ignore
		any resource-specific property for this entity if the mapping between 
		this resource-specific property and this entity is not indicated, in the
      	IRD, in the "mappings" capability of the property map resource.
		</li>
          <li>
                If the entity identifier is resource-agnostic, the ALTO server <bcp14>SHOULD</bcp14> 
                return the self-defined properties and all the resource-specific 
                properties defined in the property-defining information resources that are 
                indicated, in the IRD, in the "mappings" capability of the property map resource, 
                unless property values can be omitted upon some inheritance rules.
		</li>
        </ul>
<t>
The ALTO server <bcp14>MAY</bcp14> omit property values that are inherited rather than 
explicitly defined in order to achieve more compact encoding. As a consequence,
the ALTO Client <bcp14>MUST NOT</bcp14> assume inherited property values will all be present. 
If the Client needs inherited values, it <bcp14>MUST</bcp14> use the entity domain's 
inheritance rules to deduce those values.
</t>
      </section>
    </section>
   
    <section anchor="filter-prop-map" numbered="true" toc="default">
      <name>Filtered Property Map</name>
      <t>A filtered property map returns the values of a set of properties for a set of
		entities selected by the client. 
		</t> 
	<t>Sections <xref target="filt-prop-map-example-1" format="counter"/>, 
	<xref target="filt-prop-map-example-2" format="counter"/>,
		<xref target="filt-prop-map-example-3" format="counter"/>, 
		and <xref target="filt-prop-map-example-4" format="counter"/> give examples of
		filtered property map requests and responses.
		</t>
		<t>
		While the IRD lists all the names of the supported properties, 
		it only lists the names of the supported entity domains and not the entity identifiers. 
                Sometimes a client only wants to know what entity identifiers it can provide as input to a 
                filtered property map request but does not want to download the full property 
                map, or it may want to check whether some given entity identifiers are eligible for a query.  
                To support these cases, the filtered property map supports a lightweight response 
                with empty property values.
		</t>

      <section anchor="FilterPropMapMediaType" numbered="true" toc="default">
        <name>Media Type</name>
        <t>The media type of a property map resource is
		"application/alto-propmap+json".</t>
      </section>

      <section anchor="http-method-1" numbered="true" toc="default">
        <name>HTTP Method</name>
        <t>The filtered property map is requested using the HTTP POST method.</t>
      </section>

      <section anchor="filter-prop-map-params" numbered="true" toc="default">
        <name>Accept Input Parameters</name>
        <t>The input parameters for a filtered property map request are supplied in the
		entity body of the POST request. This document specifies the input parameters
		with a data format indicated by the media type
		"application/alto-propmapparams+json", which is a JSON object of type
		ReqFilteredPropertyMap. ReqFilteredPropertyMap is designed to support the
		following cases of client requests: 
		</t>
		 <ul spacing="normal"> 	
		 <li>The client wants the value of a selected set of properties for a selected set of entities;</li>
		 <li>The client wants all property values on all the entities; </li>
		 <li>The client wants all entities for which a property is defined 
		 	but is not interested in their property values; or</li>
		 <li>The client wants to cross-check whether some entity identifiers are present in 
		 the filtered property map but is not interested in their property values.</li>
		 </ul>
		<t>The third case is equivalent to querying the whole unfiltered property map, which
		can also be achieved with a GET request. 
		Some Clients, however, may prefer to systematically make filtered property map queries,
		where filtering parameters may sometimes be empty.</t>
		<t>The JSON object ReqFilteredPropertyMap is specified as follows:</t>
		<artwork name="" type="" align="left" alt=""><![CDATA[
		  object {
		    EntityID             entities<0..*>;
		    [EntityPropertyName   properties<0..*>;]
		  } ReqFilteredPropertyMap;
]]></artwork>

        <t>with fields:</t>
        <dl newline="false" spacing="normal">
          <dt>entities:</dt>
          <dd>
		A list of entity identifiers for which the specified properties are to be
		returned. 
		If the list is empty, the ALTO Server <bcp14>MUST</bcp14> interpret the list as if it 
		contained a list of all entities currently defined in the filtered property map.
		The domain of each entity <bcp14>MUST</bcp14> be included in the list of entity domains in 
		this resource's "capabilities" field (see
		<xref target="FilteredPropMapCapabilities" format="default"/>).
		The ALTO server <bcp14>MUST</bcp14> interpret entries appearing multiple times
		as if they appeared only once. 
		</dd>

          <dt>properties:</dt>
          <dd>
		A list of properties to be returned for each entity. 
		
		If the list is empty, the ALTO Sever <bcp14>MUST</bcp14> interpret the list as if it 
		contained a list of all properties currently defined in the filtered property map.
		Each specified property <bcp14>MUST</bcp14> be included in the list of properties in this resource's
		"capabilities" field (see <xref target="FilteredPropMapCapabilities" format="default"/>). 
		The ALTO server <bcp14>MUST</bcp14> interpret entries appearing multiple times as if 
		they appeared only once.
		
		This field is optional. If it is absent, the Server returns 
		a property value equal to the literal string "{}"
		for all the entity identifiers of the "entities" field for which at least one property is
		defined. 
		</dd>
        </dl>
        <t>Note that the field "properties" is optional. In addition, when
        	the "entities" field is an empty list, it corresponds to a 
		query for all applicable entity identifiers of the filtered property map, with no 
		current interest on any particular property. When 
        	the "entities" field is not empty, it allows the Client 
        	to check whether the listed entity identifiers can be used as input to a filtered property 
        	map query.</t>
      </section>

      <section anchor="FilteredPropMapCapabilities" numbered="true" toc="default">
        <name>Capabilities</name>
        <t>The capabilities are defined by an object of type PropertyMapCapabilities, as
		defined in <xref target="FullPropMapCapabilities" format="default"/>.</t>
      </section>
      
      <section anchor="uses" numbered="true" toc="default">
        <name>Uses</name>
        <t>This is the same as the "uses" field of the property map resource (see
		<xref target="FullPropMapUses" format="default"/>).
		</t>
	</section>


	<section anchor="FilteredPropMapResponse" numbered="true" toc="default">
        <name>Filtered Property Map Response</name>
        <t>The response <bcp14>MUST</bcp14> indicate an error, using ALTO Protocol error handling, as
		defined in <xref target="RFC7285" section="8.5" sectionFormat="of" format="default"/>, if the request is invalid.
		</t>
        <t>Specifically, a filtered property map request can be invalid in the following cases:
        </t>
        <ul spacing="normal">
		<li>The input field "entities" is absent from the Client request. 
        	In this case, the Server <bcp14>MUST</bcp14> return an "E_MISSING_FIELD" error 
		as defined in <xref target="RFC7285" section="8.5.2" sectionFormat="of" format="default"/>. 
		</li>
          <li> 
          <t>An entity identifier in the "entities" field of the request is invalid. 
            This occurs when:  
            </t>
            <ul spacing="normal">
              <li>The domain of this entity is not defined in the "mappings"
			capability of this resource in the IRD, or</li>
              <li>The entity identifier is not valid for the entity domain.</li>
            </ul>
           <t> A valid entity identifier never generates an error, even if the filtered property
	  		map resource does not define any properties for it.  
	  		</t>
            <t>
			If an entity identifier in the "entities" field of the request is invalid, the ALTO
			server <bcp14>MUST</bcp14> return an "E_INVALID_FIELD_VALUE" error defined in
			<xref target="RFC7285" section="8.5.2" sectionFormat="of" format="default"/>, and the "value" field of the error message <bcp14>SHOULD</bcp14>
			indicate the provided invalid entity identifier.
			</t>
          </li>
          <li>
          <t>A property name in the "properties" field of the request is invalid. This
          occurs when this property name is not defined in the "properties" capability of this
		resource in the IRD. 
		</t>
		<t> When a filtered property map resource does not define a value for a
		property requested for a particular entity, it is not an error. In this
		case, the ALTO server <bcp14>MUST</bcp14> omit that property from the response for that
		endpoint.  </t>
          <t> If a property name in the "properties" field in the request is invalid, the ALTO
		server <bcp14>MUST</bcp14> return an "E_INVALID_FIELD_VALUE" error defined in 
		<xref target="RFC7285" section="8.5.2" sectionFormat="of" format="default"/>. The "value" field of the error message <bcp14>SHOULD</bcp14>
		indicate the property name.
		</t>
          </li>
        </ul>
		<t>Some identifiers can be interpreted as both an entity name and a property name, 
		as is the case for "pid" if it were erroneously used alone.
		In such a case, the Server <bcp14>SHOULD</bcp14> follow  
		<xref target="RFC7285" section="8.5.2" sectionFormat="of" format="default"/>, which says:</t>
                <blockquote> 
		For an E_INVALID_FIELD_VALUE error, the server may include an optional field 
		named "field" in the "meta" field of the response, to indicate the field that contains the
   		wrong value. 
		</blockquote>
		
        <t>The response to a valid request is the same as for the property map
		(see <xref target="FullPropMapResponse" format="default"/>) except that:</t>
        <ul spacing="normal">
          <li> If the requested entities include entities with a resource-agnostic identifier, 
          the "dependent-vtags" field in its "meta" field <bcp14>MUST</bcp14> include version tags of all
		dependent resources appearing in the "uses" field.
		</li>
          <li>If the requested entities only include entities in resource-specific entity
		domains, the "dependent-vtags" field in its "meta" field <bcp14>MUST</bcp14> include the version
		tags of the resources on which the requested resource-specific entity domains and
		the requested resource-specific properties are dependent.
		</li>
          <li>The response only includes the entities and properties requested by the
		client. If an entity in the request is identified by a hierarchical identifier
		(e.g., a "ipv4" or "ipv6" prefix), the response <bcp14>MUST</bcp14> return all properties that 
		are present for any address covered by the prefix, even though some of those 
		properties may not be present for all addresses covered by the prefix.
		</li>
		<li>When the input member "properties" is absent from the client request, 
		the Server returns a property map containing all the requested entity identifiers 
		for which one or more properties are defined. For all the entities of the returned map, 
		the returned property value is equal to "{}".  
		</li>
        </ul>
        
        <t>The filtered property map response <bcp14>MUST</bcp14> include all the inherited property
		values for the requested entities and all the entities that are able to
		inherit property values from the requested entities. To achieve this goal,
		the ALTO server <bcp14>MAY</bcp14> follow two rules:</t>
        <ul spacing="normal">
          <li>If a property for a requested entity is inherited from another entity not
		included in the request, the response <bcp14>MUST</bcp14> include this property for the
		requested entity. For example, a full property map may skip a property P for
		an entity A (e.g., "ipv4:192.0.2.0/31") if P can be derived using inheritance
		from another entity B (e.g., "ipv4:192.0.2.0/30"). A filtered property map
		request may include only A but not B. In such a case, the property P <bcp14>MUST</bcp14> be
		included in the response for A.</li>
		
          <li>If there are entities covered by a requested entity but they have different
		values for the requested properties, the response <bcp14>MUST</bcp14> include all those
		entities and the different property values for them. For example, consider
		a request for property P of entity A (e.g., "ipv4:192.0.2.0/31"): if P has value
		v1 for "A1=ipv4:192.0.2.0/32" and v2 for "A2=ipv4:192.0.2.1/32", then the
		response <bcp14>SHOULD</bcp14> include A1 and A2.</li>
		</ul>

	<t>For the sake of response compactness, the ALTO server <bcp14>SHOULD</bcp14> obey the following rule:</t>
	<ul spacing="normal">
          <li>If an entity identifier in the response is already covered by other
		entities identifiers in the same response, it <bcp14>SHOULD</bcp14> be removed from the
		response. In the previous example, the entity
		"A=ipv4:192.0.2.0/31" <bcp14>SHOULD</bcp14> be removed because A1 and A2 cover all the
		addresses in A.</li>
	</ul>  
	      
        <t>An ALTO client should be aware that the entities in the response may be
		different from the entities in its request.</t>
      </section>
 
      <section anchor="prop-type-pid" numbered="true" toc="default">
        <name>Entity Property Type Defined in This Document</name>
        <t>This document defines the entity property type "pid". This property type
extends the ALTO endpoint property type "pid" defined in 
<xref target="RFC7285" section="7.1.1" sectionFormat="of" format="default"/> as follows: the property has the same semantics and applies to
IPv4 and IPv6 addresses; the difference is that the IPv4 and IPv6 addresses
have evolved from the status of endpoints to the status of entities.</t>
        <t>The defining information resource for property type <bcp14>MUST</bcp14> be a network map.
</t>
        <section anchor="entity-property-type-pid" numbered="true" toc="default">
          <name>Entity Property Type: pid</name>
          <dl spacing="normal">
            <dt>Identifier:</dt>
            <dd>pid</dd>

            <dt>Semantics:</dt>
            <dd>the intended semantics are the same as in <xref target="RFC7285" format="default"/> for the
ALTO endpoint property type "pid".</dd>

            <dt>Media type of defining information resource:</dt>
            <dd>application/alto-networkmap+json</dd>

            <dt>Security considerations:</dt>
            <dd>for entity property type "pid" are the same as
documented in <xref target="RFC7285" format="default"/> for the ALTO endpoint property type "pid".</dd>
          </dl>
        </section>
      </section>
    </section>

   
    <section anchor="legacy" numbered="true" toc="default">
      <name>Impact on Legacy ALTO Servers and ALTO Clients</name>
   
      <section anchor="impact-on-endpoint-property-service" numbered="true" toc="default">
        <name>Impact on Endpoint Property Service</name>
        <t>Since the property map and the filtered property map defined in this document
provide a functionality that covers the EPS
defined in <xref target="RFC7285" section="11.4" sectionFormat="of" format="default"/>, ALTO servers may prefer to provide
property map and filtered property map in place of EPS. However, for the
legacy endpoint properties, it is recommended that ALTO servers also provide
EPS so that legacy clients can still be supported.</t>
      </section>
   
      <section anchor="impact-on-resource-specific-properties" numbered="true" toc="default">
        <name>Impact on Resource-Specific Properties</name>
        <t><xref target="RFC7285" section="10.8" sectionFormat="of" format="default"/> defines 
        two categories of endpoint properties: "resource-specific" and "global". 
Resource-specific property names are
prefixed with the identifier of the resource they depend on, while global property
names have no such prefix. The property map and the filtered property map
specified in this document define similar categories of entity properties. The
difference is that entity property maps do not define "global" entity
properties. Instead, they define self-defined entity properties as a
special case of "resource-specific" entity properties, where the specific
resource is the property map itself. This means that self-defined
properties are defined within the scope of the property map.</t>
      </section>
   
      <section anchor="impact-on-other-properties" numbered="true" toc="default">
        <name>Impact on Other Properties</name>
        <t>In the present extension, properties can be defined for sets of entity
addresses, rather than just individual endpoint addresses as initially defined
in <xref target="RFC7285" format="default"/>. 
This might change the semantics of a property. These sets can be,
for example, hierarchical IP address blocks. For instance, a property such as the
fictitious "geo-location" defined for a set of IP addresses would have a
value corresponding to a location representative of all the addresses in this set.
</t>
      </section>
    </section>
   
<section anchor="examples" numbered="true" toc="default">
 <name>Examples</name>
	<t>In this document, the HTTP message bodies of all the 
	examples use Unix-style line-ending character (%x0A) as the line separator.</t> 
	
	<section anchor="net-map-example" numbered="true" toc="default">
     <name>Network Map</name>
        
     <t>The examples in this section use a very simple default network map:</t>
          <table anchor="net-map-values-ex"> 
            <name>Example Default Network Map</name>
            <tbody>
              <tr>
                <td>defaultpid:</td>
                <td>ipv4:0.0.0.0/0  ipv6:::/0</td>
              </tr>
              <tr>
                <td>pid1:</td>
                <td>ipv4:192.0.2.0/25</td>
              </tr>
              <tr>
                <td>pid2:</td>
                <td>ipv4:192.0.2.0/27</td>
              </tr>
              <tr>
                <td>pid3:</td>
                <td>ipv4:192.0.3.0/28</td>
              </tr>
              <tr>
                <td>pid4:</td>
                <td>ipv4:192.0.3.16/28</td>
              </tr>
            </tbody>
          </table>
        
      <t>And another simple alternative network map:</t>
          <table anchor="alt-net-map-values-ex"> 
            <name>Example Alternative Network Map</name>
            <tbody>
              <tr>
                <td>defaultpid:</td>
                <td>ipv4:0.0.0.0/0  ipv6:::/0</td>
              </tr>
              <tr>
                <td>pid1:</td>
                <td>ipv4:192.0.2.0/27</td>
              </tr>
              <tr>
                <td>pid2:</td>
                <td>ipv4:192.0.3.0/27</td>
              </tr>
            </tbody>
          </table>
      </section>
      
      <section anchor="inet-prop-example" numbered="true" toc="default">
        <name>Property Definitions</name>
		<t>Beyond "pid", the examples in this section use four additional, fictitious property types 
		for entities of domain type "ipv4": "countrycode", "ASN",  "ISP", and "state". 
		These properties are assumed to be resource-agnostic so their name is identical 
		to their type.  The entities have the following values:
		</t>
          <table anchor="prop-map-values-ip-ex"> 
            <name>Example Property Values for Internet Address Domains</name>
            <thead>
              <tr>
                <th>&nbsp;</th>
                <th align="center">ISP</th>
                <th align="center">ASN</th>
                <th align="center">countrycode</th>
                <th align="center">state</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>ipv4:192.0.2.0/23:</td>
                <td align="center">BitsRus</td>
                <td align="center">-</td>
                <td align="center">us</td>
                <td align="center">-</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.0/28:</td>
                <td align="center">-</td>
                <td align="center">65543</td>
                <td align="center">-</td>
                <td align="center">NJ</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.16/28:</td>
                <td align="center">-</td>
                <td align="center">65543</td>
                <td align="center">-</td>
                <td align="center">CT</td>
              </tr>
              <tr>
                <td>ipv4:192.0.2.1:</td>
                <td align="center">-</td>
                <td align="center">-</td>
                <td align="center">-</td>
                <td align="center">PA</td>
              </tr>
              <tr>
                <td>ipv4:192.0.3.0/28:</td>
                <td align="center">-</td>
                <td align="center">65544</td>
                <td align="center">-</td>
                <td align="center">TX</td>
              </tr>
              <tr>
                <td>ipv4:192.0.3.16/28:</td>
                <td align="center">-</td>
                <td align="center">65544</td>
                <td align="center">-</td>
                <td align="center">MN</td>
              </tr>
            </tbody>
          </table>		
        
        <t>The examples in this section use the property "region" for the PID domain of
		the default network map with the following values:</t>
          <table anchor="prop-map-values-pid-ex"> 
            <name>Example Property Values for Default Network Map's PID Domain</name>
            <thead>
              <tr>
                <th>&nbsp;</th>
                <th>region</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>pid:defaultpid:</td>
                <td>-</td>
              </tr>
              <tr>
                <td>pid:pid1:</td>
                <td>us-west</td>
              </tr>
              <tr>
                <td>pid:pid2:</td>
                <td>us-east</td>
              </tr>
              <tr>
                <td>pid:pid3:</td>
                <td>us-south</td>
              </tr>
              <tr>
                <td>pid:pid4:</td>
                <td>us-north</td>
              </tr>
            </tbody>
          </table>
        <t>Note that "-" means the value of the property for the entity is "undefined". So
		the entity would inherit a value for this property by the inheritance rule if
		possible. For example, the value of the "ISP" property for "ipv4:192.0.2.1" is
		"BitsRus" because of "ipv4:192.0.2.0/24". But the "region" property for
		"pid:defaultpid" has no value because there is no entity from which it can inherit.</t>
        <t>Similar to the PID domain of the default network map, the examples in this
		section use the property "ASN" for the PID domain of the alternative network map
		with the following values:</t>
          <table anchor="alt-prop-map-values-pid-ex"> 
            <name>Example Property Values for Alternative Network Map's PID Domain</name>
            <thead>
              <tr>
                <th>&nbsp;</th>
                <th>ASN</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>pid:defaultpid:</td>
                <td>-</td>
              </tr>
              <tr>
                <td>pid:pid1:</td>
                <td>65543</td>
              </tr>
              <tr>
                <td>pid:pid2:</td>
                <td>65544</td>
              </tr>
            </tbody>
          </table>
      </section>

      <section anchor="ird-example" numbered="true" toc="default">
        <name>Information Resource Directory (IRD)</name>
        <t>The following IRD defines ALTO Server information resources that are relevant
		to the Entity Property Service. It provides a property map for the
		"ISP" and "ASN" properties. 
		The server could have provided a single property map for all four
		properties, but it does not, presumably because the organization that runs the
		ALTO server believes that a client is not necessarily interested in getting
		all four properties.</t>
		
        <t>The server provides several filtered property maps. The first returns all
		four properties, and the second returns only the "pid" property for the
		default network map and the "alt-network-map".</t>
        <t>The filtered property maps for the "ISP", "ASN", "countrycode", and "state"
		properties do not depend on the default network map (it does not have a
		"uses" capability) because the definitions of those properties do not depend
		on the default network map. The filtered property map providing the "pid"
		property does have a "uses" capability for the default network map because
		the default network map defines the values of the "pid" property.</t>
        <t>Note that for legacy clients, the ALTO server provides an Endpoint Property
		Service for the "pid" property defined for the endpoints of the default
		network map and the "alt-network-map".</t>
        <t>The server provides another filtered Property map resource, named
		"ane-dc-property-map", that returns fictitious properties named
		"storage-capacity", "ram", and "cpu" for ANEs that have a persistent
		identifier. The entity domain to which the ANEs belong is self-defined and
		valid only within the property map.</t>
	   <t>The other property maps in the returned IRD are shown here for purposes of illustration.</t>
		
        <figure anchor="example-ird">

          <name>Example IRD</name>
          <artwork name="" type="" align="left" alt=""><![CDATA[
 GET /directory HTTP/1.1
 Host: alto.example.com
 Accept: application/alto-directory+json,application/alto-error+json
 
 HTTP/1.1 200 OK
 Content-Length: 2713
 Content-Type: application/alto-directory+json
 
 {
   "meta" : {
     "default-alto-network-map" : "default-network-map"
   },
   "resources" : {
     "default-network-map" : {
       "uri" : "http://alto.example.com/networkmap/default",
       "media-type" : "application/alto-networkmap+json"
     },
     "alt-network-map" : {
       "uri" : "http://alto.example.com/networkmap/alt",
       "media-type" : "application/alto-networkmap+json"
     },
     "ia-property-map" : {
       "uri" : "http://alto.example.com/propmap/full/inet-ia",
       "media-type" : "application/alto-propmap+json",
       "capabilities" : {
         "mappings": {
           "ipv4": [ ".ISP", ".ASN" ],
           "ipv6": [ ".ISP", ".ASN" ]
         }
       }
     },
     "iacs-property-map" : {
       "uri" : "http://alto.example.com/propmap/lookup/inet-iacs",
       "media-type" : "application/alto-propmap+json",
       "accepts": "application/alto-propmapparams+json",
       "capabilities" : {
         "mappings": {
           "ipv4": [ ".ISP", ".ASN", ".countrycode", ".state" ],
           "ipv6": [ ".ISP", ".ASN", ".countrycode", ".state" ]
         }
       }
     },
     "region-property-map": {
       "uri": "http://alto.example.com/propmap/lookup/region",
       "media-type": "application/alto-propmap+json",
       "accepts": "application/alto-propmapparams+json",
       "uses" : [ "default-network-map", "alt-network-map" ],
       "capabilities": {
         "mappings": {
           "default-network-map.pid": [ ".region" ],
           "alt-network-map.pid": [ ".ASN" ]
         }
       }
     },
     "ip-pid-property-map" : {
       "uri" : "http://alto.example.com/propmap/lookup/pid",
       "media-type" : "application/alto-propmap+json",
       "accepts" : "application/alto-propmapparams+json",
       "uses" : [ "default-network-map", "alt-network-map" ],
       "capabilities" : {
         "mappings": {
           "ipv4": [ "default-network-map.pid",
                     "alt-network-map.pid" ],
           "ipv6": [ "default-network-map.pid",
                     "alt-network-map.pid" ]
         }
       }
     },
     "legacy-endpoint-property" : {
       "uri" : "http://alto.example.com/legacy/eps-pid",
       "media-type" : "application/alto-endpointprop+json",
       "accepts" : "application/alto-endpointpropparams+json",
       "capabilities" : {
         "properties" : [ "default-network-map.pid",
                          "alt-network-map.pid" ]
       }
     },
     "ane-dc-property-map": {
       "uri" : "http://alto.example.com/propmap/lookup/ane-dc",
       "media-type" : "application/alto-propmap+json",
       "accepts": "application/alto-propmapparams+json",
       "capabilities": {
         "mappings": {
           ".ane" : [ "storage-capacity", "ram", "cpu" ]
         }
       }
     }
   }
 }
]]></artwork>
        </figure>
      </section>

      <section anchor="prop-map-example" numbered="true" toc="default">
        <name>Full Property Map Example</name>
        <t>The following example uses the properties and IRD defined in
		<xref target="ird-example" format="default"/> to retrieve a property map for 
		entities with the "ISP" and "ASN" properties.</t>
        <t>Note that, to be compact, the response does not include the entity
		"ipv4:192.0.2.1" because values of all those properties for this entity are
		inherited from other entities.</t>
        <t>Also note that the entities "ipv4:192.0.2.0/28" and "ipv4:192.0.2.16/28" are
		merged into "ipv4:192.0.2.0/27" because they have the same value of the
		"ASN" property. The same rule applies to the entities "ipv4:192.0.3.0/28" and
		"ipv4:192.0.3.16/28". Both "ipv4:192.0.2.0/27" and "ipv4:192.0.3.0/27" omit
		the value for the "ISP" property because it is inherited from
		"ipv4:192.0.2.0/23".</t>
		
        <artwork name="" type="" align="left" alt=""><![CDATA[
GET /propmap/full/inet-ia HTTP/1.1
Host: alto.example.com
Accept: application/alto-propmap+json,application/alto-error+json
]]></artwork>
        <artwork name="" type="" align="left" alt=""><![CDATA[
HTTP/1.1 200 OK
Content-Length: 418
Content-Type: application/alto-propmap+json

{
  "meta": {
    "dependent-vtags": [
      {"resource-id": "default-network-map",
       "tag": "3ee2cb7e8d63d9fab71b9b34cbf764436315542e"},
      {"resource-id": "alt-network-map",
       "tag": "c0ce023b8678a7b9ec00324673b98e54656d1f6d"}
    ]
  },
  "property-map": {
    "ipv4:192.0.2.0/23":   {".ISP": "BitsRus"},
    "ipv4:192.0.2.0/27":   {".ASN": "65543"},
    "ipv4:192.0.3.0/27":   {".ASN": "65544"}
  }
}
]]></artwork>
      </section>

      
      <section anchor="filt-prop-map-example-1" numbered="true" toc="default">
        <name>Filtered Property Map Example #1</name>
        <t>The following example uses the filtered property map resource to request the
		"ISP", "ASN", and "state" properties for several IPv4 addresses.</t>
        <t>Note that the value of "state" for "ipv4:192.0.2.1" is the only explicitly
		defined property; the other values are all derived from the inheritance rules
		for Internet address entities.</t>
		
        <artwork name="" type="" align="left" alt=""><![CDATA[
POST /propmap/lookup/inet-iacs HTTP/1.1
Host: alto.example.com
Accept: application/alto-propmap+json,application/alto-error+json
Content-Length: 158
Content-Type: application/alto-propmapparams+json

{
  "entities" : [ "ipv4:192.0.2.0",
                 "ipv4:192.0.2.1",
                 "ipv4:192.0.2.17" ],
  "properties" : [ ".ISP", ".ASN", ".state" ]
}
]]></artwork>
        <artwork name="" type="" align="left" alt=""><![CDATA[
HTTP/1.1 200 OK
Content-Length: 540
Content-Type: application/alto-propmap+json

{
  "meta": {
    "dependent-vtags": [
      {"resource-id": "default-network-map",
       "tag": "3ee2cb7e8d63d9fab71b9b34cbf764436315542e"},
      {"resource-id": "alt-network-map",
       "tag": "c0ce023b8678a7b9ec00324673b98e54656d1f6d"}
    ]
  },
  "property-map": {
    "ipv4:192.0.2.0":
           {".ISP": "BitsRus", ".ASN": "65543", ".state": "NJ"},
    "ipv4:192.0.2.1":
           {".ISP": "BitsRus", ".ASN": "65543", ".state": "PA"},
    "ipv4:192.0.2.17":
           {".ISP": "BitsRus", ".ASN": "65543", ".state": "CT"}
  }
}
]]></artwork>
      </section>

      <section anchor="filt-prop-map-example-2" numbered="true" toc="default">
        <name>Filtered Property Map Example #2</name>
        <t>The following example uses the filtered property map resource to request the
		"ASN", "countrycode", and "state" properties for several IPv4 prefixes.</t>
        <t>Note that the property values for both entities "ipv4:192.0.2.0/26" and
		"ipv4:192.0.3.0/26" are not explicitly defined. They are inherited from the
		entity "ipv4:192.0.2.0/23".</t>
        <t>Also note that some entities like "ipv4:192.0.2.0/28" and
		"ipv4:192.0.2.16/28" in the response are not explicitly listed in the
		request. The response includes them because they are refinements of the
		requested entities and have different values for the requested properties.</t>
        <t>The entity "ipv4:192.0.4.0/26" is not included in the response because there
		are neither entities from which it is inherited, nor entities inherited from
		it.</t>
		
        <artwork name="" type="" align="left" alt=""><![CDATA[
POST /propmap/lookup/inet-iacs HTTP/1.1
Host: alto.example.com
Accept: application/alto-propmap+json,application/alto-error+json
Content-Length: 174
Content-Type: application/alto-propmapparams+json

{
  "entities" : [ "ipv4:192.0.2.0/26",
                 "ipv4:192.0.3.0/26",
                 "ipv4:192.0.4.0/26" ],
  "properties" : [ ".ASN", ".countrycode", ".state" ]
}
]]></artwork>
        <artwork name="" type="" align="left" alt=""><![CDATA[
HTTP/1.1 200 OK
Content-Length: 774
Content-Type: application/alto-propmap+json

{
  "meta": {
    "dependent-vtags": [
      {"resource-id": "default-network-map",
       "tag": "3ee2cb7e8d63d9fab71b9b34cbf764436315542e"},
      {"resource-id": "alt-network-map",
       "tag": "c0ce023b8678a7b9ec00324673b98e54656d1f6d"}
    ]
  },
  "property-map": {
    "ipv4:192.0.2.0/26":  {".countrycode": "us"},
    "ipv4:192.0.2.0/28":  {".ASN": "65543",
                           ".state": "NJ"},
    "ipv4:192.0.2.16/28": {".ASN": "65543",
                           ".state": "CT"},
    "ipv4:192.0.2.1":     {".state": "PA"},
    "ipv4:192.0.3.0/26":  {".countrycode": "us"},
    "ipv4:192.0.3.0/28":  {".ASN": "65544",
                           ".state": "TX"},
    "ipv4:192.0.3.16/28": {".ASN": "65544",
                           ".state": "MN"}
  }
}
]]></artwork>
      </section>
      <section anchor="filt-prop-map-example-3" numbered="true" toc="default">
        <name>Filtered Property Map Example #3</name>
        <t>The following example uses the filtered property map resource to request the
"default-network-map.pid" property and the "alt-network-map.pid" property for
a set of IPv4 addresses and prefixes.</t>
        <t>Note that the entity "ipv4:192.0.3.0/27" is decomposed into two entities:
"ipv4:192.0.3.0/28" and "ipv4:192.0.3.16/28", as they have different
"default-network-map.pid" property values.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
POST /propmap/lookup/pid HTTP/1.1
Host: alto.example.com
Accept: application/alto-propmap+json,application/alto-error+json
Content-Length: 222
Content-Type: application/alto-propmapparams+json

{
  "entities" : [
                "ipv4:192.0.2.128",
                "ipv4:192.0.2.0/27",
                "ipv4:192.0.3.0/27" ],
  "properties" : [ "default-network-map.pid",
                   "alt-network-map.pid" ]
}
]]></artwork>
        <artwork name="" type="" align="left" alt=""><![CDATA[
HTTP/1.1 200 OK
Content-Length: 774
Content-Type: application/alto-propmap+json

{
  "meta": {
    "dependent-vtags": [
      {"resource-id": "default-network-map",
       "tag": "3ee2cb7e8d63d9fab71b9b34cbf764436315542e"},
      {"resource-id": "alt-network-map",
       "tag": "c0ce023b8678a7b9ec00324673b98e54656d1f6d"}
    ]
  },
  "property-map": {
    "ipv4:192.0.2.128":   {"default-network-map.pid": "defaultpid",
                           "alt-network-map.pid": "defaultpid"},
    "ipv4:192.0.2.0/27":  {"default-network-map.pid": "pid2",
                           "alt-network-map.pid": "pid1"},
    "ipv4:192.0.3.0/28":  {"default-network-map.pid": "pid3",
                           "alt-network-map.pid": "pid2"},
    "ipv4:192.0.3.16/28": {"default-network-map.pid": "pid4",
                           "alt-network-map.pid": "pid2"}
  }
}
]]></artwork>
      </section>
      <section anchor="filt-prop-map-example-4" numbered="true" toc="default">
        <name>Filtered Property Map Example #4</name>
        <t>Here is an example of using the filtered property map to query the regions
for several PIDs in "default-network-map". The "region" property is specified
as a self-defined property, i.e., the values of this property are defined
by this property map resource.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
POST /propmap/lookup/region HTTP/1.1
Host: alto.example.com
Accept: application/alto-propmap+json,application/alto-error+json
Content-Length: 132
Content-Type: application/alto-propmapparams+json

{
  "entities" : ["default-network-map.pid:pid1",
                "default-network-map.pid:pid2"],
  "properties" : [ ".region" ]
}
]]></artwork>
        <artwork name="" type="" align="left" alt=""><![CDATA[
HTTP/1.1 200 OK
Content-Length: 326
Content-Type: application/alto-propmap+json

{
  "meta" : {
    "dependent-vtags" : [
       {"resource-id": "default-network-map",
        "tag": "7915dc0290c2705481c491a2b4ffbec482b3cf62"}
    ]
  },
  "property-map": {
    "default-network-map.pid:pid1": {
      ".region": "us-west"
    },
    "default-network-map.pid:pid2": {
      ".region": "us-east"
    }
  }
}
]]></artwork>
      </section>
      <section anchor="ane-example" numbered="true" toc="default">
        <name>Filtered Property Map for ANEs Example #5</name>
        <t>The following example uses the filtered property map resource
"ane-dc-property-map" to request properties "storage-capacity" and "cpu" on
several ANEs defined in this property map.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
POST /propmap/lookup/ane-dc HTTP/1.1
Host: alto.example.com
Accept: application/alto-propmap+json,application/alto-error+json
Content-Length: 155
Content-Type: application/alto-propmapparams+json

{
  "entities" : [".ane:dc21",
                ".ane:dc45-srv9",
                ".ane:dc6-srvcluster8"],
  "properties" : [ "storage-capacity", "cpu"]
}
]]></artwork>
        <artwork name="" type="" align="left" alt=""><![CDATA[
HTTP/1.1 200 OK
Content-Length: 295
Content-Type: application/alto-propmap+json

{
  "meta" : {
  },
  "property-map": {
    ".ane:dc21":
      {"storage-capacity" : 40000, "cpu" : 500},
    ".ane:dc45-srv9":
      {"storage-capacity" : 100, "cpu" : 20},
    ".ane:dc6-srvcluster8":
      {"storage-capacity" : 6000, "cpu" : 100}
  }
}
]]></artwork>
      </section>
    </section>

 
    <section anchor="SecSC" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>Both property map and filtered property map defined in this document fit into
the architecture of the ALTO base protocol, and hence the Security
Considerations (<xref target="RFC7285" section="15" sectionFormat="of" format="default"/>) of the base protocol fully apply:
authenticity and integrity of ALTO information (i.e., authenticity and
integrity of property maps), potential undesirable guidance from
authenticated ALTO information (e.g., potentially imprecise or even wrong
value of a property such as geo-location), confidentiality of ALTO
information (e.g., exposure of a potentially sensitive entity property such
as geo-location), privacy for ALTO users, and availability of ALTO services
should all be considered.</t>
 
      <t>ALTO clients using this extension should in addition be aware that the entity
	properties they require may convey more details than the endpoint properties
	conveyed by using <xref target="RFC7285" format="default"/>. 
	Client requests may reveal details of their
	activity or plans thereof such that a malicious Server, which is in a position to do so,
	may monetize or use for
	attacks or undesired surveillance. Likewise, ALTO Servers expose entities and
	properties related to specific parts of the infrastructure that reveal
	details of capabilities, locations, or resource availability. These details
	may be maliciously used for competition purposes, or to cause resource
	shortage or undesired publication.</t>
 
      <t>To address these concerns, the property maps provided by this extension
require additional attention to two security considerations discussed in:
Section <xref target="RFC7285" section="15.2" sectionFormat="bare">"Potential Undesirable Guidance from Authenticated ALTO Information"</xref> of <xref target="RFC7285" format="default"/> 
and Section <xref target="RFC7285" section="15.3" sectionFormat="bare">"Confidentiality of ALTO
Information"</xref> of <xref target="RFC7285" format="default"/>. Threats to the availability of
the ALTO service caused by highly demanding queries should be addressed as
specified in <xref target="RFC7285" section="15.5" sectionFormat="of" format="default"/>.</t>
      <ul spacing="normal">
        <li>
          <t>Potential undesirable guidance from authenticated ALTO information: this can
be caused by Property values that change over time and thus lead to
performance degradation or system rejection of application requests.  </t>
          <t>
To avoid these consequences, a more robust ALTO client should adopt and
  extend protection strategies specified in <xref target="RFC7285" section="15.2" sectionFormat="of" format="default"/>.
  For example, to be notified immediately when a particular ALTO value that
  the Client depends on changes, it is <bcp14>RECOMMENDED</bcp14> that both the ALTO
  Client and ALTO Server using this extension implement
  "<xref target="RFC8895" format="title"/>" <xref target="RFC8895" format="default"/>.</t>
        </li>
        <li>
          <t>Confidentiality of ALTO information: as discussed in 
<xref target="RFC7285" section="15" sectionFormat="of" format="default"/>, properties may have sensitive customer-specific information.
If this is the case, an ALTO Server may limit access to those properties by
providing several different property maps. For a nonsensitive properties,
the ALTO Server would provide a URI that accepts requests from any client.
Sensitive properties, on the other hand, would only be available via a
secure URI that would require client authentication. Another way is to
expose highly abstracted, coarse-grained property values to all Clients while
restricting access to URIs that expose more fine-grained values to authorized
Clients. Restricted access URIs may be gathered in delegate IRDs as
specified in <xref target="RFC7285" section="9.2.4" sectionFormat="of" format="default"/>.  </t>
          <t>
Also, while technically this document does not introduce any security
  risks not inherent in the Endpoint Property Service defined by <xref target="RFC7285" format="default"/>,
  the GET-mode property map resource defined in this document does make it
  easier for a client to download large numbers of property values.
  Accordingly, an ALTO Server should limit GET-mode property maps to
  properties that do not contain sensitive data.  </t>   
          <t>
  <xref target="iana-considerations"/> of this document specifies that the ALTO service
  provider <bcp14>MUST</bcp14> be aware of the potential sensitivity of exposed entity
  domains and properties. <xref target="dom-reg-process"/> (<xref target="dom-reg-process" format="title"/>)
  of this document specifies that when the
  registration of an entity domain type is requested of IANA, the
  request <bcp14>MUST</bcp14> include security considerations that show awareness of how
  the exposed entity addresses may be related to private information about
  an ALTO client or an infrastructure service provider. Likewise, 
  <xref target="IANAEntityProp"/> (<xref target="IANAEntityProp" format="title"/>) of this document specifies
  that when the registration of a property type is requested of IANA,
  the request <bcp14>MUST</bcp14> include security considerations that explain why this
  property type is required for ALTO-based operations.  </t>
          <t>
The risk of ALTO information being leaked to malicious Clients or third
  parties is addressed similarly to <xref target="RFC8896" section="7" sectionFormat="of" format="default"/>. ALTO
  clients and servers <bcp14>SHOULD</bcp14> support TLS 1.3 <xref target="RFC8446" format="default"/>.
  </t>
        </li>
      </ul>
    </section>

    <section anchor="iana-considerations" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This document defines additional application/alto-* media types, which are 
       listed in <xref target="TableMediaTypes" format="default"/>.
      It defines
	the "ALTO Entity Domain Types" registry that extends the "ALTO Address Types"
	registry defined in <xref target="RFC7285" format="default"/>. 
	It also defines the "ALTO Entity Property Types"
	registry that extends the "ALTO Endpoint Property Types" registry defined in
	<xref target="RFC7285" format="default"/>.</t>        
	<table anchor="TableMediaTypes" align="center">
          <name>Additional ALTO Media Types</name>
          <thead>
            <tr>
              <th align="left">Type</th>
              <th align="left">Subtype</th>
              <th align="left">Specification</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">application</td>
              <td align="left">alto-propmap+json</td>
              <td align="left">
                <xref target="FullPropMapMediaType" format="default"/></td>
            </tr>
            <tr>
              <td align="left">application</td>
              <td align="left">alto-propmapparams+json</td>
              <td align="left">
                <xref target="filter-prop-map-params" format="default"/></td>
            </tr>
          </tbody>
        </table>

      <section anchor="application-alto-propmap-media-type" numbered="true" toc="default">
        <name>application/alto-propmap+json Media Type</name>

        <dl newline="true" spacing="normal">
          <dt>Type name:</dt>
          <dd>application</dd>

          <dt>Subtype name:</dt>
          <dd>alto-propmap+json</dd>

          <dt>Required parameters:</dt>
          <dd>n/a</dd>

          <dt>Optional parameters:</dt>
          <dd>n/a</dd>

          <dt>Encoding considerations:</dt>
          <dd>Encoding considerations are identical to those specified for the
		"application/json" media type. See <xref target="RFC8259" format="default"/>.</dd>

          <dt>Security considerations:</dt>
          <dd>Security considerations related to the generation and consumption of ALTO
		Protocol messages are discussed in 
		<xref target="RFC7285" section="15" sectionFormat="of" format="default"/> 
		and <xref target="SecSC" format="default"/> of this document.</dd>

          <dt>Interoperability considerations:</dt>
          <dd>n/a</dd>

          <dt>Published specification:</dt>
          <dd>
          This document is the specification for this media type.
          See <xref target="FullPropMapMediaType" format="default"/>.</dd>

          <dt>Applications that use this media type:</dt>

          <dd>ALTO servers and ALTO clients <xref target="RFC7285" format="default"/>,  
          either standalone or embedded within other applications, 
          when the queried resource is a property map, whether filtered or not. </dd>

		<dt>Fragment identifier considerations:</dt>
		<dd>n/a</dd>
		
          <dt>Additional information:</dt>
          <dd>
            <dl newline="false" spacing="normal">
              <dt>Magic number(s):</dt>
              <dd>n/a</dd>
              <dt>File extension(s):</dt>
              <dd>n/a</dd>
              <dt>Macintosh file type code(s):</dt>
              <dd>n/a</dd>
            </dl>
          </dd>

          <dt>Person &amp; email address to contact for further information:</dt>
          <dd>See Authors' Addresses section.</dd>

          <dt>Intended usage:</dt>
          <dd>COMMON</dd>

          <dt>Restrictions on usage:</dt>
          <dd>n/a</dd>

          <dt>Author:</dt>
          <dd>See Authors' Addresses section.</dd>

         <dt>Change controller:</dt>
          <dd>Internet Engineering Task Force (iesg@ietf.org).</dd>
        </dl>
      </section>

	<section anchor="application-alto-propmapparams-media-type" numbered="true" toc="default">
	<name>alto-propmapparams+json Media Type</name>

        <dl newline="true" spacing="normal">
          <dt>Type name:</dt>
          <dd>application</dd>

          <dt>Subtype name:</dt>
          <dd>alto-propmapparams+json</dd>

          <dt>Required parameters:</dt>
          <dd>n/a</dd>

          <dt>Optional parameters:</dt>
          <dd>n/a</dd>

          <dt>Encoding considerations:</dt>
          <dd>Encoding considerations are identical to those specified for the
		"application/json" media type. See <xref target="RFC8259" format="default"/>.</dd>

          <dt>Security considerations:</dt>
          <dd>Security considerations related to the generation and consumption of ALTO
		Protocol messages are discussed in 
		<xref target="RFC7285" section="15" sectionFormat="of" format="default"/> 
		and <xref target="SecSC" format="default"/> of this document.</dd>

          <dt>Interoperability considerations:</dt>
          <dd>n/a</dd>

          <dt>Published specification:</dt>
          <dd>
          This document is the specification for this media type.
          See <xref target="filter-prop-map-params" format="default"/>.</dd>

          <dt>Applications that use this media type:</dt>
          <dd>ALTO servers and ALTO clients <xref target="RFC7285" format="default"/>,  
          either standalone or embedded within other applications, 
          when the queried resource is a filtered property map. 
          This media type indicates the data format used by the ALTO client to supply the property map 
          filtering parameters.          
          </dd>

		<dt>Fragment identifier considerations:</dt>
		<dd>n/a</dd>
		
          <dt>Additional information:</dt>
          <dd>
            <dl newline="false" spacing="normal">
              <dt>Magic number(s):</dt>
              <dd>n/a</dd>
              <dt>File extension(s):</dt>
              <dd>n/a</dd>
              <dt>Macintosh file type code(s):</dt>
              <dd>n/a</dd>
            </dl>
          </dd>

          <dt>Person &amp; email address to contact for further information:</dt>
          <dd>See Authors' Addresses section.</dd>

          <dt>Intended usage:</dt>
          <dd>COMMON</dd>

          <dt>Restrictions on usage:</dt>
          <dd>n/a</dd>

          <dt>Author:</dt>
          <dd>See Authors' Addresses section.</dd>

         <dt>Change controller:</dt>
          <dd>Internet Engineering Task Force (iesg@ietf.org).</dd>
        </dl>		

	</section>

      <section anchor="IANADomain" numbered="true" toc="default">
        <name>ALTO Entity Domain Types Registry</name>
        <t>IANA has created and will maintain the "ALTO Entity Domain Types"
		registry listed in <xref target="TableEntityDomainNames" format="default"/>. 		
		The first row lists information items that must be provided with each 
		registered entity domain type. 
		<xref target="dom-reg-process" format="default"/> specifies how to document
		these items and in addition provides guidance on the security considerations item that must 
		be documented.
		</t>
		
        <table anchor="TableEntityDomainNames" align="center">
          <name>ALTO Entity Domain Types</name>
          <thead>
            <tr>
              <th align="left">Identifier</th>
              <th align="left">Entity Identifier Encoding</th>
              <th align="left">Hierarchy and Inheritance</th>
              <th align="left">Media Type of Defining Resource</th>
              <th align="left">Mapping to ALTO Address Type</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">ipv4</td>
              <td align="left">See <xref target="ipv4-domain" format="default"/></td>
              <td align="left">See <xref target="inet-inheritance" format="default"/></td>
              <td align="left">application/alto-networkmap+json</td>
              <td align="left">true</td>
            </tr>
            <tr>
              <td align="left">ipv6</td>
              <td align="left">See <xref target="ipv6-domain" format="default"/></td>
              <td align="left">See <xref target="inet-inheritance" format="default"/></td>
              <td align="left">application/alto-networkmap+json</td>
              <td align="left">true</td>
            </tr>
            <tr>
              <td align="left">pid</td>
              <td align="left">See <xref target="pid-domain" format="default"/></td>
              <td align="left">None</td>
              <td align="left">application/alto-networkmap+json</td>
              <td align="left">false</td>
            </tr>
          </tbody>
        </table>
        <t>This registry serves two purposes. First, it ensures uniqueness of
identifiers referring to ALTO entity domain types. Second, it states the
requirements for allocated entity domain types.</t>
<t> 
As specified in <xref target="domain-types" format="default"/>, identifiers prefixed 
with "priv:" are reserved for Private Use without a need to register with IANA
</t>  
        <section anchor="consistency-procedure" numbered="true" toc="default">
          <name>Consistency Procedure between ALTO Address Types Registry and ALTO Entity Domain Types Registry</name>
          <t>One potential issue of introducing the "ALTO Entity Domain Types" registry is
its relationship with the "ALTO Address Types" registry already defined in
<xref target="RFC7285" section="14.4" sectionFormat="of" format="default"/>. In particular, the entity identifier of a type
of an entity domain registered in the "ALTO Entity Domain Types" registry <bcp14>MAY</bcp14>
match an address type defined in "ALTO Address Types" registry. It is
necessary to precisely define and guarantee the consistency between "ALTO
Address Types" registry and "ALTO Entity Domain Types" registry.</t>
          <t>We define that the "ALTO Entity Domain Types" registry is consistent with "ALTO
Address Types" registry if two conditions are satisfied:</t>
          <ul spacing="normal">
            <li>When an address type is already registered or is able to be registered in the "ALTO Address
Types" registry <xref target="RFC7285" format="default"/>, the same identifier <bcp14>MUST</bcp14> be used when a
corresponding entity domain type is registered in the "ALTO Entity Domain Types"
registry.</li>
            <li>If an ALTO entity domain type has the same identifier as an ALTO address type,
their address encodings <bcp14>MUST</bcp14> be compatible.</li>
          </ul>
          <t>To achieve this consistency, the following items <bcp14>MUST</bcp14> be checked before
registering a new ALTO entity domain type in a future document:</t>
          <ul spacing="normal">
            <li>Whether the "ALTO Address Types" registry contains an address type that can be
used as an identifier for the candidate entity domain type identifier. This has been
done for the identifiers "ipv4" and "ipv6" of <xref target="TableEntityDomainNames" format="default"/>.</li>
            <li>Whether the candidate entity domain type identifier can potentially be an
endpoint address type, as defined in Sections <xref target="RFC7285" section="2.1" sectionFormat="bare" format="default"/>
and <xref target="RFC7285" section="2.2" sectionFormat="bare" format="default"/> of <xref target="RFC7285" format="default"/>.</li>
          </ul>
          <t>When a new ALTO entity domain type is registered, the consistency with the "ALTO
Address Types" registry <bcp14>MUST</bcp14> be ensured by the following procedure:</t>
          <ul spacing="normal">
            <li>
              <t>Test: Do corresponding entity domain type identifiers match a known "network" address type?
              </t>
              <ul spacing="normal">
                <li>
                  <t>If yes (e.g., cell, MAC, or socket addresses):
                  </t>
                  <ul spacing="normal">
                    <li>
                      <t>Test: Is such an address type present in the "ALTO Address Types"
registry?
                      </t>
                      <ul spacing="normal">
                        <li>If yes: Set the new ALTO entity domain type identifier to be the
found ALTO address type identifier.</li>
                        <li>If no: Define a new ALTO entity domain type identifier and use it to
register a new address type in the "ALTO Address Types" registry
following <xref target="RFC7285" section="14.4" sectionFormat="of" format="default"/>.</li>
                      </ul>
                    </li>
                    <li>Use the new ALTO entity domain type identifier to register a new ALTO
entity domain type in the "ALTO Entity Domain Types" registry following
<xref target="dom-reg-process" format="default"/> of this document.</li>
                  </ul>
                </li>
                <li>If no (e.g., PID name, ANE name, or "countrycode"): Proceed with the ALTO
Entity Domain Type registration as described in <xref target="dom-reg-process" format="default"/>.</li>
              </ul>
            </li>
          </ul>
        </section>

        <section anchor="dom-reg-process" numbered="true" toc="default">
          <name>ALTO Entity Domain Type Registration Process</name>
          <t>New ALTO entity domain types are assigned after IETF Review <xref target="RFC8126" format="default"/> to
		ensure that proper documentation regarding the new ALTO entity domain types
		and their security considerations has been provided. RFCs defining new entity
		domain types <bcp14>MUST</bcp14> indicate how an entity in a registered type of domain is
		encoded as an EntityID and, if applicable, provide the rules for defining the entity
		hierarchy and property inheritance. Updates and deletions of ALTO entity
		domains types follow the same procedure.
		</t>
          <t>Registered ALTO entity domain type identifiers <bcp14>MUST</bcp14> conform to the
		syntactical requirements specified in <xref target="domain-names" format="default"/>. 
		Identifiers are to be recorded and displayed as strings.
		</t>
          <t>Requests to IANA to add a new value to the "ALTO Entity Domain Types" registry
		<bcp14>MUST</bcp14> include the following information:</t>
          <dl spacing="normal">
            <dt>Identifier:</dt>
            <dd>The name of the desired ALTO entity domain type.</dd>

            <dt>Entity Identifier Encoding:</dt>
            <dd>The procedure for encoding the identifier of an
			entity of the registered domain type as an EntityID (see
			<xref target="entity-addrs" format="default"/>). If corresponding entity identifiers of an entity domain
			type match a known "network" address type, the Entity Identifier Encoding
			of this domain identifier <bcp14>MUST</bcp14> include both Address Encoding and Prefix
			Encoding of the same identifier registered in the "ALTO Address Types"
			registry <xref target="RFC7285" format="default"/>. To define properties, an individual entity identifier
			and the corresponding full-length prefix <bcp14>MUST</bcp14> be considered aliases for the
			same entity.</dd>

            <dt>Hierarchy:</dt>
            <dd>If the entities form a hierarchy, the procedure for determining
			that hierarchy.</dd>

            <dt>Inheritance:</dt>
            <dd>If entities can inherit property values from other entities, the
			procedure for determining that inheritance.</dd>

            <dt>Media type of defining information resource:</dt>
            <dd>Some entity domain types allow
			an entity domain name to be combined with an information resource name to
			define a resource-specific entity domain. Such an information resource is
			called a "defining information resource" and is 
			defined in <xref target="def-ir" format="default"/>. 
			For each entity domain type, the potential defining information resources 
			have one common media type. This unique common media type is specific to 
			the entity domain type and <bcp14>MUST</bcp14> be specified. </dd>

            <dt>Mapping to ALTO Address Type:</dt>
            <dd>A boolean value to indicate if the entity domain
			type can be mapped to the ALTO address type with the same identifier.</dd>

            <dt>Security Considerations:</dt>
            <dd>In some usage scenarios, entity identifiers carried in
			ALTO Protocol messages may reveal information about an ALTO client or an ALTO
			service provider. Applications and ALTO service providers using addresses of
			the registered type should be cognizant of how (or if) the addressing scheme
			relates to private information and network proximity.</dd>
          </dl>
          <t>IANA has registered the identifiers "ipv4", "ipv6", and
		"pid", as shown in <xref target="TableEntityDomainNames" format="default"/>.</t>
        </section>
      </section>

      <section anchor="IANAEntityProp" numbered="true" toc="default">
        <name>ALTO Entity Property Types Registry</name>
        <t>IANA has created and will maintain the "ALTO Entity Property
		Types" registry, which is listed in <xref target="TablePropertyTypes" format="default"/>.
		</t>
        <t>This registry extends the "ALTO Endpoint Property Types" registry, defined in
		<xref target="RFC7285" format="default"/>, in that a property type is defined for 
		one or more entity domains, rather than just for IPv4 and IPv6 Internet address domains. 
		An entry in this registry is an ALTO entity property type defined in
		<xref target="def-property-type" format="default"/>. 
		Thus, a registered ALTO entity property type identifier <bcp14>MUST</bcp14> conform to 
		the syntactical requirements specified in that section.
		</t>
		<t>As specified in <xref target="def-property-type" format="default"/>, 
		identifiers prefixed with "priv:" are
		reserved for Private Use without a need to register with IANA.
		</t>
		<t>The first row of <xref target="TablePropertyTypes" format="default"/> lists
	   information items that must be provided with each registered entity property type. 
		</t>
        <table anchor="TablePropertyTypes" align="center">
          <name>ALTO Entity Property Types</name>
          <thead>
            <tr>
              <th align="left">Identifier</th>
              <th align="left">Intended Semantics</th>
              <th align="left">Media Type of Defining Resource</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">pid</td>
              <td align="left">See <xref target="RFC7285" section="7.1.1" sectionFormat="of" format="default"/></td>
              <td align="left">application/alto-networkmap+json</td>
            </tr>
          </tbody>
        </table>
        <t>New ALTO entity property types are assigned after 
		IETF Review <xref target="RFC8126" format="default"/>
		to ensure that proper documentation regarding the new ALTO entity
		property types and their security considerations has been provided.
		RFCs defining new entity property types <bcp14>SHOULD</bcp14> indicate how a property 
		of a registered type is encoded as a property name. 
		Updates and deletions of ALTO entity property types follow the same procedure. 
        </t>
        <t>Requests to IANA to add a new value to the registry <bcp14>MUST</bcp14> include the
following information:</t>
        <dl spacing="normal">
          <dt>Identifier:</dt>
          <dd>The identifier for the desired ALTO entity property type. The
format <bcp14>MUST</bcp14> be as defined in <xref target="def-property-type" format="default"/> of this document.
</dd>

          <dt>Intended Semantics:</dt>
          <dd>ALTO entity properties carry with them semantics to guide
their usage by ALTO clients. Hence, a document defining a new type <bcp14>SHOULD</bcp14>
provide guidance to both ALTO service providers and applications utilizing
ALTO clients as to how values of the registered ALTO entity property should
be interpreted.</dd>

          <dt>Media type of defining information resource:</dt>
          <dd>when the property type allows
		values to be defined relative to a given information resource, the latter
		is referred to as the "defining information resource"; see the description
		in <xref target="def-ir-for-irsp" format="default"/>. 
		For each property type, the potential defining information resources have 
		one common media type. This unique common media type is specific to the 
		property type and <bcp14>MUST</bcp14> be specified. 
		</dd>

          <dt>Security Considerations:</dt>
          <dd>ALTO entity properties expose information to ALTO
clients. ALTO service providers should be cognizant of the security
ramifications related to the exposure of an entity property.</dd>
        </dl>
        <t>In security considerations, the request should also discuss the sensitivity
of the information and why it is required for ALTO-based operations.
Regarding this discussion, the request <bcp14>SHOULD</bcp14> follow the recommendations of
the "ALTO Endpoint Property Types" registry in <xref target="RFC7285" section="14.3" sectionFormat="of" format="default"/>.</t>
        <t>IANA has registered the identifier "pid", which is listed in
<xref target="TablePropertyTypes" format="default"/>. Semantics for this property are documented in
<xref target="RFC7285" section="7.1.1" sectionFormat="of" format="default"/>. No security issues related to the exposure of a
"pid" identifier are considered, as it is exposed with the Network Map
Service defined and mandated in <xref target="RFC7285" format="default"/>.</t>
      </section>
    </section>
  </middle>
  <back>

<displayreference target="I-D.ietf-alto-path-vector" to="PATH-VECTOR"/>
    
    <references>
      <name>References</name>
      
      <references>
        <name>Normative References</name>

        <reference anchor="ISO3166-1">
          <front>
            <title>Codes for the representation of names of countries and their subdivisions -- Part 1: Country codes</title>
            <author>
              <organization>International Organization for Standardization</organization>
            </author>
            <date month="August" year="2020"/>
          </front>
          <seriesInfo name="ISO" value="3166-1:2020"/>
        </reference>

        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4291.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4632.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5952.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7285.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8895.xml"/>

      </references>

      <references>
        <name>Informative References</name>

        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3849.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5737.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5511.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7921.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8896.xml"/>
        
        <reference anchor="RFC9241" target="https://www.rfc-editor.org/info/rfc9241">
          <front>
            <title>Content Delivery Network Interconnection (CDNI) Footprint and Capabilities Advertisement Using Application-Layer Traffic Optimization (ALTO)</title>
            <author initials="J" surname="Seedorf" fullname="Jan Seedorf">
              <organization/>
            </author>
            <author initials="Y" surname="Yang" fullname="Y. Yang">
              <organization/>
            </author>
            <author initials="K" surname="Ma" fullname="Kevin Ma">
              <organization/>
            </author>
            <author initials="J" surname="Peterson" fullname="Jon Peterson">
              <organization/>
            </author>
            <author initials="J" surname="Zhang" fullname="Jingxuan Zhang">
              <organization/>
            </author>
            <date year="2022" month="July"/>
          </front>
          <seriesInfo name="RFC" value="9241"/>
          <seriesInfo name="DOI" value="10.17487/RFC9241"/>
        </reference>

        <xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.ietf-alto-path-vector.xml"/>

      </references>
    </references>

    
    <section anchor="features-introduced-with-epm-extension" numbered="true" toc="default">
      <name>Features Introduced with the Entity Property Maps Extension</name>
      <t>The entity property maps extension described in this document introduces a
number of features that are summarized in table below. The first column
provides the name of the feature. The second column provides the section
number of this document that gives a high-level description of the feature.
The third column provides the section number of this document that gives a
normative description relating to the feature, when applicable.</t>
      <table anchor="TableUPFeatures" align="center">
        <name>Features Introduced with ALTO Entity Property Maps</name>
        <thead>
          <tr>
            <th align="left">Feature</th>
            <th align="left">High-Level Description</th>
            <th align="left">Related Normative Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left">Entity</td>
            <td align="left">
              <xref target="con-entity" format="default"/></td>
            <td align="left">
              <xref target="entity-addrs" format="default"/></td>
          </tr>
          <tr>
            <td align="left">Entity domain</td>
            <td align="left">
              <xref target="con-entity-domain" format="default"/></td>
            <td align="left"></td>
          </tr>
          <tr>
            <td align="left">Entity domain type</td>
            <td align="left">
              <xref target="con-entity-domain-type" format="default"/></td>
            <td align="left">
              <xref target="domain-types" format="default"/></td>
          </tr>
          <tr>
            <td align="left">Entity domain name</td>
            <td align="left">
              <xref target="con-entity-domain-name" format="default"/></td>
            <td align="left">
              <xref target="domain-names" format="default"/></td>
          </tr>
          <tr>
            <td align="left">Entity property type</td>
            <td align="left">
              <xref target="con-property" format="default"/></td>
            <td align="left">
              Sections <xref target="def-property" format="counter"/>, <xref target="def-property-type" format="counter"/>, <xref target="entity-property-name" format="counter"/>, and <xref target="format-entity-property-value" format="counter"/></td>
          </tr>
          <tr>
            <td align="left">Entity property map</td>
            <td align="left">
              <xref target="con-propmap" format="default"/></td>
            <td align="left">
              Sections <xref target="prop-map" format="counter"/> and <xref target="filter-prop-map" format="counter"/></td>
          </tr>
          <tr>
            <td align="left">Resource-specific entity domain name</td>
            <td align="left">
              <xref target="rsed-name" format="default"/></td>
            <td align="left">
              Sections <xref target="domain-names" format="counter"/> and <xref target="resource-specific-ED" format="counter"/></td>
          </tr>
          <tr>
            <td align="left">Resource-specific entity property value</td>
            <td align="left">
              <xref target="rsep" format="default"/></td>
            <td align="left">
              <xref target="format-entity-property-value" format="default"/></td>
          </tr>
          <tr>
            <td align="left">Entity Hierarchy and property inheritance</td>
            <td align="left">
              <xref target="con-hni" format="default"/></td>
            <td align="left">
              <xref target="def-hierarchy-and-inheritance" format="default"/></td>
          </tr>
          <tr>
            <td align="left">Defining information resource</td>
            <td align="left">
              Sections <xref target="def-ir" format="counter"/> and <xref target="def-ir-for-irsp" format="counter"/></td>
            <td align="left">
              Sections <xref target="dom-reg-process" format="counter"/> and <xref target="IANAEntityProp" format="counter"/></td>
          </tr>
        </tbody>
      </table>
    </section>
    <section anchor="ack" numbered="false" toc="default">
      <name>Acknowledgments</name>
      <t>The authors would like to thank <contact fullname="Dawn Chen"/> and <contact fullname="Shenshen Chen"/> for their contributions to earlier drafts.
Thank you also to <contact fullname="Qiao Xiang"/>, <contact fullname="Shawn Lin"/>, and <contact fullname="Xin Wang"/>
for fruitful discussions. Last, big thanks to <contact fullname="Danny Perez"/> and <contact fullname="Luis Contreras"/> for their
substantial working group review feedback and suggestions for improving this document, 
to <contact fullname="Vijay Gurbani"/>, ALTO WG Chair, and <contact fullname="Martin Duke"/>, Transport Area Director, 
for their thorough review, discussions, guidance, and shepherding, which further helped to
enrich this document.</t>
    </section>
  </back>
</rfc>
