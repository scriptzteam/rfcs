<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-cose-key-thumbprint-06" number="9679" updates="" obsoletes="" submissionType="IETF" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true" version="3" xml:lang="en" >

  <front>
    <title abbrev="COSE Key Thumbprint">CBOR Object Signing and Encryption (COSE) Key Thumbprint</title>
    <seriesInfo name="RFC" value="9679"/>
    <author initials="K." surname="Isobe" fullname="Kohei Isobe">
      <organization>SECOM CO., LTD.</organization>
      <address>
	<postal>
	  <country>Japan</country>
	</postal>
        <email>isobekohei@gmail.com</email>
      </address>
    </author>
    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization abbrev="H-BRS">University of Applied Sciences Bonn-Rhein-Sieg</organization>
      <address>
        <postal>
          <country>Germany</country>
        </postal>
        <email>hannes.tschofenig@gmx.net</email>
      </address>
    </author>
    <author initials="O." surname="Steele" fullname="Orie Steele">
      <organization>Transmute</organization>
      <address>
        <postal>
          <country>United States of America</country>
        </postal>
        <email>orie@transmute.industries</email>
      </address>
    </author>
    <date year="2024" month="December"/>
    <area>SEC</area>
    <workgroup>cose</workgroup>


    <abstract>

<t>This specification defines a method for computing a hash value over a CBOR
Object Signing and Encryption (COSE) Key. It specifies which fields within
the COSE Key structure are included in the cryptographic hash computation,
the process for creating a canonical representation of these fields, and how
to hash the resulting byte sequence. The resulting hash value, referred to
as a "thumbprint", can be used to identify or select the corresponding key.</t>
    </abstract>
  </front>
  <middle>


<section anchor="introduction">
      <name>Introduction</name>
      <t>This specification defines a method for applying a cryptographic
hash function to a CBOR Object Signing and Encryption (COSE) Key
structure <xref target="RFC9052"/>, resulting in a hash value known as a
"thumbprint". To achieve this, the document specifies which fields
in the COSE Key structure are included in the hash computation, the
process for creating a canonical form of these fields, and how to
hash the resulting byte sequence. One of the primary use cases for
this thumbprint is as a naming scheme for identifying or selecting
the key, such as by using the COSE Key Thumbprint value as a "kid"
(key ID). Another key use case involves key derivation functions
that use the thumbprints of public keys from the endpoints, along
with other application context, to derive a symmetric key.</t>
      <t>This specification outlines how thumbprints of COSE Keys are generated
for both asymmetric and symmetric keys (see Sections <xref target="thumbprint" format="counter"/> and
<xref target="required" format="counter"/>). Additionally, it introduces a new CBOR Web Token (CWT) confirmation method, which has been added to the IANA
"CWT Confirmation Methods" registry established by <xref target="RFC8747"/>.
For further details on the use of a confirmation claim in a CWT
with a proof-of-possession key, refer to <xref target="RFC8747" sectionFormat="of" section="3.1"/>.</t>
    </section>
    <section anchor="terminology">
      <name>Terminology</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>

    </section>
    <section anchor="thumbprint">
      <name>COSE Key Thumbprint</name>
      <t>The thumbprint of a COSE Key <bcp14>MUST</bcp14> be computed as follows:</t>
      <ol spacing="normal" type="1"><li>
          <t>Construct a COSE_Key structure (see <xref target="RFC9052"
          sectionFormat="of" section="7"/>) containing only the required
          parameters representing the key as described in <xref
          target="required" format="default"/> of this document.</t>
        </li>
        <li>
          <t>Apply the deterministic encoding described in <xref
          target="RFC8949" sectionFormat="of" section="4.2.1"/> to the
          representation constructed in step 1.</t>
        </li>
        <li>
          <t>Hash the bytes produced in step 2 with a cryptographic hash function H.
For example, SHA-256 <xref target="RFC6234"/> may be used as a hash function.</t>
        </li>
      </ol>
      <t>The details of this computation are further described in subsequent
sections.</t>
      <t>The SHA-256 hash algorithm <bcp14>MUST</bcp14> be supported; other algorithms <bcp14>MAY</bcp14> be supported.</t>
    </section>
    <section anchor="required">
      <name>Required COSE Key Parameters</name>
      <t>Only the required parameters of a key's representation are used when
computing its COSE Key Thumbprint value. This section summarizes the
required parameters.</t>
      <t>The "kty" (label: 1) element <bcp14>MUST</bcp14> be present for all key types, and the integer
value specified in the IANA "COSE Key Types" registry <bcp14>MUST</bcp14> be used. The tstr data
type is not used with the "kty" element.</t>
      <t>Many COSE Key parameters are specific to the chosen key type. The following
subsections list the required parameters for commonly used key types.</t>
      <section anchor="octet-key-pair-okp">
        <name>Octet Key Pair (OKP)</name>
      <t>The required parameters for elliptic curve public keys that use the Octet Key Pair (OKP) key type,
such as X25519, are:</t>
        <ul spacing="normal">
          <li>
            <t>"kty" (label: 1, data type: int, value: 1)</t>
          </li>
          <li>
            <t>"crv" (label: -1, value: int)</t>
          </li>
          <li>
            <t>"x" (label: -2, value: bstr)</t>
          </li>
        </ul>
        <t>Further details are described in <xref target="RFC9053" sectionFormat="of" section="7.1"/>.</t>
      </section>
      <section anchor="ecc">
	
        <name>Elliptic Curve Keys with X- and Y-Coordinates</name>
        <t>The required parameters for elliptic curve public keys that use the EC2 key type, such as NIST P-256, are:</t>
        <ul spacing="normal">
          <li>
            <t>"kty" (label: 1, data type: int, value: 2)</t>
          </li>
          <li>
            <t>"crv" (label: -1, data type: int)</t>
          </li>
          <li>
            <t>"x" (label: -2, data type: bstr)</t>
          </li>
          <li>
            <t>"y" (label: -3, data type: bstr)</t>
          </li>
        </ul>
        <t>Further details are described in <xref target="RFC9053" sectionFormat="of" section="7.1"/>.</t>
        <t>Note: <xref target="RFC9052"/> supports both compressed and uncompressed point
representations. For interoperability, implementations adhering to
this specification <bcp14>MUST</bcp14> use the uncompressed point representation.
Therefore, the y-coordinate is expressed as a bstr. If an
implementation uses the compressed point representation, it
<bcp14>MUST</bcp14> first convert it to the uncompressed form for the purpose
of thumbprint calculation.</t>
      </section>
      <section anchor="rsa-public-keys">
        <name>RSA Public Keys</name>
        <t>The required parameters for an RSA public key are:</t>
        <ul spacing="normal">
          <li>
            <t>"kty" (label: 1, data type: int, value: 3)</t>
          </li>
          <li>
            <t>"n" (label: -1, data type: bstr)</t>
          </li>
          <li>
            <t>"e" (label: -2, data type: bstr)</t>
          </li>
        </ul>
      </section>
      <section anchor="symmetric-keys">
        <name>Symmetric Keys</name>
        <t>The required parameters for a symmetric key are:</t>
        <ul spacing="normal">
          <li>
            <t>"kty" (label: 1, data type: int, value: 4)</t>
          </li>
          <li>
            <t>"k" (label: -1, data type: bstr)</t>
          </li>
        </ul>
      </section>
      
      <section anchor="hss-lms">
        <name>HSS-LMS Keys</name>
        <t>The required parameters for HSS-LMS keys are:</t>
        <ul spacing="normal">
          <li>
            <t>"kty" (label: 1, data type: int, value: 5)</t>
          </li>
          <li>
            <t>"pub" (label: -1, data type: bstr)</t>
          </li>
        </ul>
      </section>
      <section anchor="others">
        <name>Others</name>
        <t>As other key type values are defined, their defining specifications
should be similarly consulted to determine which
parameters, in addition to the "kty" element, are required.</t>
      </section>
    </section>
    <section anchor="miscellaneous-considerations">
      <name>Miscellaneous Considerations</name>
      <section anchor="why-not-include-optional-cose-key-parameters">
        <name>Why Not Include Optional COSE Key Parameters?</name>
        <t>Optional parameters of COSE Keys are intentionally not included in the
COSE Key Thumbprint computation so that their absence or presence
in the COSE Key does not alter the resulting value. The COSE Key Thumbprint is a digest of the ordered essential parameters needed to represent a COSE Key, with all other parameters excluded.</t>
        <t>By excluding optional parameters, the COSE Key Thumbprint consistently
refers to the key itself, not to a key with additional attributes.
Different application contexts may include various optional attributes
in the COSE Key structure. If these optional parameters were included
in the thumbprint calculation, the resulting values could differ for
the same key depending on the attributes present. Including only the
required parameters ensures that the COSE Key Thumbprint remains
consistent for a given key, regardless of any additional attributes.</t>
        <t>Different kinds of thumbprints could be defined by other specifications
that might include some or all additional COSE Key parameters, if use
cases arise where such different kinds of thumbprints would be useful.</t>
      </section>
      <section anchor="selection-of-hash-function">
        <name>Selection of Hash Function</name>
        <t>A specific hash function must be chosen by an application to compute
the hash value of the hash input. For instance, SHA-256 <xref target="RFC6234"/>
may be used as the hash function. While SHA-256 is a good default
choice at the time of writing, the preferred hash function may evolve
as the cryptographic landscape develops.</t>
        <t>In many cases, only the party that generates the key needs to be
aware of the hash function used. For example, the key producer might
use the thumbprint value as a "kid" (key ID). In such scenarios, the
consumer of the "kid" treats it as an opaque value solely for key
selection.</t>
        <t>However, when multiple parties are involved in reproducing and
comparing the COSE Key Thumbprint, it is crucial that they know
and use the same hash function to ensure consistent results.</t>
      </section>
      <section anchor="thumbprints-of-keys-not-in-cose-key-format">
        <name>Thumbprints of Keys Not in COSE Key Format</name>
        <t>Keys that are in other formats can be represented as COSE Keys.
   The only prerequisites are that the COSE_Key representation
   of the key be defined and the party creating the COSE Key Thumbprint
   be in possession of the necessary key material.</t>
      </section>
      <section anchor="relationship-to-digests-of-x509-values">
        <name>Relationship to Digests of X.509 Values</name>
<t>COSE Key Thumbprint values are computed on the COSE Key object containing only essential parameters in a specific order.  Thus, they are more analogous to applications that
use digests of X.509 Subject Public Key Info (SPKI) values, which are
defined in <xref target="RFC5280" sectionFormat="of" section="4.1.2.7"/>, than to applications that
use digests of complete certificate values, as the "x5t" (X.509
certificate SHA-1 thumbprint) <xref target="RFC9360"/> value defined for X.509
certificate objects does.  While logically equivalent to a digest of
the SPKI representation of the key, a COSE Key Thumbprint is computed over
the CBOR representation of that key rather than over an ASN.1
representation of it.</t>
      </section>

 <section anchor="relationship-JWT-thumbprints">
        <name>Relationship to JSON Web Key Thumbprints</name>
	<t>
  The ckt of a COSE Key, as described in <xref target="RFC9052" sectionFormat="of" section="7"/>, and the jkt of a JSON Web Key, as described in <xref target="RFC7517" sectionFormat="of" section="4"/>, are different even when 
	the underlying cryptographic key material is the same.</t>
	<t>
   This document does not register
   a JWT confirmation method <xref target="RFC7800"/>
   for using "ckt" as a confirmation method for a JWT
   or a CWT confirmation method <xref target="RFC8747"/>
   for using "jkt" as a confirmation method for a CWT.
	</t>
 </section>
      
      <section anchor="confirmation-method">
        <name>Confirmation Method</name>
        <t><xref target="RFC8747"/> introduces confirmation methods for use with CWTs with the addition of the "cnf" claim. CWTs are defined in <xref target="RFC8392"/>. This specification adds a new
confirmation method based on COSE Key Thumbprints.</t>
        <t>The proof-of-possession key is identified using the "ckt" member of
the CWT confirmation claim "cnf". This member contains the value of
the COSE Key Thumbprint encoded as a binary string. Instead of
communicating the actual COSE Key, only the thumbprint is conveyed.
This approach assumes that the recipient is able to obtain the
identified COSE Key using the thumbprint contained in the "ckt"
member. In this approach, the issuer of a CWT declares that the
presenter possesses a particular key and that the recipient
can cryptographically confirm the presenter's proof of possession
of the key by including a "ckt" CWT confirmation method member in the CWT.</t>
	
        <t>The following example demonstrates the use of the "ckt" member
in a CWT as part of the confirmation method (with line breaks inserted
	for editorial reasons):</t>	

        <sourcecode type="cbor-diag"><![CDATA[
   {
    /iss/ 1 : "coaps://as.example.com",
    /aud/ 3 : "coaps://resource.example.org",
    /exp/ 4 : 1361398824,
    /cnf/ 8 : {
      /ckt/ 5 : h'496bd8afadf307e5b08c64b0421bf9dc
                  01528a344a43bda88fadd1669da253ec'
     }
   }]]></sourcecode>

        <t><xref target="IANA"/> registers the "ckt" CWT confirmation method member.
The "ckt" member is used in the "cnf" claim.</t>
      </section>
      <section anchor="cose-key-thumbprint-uris">
        <name>COSE Key Thumbprint URIs</name>
        <t>This specification defines Uniform Resource Identifiers (URIs)
to represent a COSE Key Thumbprint value. The design follows
the work of JSON Web Key (JWK) Thumbprint URIs, as specified
in <xref target="RFC9278"/>. This enables COSE Key Thumbprints to be used,
for example, as key identifiers in contexts requiring URIs.
This specification defines a URI prefix indicating that the
portion of the URI following the prefix is a COSE Key Thumbprint.</t>
        <t>The following URI prefix is defined to indicate that the portion
of the URI following the prefix is a COSE Key Thumbprint:</t>

<t indent="3">urn:ietf:params:oauth:ckt</t>

        <t>To make the hash algorithm being used explicit in a URI, the prefix
is followed by a hash algorithm identifier and a COSE Key Thumbprint
value, each separated by a colon character to form a URI representing
a COSE Key Thumbprint.</t>
        <t>Hash algorithm identifiers used in COSE Key Thumbprint URIs <bcp14>MUST</bcp14> be values from the "Hash Name String" column in the IANA "Named Information Hash Algorithm Registry" <xref target="IANA.Hash.Algorithms"/>. COSE Key Thumbprint URIs with hash algorithm identifiers not found in this registry are not
considered valid, and applications <bcp14>MUST</bcp14> detect and handle this
error, should it occur.</t>
        <t>Since the URN is encoded as a string, the output of the COSE Key
Thumbprint computation described in <xref target="thumbprint"/> <bcp14>MUST</bcp14> be base64url encoded without padding.</t>
        <t><xref target="RFC7515"/> specifies base64url encoding as follows:</t>
        <blockquote>Base64 encoding using the URL- and filename-safe character set
	defined in Section <xref target="RFC4648" section="5" 
sectionFormat="bare"></xref> of RFC 4648 <xref target="RFC4648"/>, with all trailing '='
characters omitted (as permitted by <xref target="RFC7515" sectionFormat="of" section="3.2"/>) and without the inclusion of any line breaks,
whitespace, or other additional characters.  Note that the base64url
encoding of the empty octet sequence is the empty string.
(See <xref target="RFC7515" sectionFormat="of" section="C"/> for notes on implementing base64url
encoding without padding.)</blockquote>

        <t>The base64url encoding of the thumbprint shown in <xref target="example"/> is
shown below (with a line break added for readability purposes).</t>

<t indent="3">SWvYr63zB-WwjGSwQhv53AFSijRKQ72oj63RZp2iU-w</t>

        <t>The full example of a COSE Key Thumbprint URI is shown below (with a line break added for readability).</t>

<t indent="3">urn:ietf:params:oauth:ckt:sha-256:</t>
<t indent="3">SWvYr63zB-WwjGSwQhv53AFSijRKQ72oj63RZp2iU-w</t>
<t>Note that the use of oauth in the namespace is to align with JWK Thumbprint URIs as described in <xref target="RFC9278"/>; however, these URIs are intended for use with applications and specifications not necessarily related to OAuth.</t>
      </section>
    </section>
    <section anchor="example">
      <name>Example</name>
      <t>This section demonstrates the COSE Key Thumbprint computation for the
following example COSE Key containing an Elliptic Curve Cryptography (ECC) public key.</t>
      <t>For better readability, the example is first presented in CBOR diagnostic format (with
the long line broken for display purposes only).</t>

      <sourcecode type="cbor-diag"><![CDATA[
  {
    / kty set to EC2 = Elliptic Curve Keys /
    1:2,
    / crv set to P-256 /
    -1:1,
    / public key: x-coordinate /
    -2:h'65eda5a12577c2bae829437fe338701a10aaa375e1bb5b5de108de439c0
8551d',
    / public key: y-coordinate /
    -3:h'1e52ed75701163f7f9e40ddf9f341b3dc9ba860af7e0ca7ca7e9eecd008
4d19c',
    / kid is bstr, not used in COSE Key Thumbprint /
    2:h'496bd8afadf307e5b08c64b0421bf9dc01528a344a43bda88fadd1669da2
53ec'
  }]]></sourcecode>

      <t>The example above corresponds to the following CBOR encoding
(with link breaks added for display purposes only):</t>

      <sourcecode type="test-vectors"><![CDATA[
A50102200121582065EDA5A12577C2BAE829437FE338701A10AAA375E1BB5B5DE108D
E439C08551D2258201E52ED75701163F7F9E40DDF9F341B3DC9BA860AF7E0CA7CA7E9
EECD0084D19C025820496BD8AFADF307E5B08C64B0421BF9DC01528A344A43BDA88FA
DD1669DA253EC]]></sourcecode>

      <t>Not all of the parameters from the example above are used in the COSE Key
Thumbprint computation because the required parameters of an elliptic curve
public key are (as listed in <xref target="ecc"/>) "kty", "crv", "x", and "y".</t>
      <t>The resulting COSE Key structure, in CBOR diagnostic format with
line breaks added for better readability, with the minimum parameters
in the correct order are:</t>

      <sourcecode type="cbor-diag"><![CDATA[
{
   1:2,
  -1:1,
  -2:h'65eda5a12577c2bae829437fe338701a
       10aaa375e1bb5b5de108de439c08551d',
  -3:h'1e52ed75701163f7f9e40ddf9f341b3d
       c9ba860af7e0ca7ca7e9eecd0084d19c'
}]]></sourcecode>

      <t>In CBOR encoding, the result is (with line breaks added for display
purposes only):</t>

      <sourcecode type="test-vectors"><![CDATA[
A40102200121582065EDA5A12577C2BAE829437FE338701A10AAA375E1BB5B5DE
108DE439C08551D2258201E52ED75701163F7F9E40DDF9F341B3DC9BA860AF7E0
CA7CA7E9EECD0084D19C]]></sourcecode>

      <t>Using SHA-256, the resulting thumbprint is:</t>

      <sourcecode type="test-vectors"><![CDATA[
496bd8afadf307e5b08c64b0421bf9dc01528a344a43bda88fadd1669da253ec]]></sourcecode>

    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>A COSE Key Thumbprint will only uniquely identify a particular key if a
single unambiguous COSE Key representation for that key is defined and
used when computing the COSE Key Thumbprint. Key identifiers are not
included in the thumbprint calculation (similarly to other optional
parameters in the COSE_Key structure). If the inclusion
of specific optional parameters in the thumbprint calculation is important
for a particular application, this specification would not be suitable.</t>
      <t>While thumbprint values are useful for identifying legitimate keys,
comparing thumbprint values is not a reliable means of excluding the
use of particular keys (or transformations thereof). The reason is
because an attacker may supply a key that is a transformation of a key
in order for it to appear as a different key.  For instance, if
a legitimate RSA key uses a modulus value N and an attacker supplies
a key with modulus 3*N, the modified key would still work about 1/3
of the time, but it would appear to be a different key.</t>
      <t>Producing thumbprints of symmetric keys needs to be done with care. Developers
<bcp14>MUST</bcp14> ensure that the symmetric key has sufficient entropy to prevent
attackers from precomputing tables of symmetric keys with their corresponding
hash values. This can be prevented if the symmetric key is a randomly
selected key of at least a 128-bit length. Thumbprints <bcp14>MUST NOT</bcp14> be used 
with passwords or other low-entropy secrets. If a
developer is unable to determine whether all symmetric keys used in an
application have sufficient entropy, then thumbprints of symmetric keys
<bcp14>MUST NOT</bcp14> be used. In general, using thumbprints of symmetric keys should
only be used in special applications. In most other deployment scenarios,
it is more appropriate to utilize a different naming scheme for key
identifiers.</t>
    </section>
    <section anchor="IANA">
      <name>IANA Considerations</name>
      
      <t>IANA has added the following entry to the "CWT Confirmation
Methods" registry <xref target="IANA-CWT"/> established by <xref target="RFC8747"/>:</t>
      <dl spacing="compact" newline="false">
          <dt>Confirmation Method Name:</dt><dd>ckt</dd>
          <dt>Confirmation Method Description:</dt><dd>COSE Key SHA-256 Thumbprint</dd>
          <dt>JWT Confirmation Method Name:</dt><dd>(none)</dd>
          <dt>Confirmation Key:</dt><dd>5</dd>
          <dt>Confirmation Value Type(s):</dt><dd>binary string</dd>
          <dt>Change Controller:</dt><dd>IETF</dd>
          <dt>Specification Document(s):</dt><dd>RFC 9679</dd>
        </dl>

      <t>Furthermore, IANA has added a value to the "OAuth URI" registry <xref target="IANA-OAuth"/>
established by <xref target="RFC6755"/>:</t>
      <dl spacing="compact" newline="false">
          <dt>URN:</dt><dd>urn:ietf:params:oauth:ckt</dd>
          <dt>Common Name:</dt><dd>COSE Key Thumbprint URI</dd>
          <dt>Change Controller:</dt><dd>IETF</dd>
          <dt>Specification Document(s):</dt><dd>RFC 9679</dd>
      </dl>

    </section>
  
  </middle>
  <back>
    <references>
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8949.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9052.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9053.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8747.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8392.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7515.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6755.xml"/>
      </references>
      <references anchor="sec-informative-references">
        <name>Informative References</name>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7517.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7638.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6234.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5280.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7800.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9360.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9278.xml"/>
        <reference anchor="IANA.Hash.Algorithms" target="https://www.iana.org/assignments/named-information">
          <front>
            <title>Named Information Hash Algorithm Registry</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>

  <reference anchor="IANA-CWT" target="https://www.iana.org/assignments/cwt">
          <front>
            <title>CWT Confirmation Methods</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>

  <reference anchor="IANA-OAuth" target="https://www.iana.org/assignments/oauth-parameters">
          <front>
            <title>OAuth URI</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
	
      </references>
    </references>
      <section anchor="acknowledgements" numbered="false">
      <name>Acknowledgements</name>
      
      <t>We would like to thank the authors of <xref target="RFC7638"/> for
      their work on the JWK Thumbprint specification. This
      document applies JWK Thumbprints to COSE Key structures.</t>
      <t>Additionally, we would like to thank <contact fullname="Carsten
      Bormann"/>, <contact fullname="Ilari Liusvaara"/>, <contact
      fullname="Laurence Lundblade"/>, <contact fullname="Daisuke Ajitomi"/>,
      <contact fullname="Michael Richardson"/>, <contact fullname="Michael
      B. Jones"/>, <contact fullname="Mallory Knodel"/>, <contact
      fullname="Joel Jaeggli"/>, <contact fullname="Derrell Piper"/>, <contact
      fullname="Patrik Fältström"/>, <contact fullname="Warren Kumari"/>,
      <contact fullname="Deb Cooley"/>, and <contact fullname="Brendan Moran"/>
      for their feedback.</t>
    </section>
  </back>
</rfc>
