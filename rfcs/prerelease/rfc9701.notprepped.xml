<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" docName="draft-ietf-oauth-jwt-introspection-response-12" number="9701" ipr="trust200902" obsoletes="" updates="" submissionType="IETF" category="std" consensus="true" xml:lang="en" tocInclude="true" tocDepth="4" symRefs="true" sortRefs="true" version="3">
  
  <!-- xml2rfc v2v3 conversion 3.9.1 -->
<front>
    <title abbrev="JWT Response">JSON Web Token (JWT) Response for OAuth Token Introspection</title>
    <seriesInfo name="RFC" value="9701"/>
    <author fullname="Torsten Lodderstedt" initials="T." role="editor" surname="Lodderstedt">
      <organization>yes.com AG</organization>
      <address>
        <email>torsten@lodderstedt.net</email>
      </address>
    </author>
    <author fullname="Vladimir Dzhuvinov" initials="V." surname="Dzhuvinov">
      <organization>Connect2id Ltd.</organization>
      <address>
        <email>vladimir@connect2id.com</email>
      </address>
    </author>
    <date month="January" year="2025"/>
    <area>SEC</area>
    <workgroup>oauth</workgroup>
    <keyword>token introspection</keyword>
    <keyword>JWT</keyword>
    <keyword>oauth2</keyword>
    <abstract>
      <t>This specification proposes an additional response secured by JSON Web Token (JWT) 
      for OAuth 2.0 Token Introspection.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="Introduction" numbered="true" toc="default">
      <name>Introduction</name>
      <t><xref target="RFC7662" format="default">"OAuth 2.0 Token Introspection"</xref> specifies a 
      method for a protected resource to query an OAuth 2.0 authorization server 
      to determine the state of an access token and obtain data associated with
      the access token. This enables deployments to implement opaque access
      tokens in an interoperable way.</t>
      <t>The introspection response, as specified in <xref target="RFC7662" format="default">"OAuth
      2.0 Token Introspection"</xref>, is a plain JSON object.
      However, there are use cases where the resource server requires stronger
      assurance that the authorization server issued the token introspection 
      response for an access token, including cases where the authorization server 
      assumes liability for the content of the token introspection response. 
      An example is a resource server using verified personal data to create certificates, 
      which in turn are used to create qualified electronic signatures.</t>
      <t>In such use cases, it may be useful or even required to return a
      signed <xref target="RFC7519" format="default">JWT</xref> as the introspection response. 
      This specification extends the token introspection endpoint with the capability 
      to return responses as JWTs.</t>
    </section>
    <section anchor="RNC" numbered="true" toc="default">
      <name>Requirements Notation</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
    interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/> <xref
    target="RFC8174"/> when, and only when, they appear in all capitals, as
    shown here.
        </t>
    </section>
    <section anchor="as-rs-relationship" numbered="true" toc="default">
      <name>Resource Server Management</name>
      <t>The authorization server (AS) and the resource server (RS) maintain a strong, two-way trust relationship.
    The resource server relies on the authorization server to obtain authorization,
    user, and other data as input to its access control decisions and service delivery.
    The authorization server relies on the resource server to handle the provided data
    appropriately.</t>
      <t>In the context of this specification, the token introspection endpoint is used to convey
    such security data and potentially also privacy-sensitive data related to an access
    token.</t>
      <t>In order to process the introspection requests in a secure and
    privacy-preserving manner, the authorization server <bcp14>MUST</bcp14> be able to identify, 
    authenticate, and authorize resource servers.</t>
      <t>The AS <bcp14>MAY</bcp14> additionally encrypt the token introspection response JWTs.
    If encryption is used, the AS is provisioned with encryption keys and
    algorithms for the RS.</t>
      <t>The AS <bcp14>MUST</bcp14> be able to determine whether an RS is the
    audience for a particular access token and what data it is entitled to receive;
    otherwise, the RS is not authorized to obtain data for the access token.
    The AS has the discretion of how to fulfill this requirement. The AS could, for example,
    maintain a mapping between scope values and RSs.</t>
      <t>The requirements given above imply that the AS
    maintains credentials and other configuration data for each RS.</t>
      <t>One way is by utilizing dynamic client registration <xref target="RFC7591" format="default"/>
    and treating every RS as an OAuth client. In this case, the AS
    is assumed to at least maintain a "client_id" and a "token_endpoint_auth_method"
    with complementary authentication method metadata, such as "jwks" or "client_secret".
    In cases where the AS needs to acquire consent to transmit data to an RS, the following
    client metadata fields are recommended: "client_name", "client_uri", "contacts",
    "tos_uri", and "policy_uri".</t>
      <t>The AS <bcp14>MUST</bcp14> restrict the use of client credentials by an RS to the calls
    it requires, e.g., the AS <bcp14>MAY</bcp14> restrict such a client to call
    the token introspection endpoint only. How the AS implements this restriction
    is beyond the scope of this specification.</t>
      <t>This specification further introduces client metadata to manage the
    configuration options required to sign and encrypt token introspection 
    response JWTs.</t>
    </section>
    <section anchor="jwt_request" numbered="true" toc="default">
      <name>Requesting a JWT Response</name>
      <t>An RS requests a JWT introspection response by sending an introspection request
    with an <tt>Accept</tt> HTTP header field set to
      "application/token-introspection+jwt".</t>
      <t>The AS <bcp14>MUST</bcp14> authenticate the caller at the token introspection endpoint. Authentication can
    utilize client authentication methods or a separate access token that is issued to the RS
    and identifies the RS as the subject.</t>
      <t>The following is a non-normative example request, with the RS authenticating with a private key JWT:</t>
    <sourcecode name="" type="http-message"><![CDATA[
POST /introspect HTTP/1.1
Host: as.example.com
Accept: application/token-introspection+jwt
Content-Type: application/x-www-form-urlencoded

token=2YotnFZFEjr1zCsicMWpAA&
client_assertion_type=
 urn%3Aietf%3Aparams%3Aoauth%3Aclient-assertion-type%3Ajwt-bearer&
 client_assertion=PHNhbWxwOl[...omitted for brevity...]ZT
]]></sourcecode>
    </section>
    <section anchor="jwt_response" numbered="true" toc="default">
      <name>JWT Response</name>
      <t>The introspection endpoint responds with a JWT, setting the
     <tt>Content-Type</tt> HTTP header field to
     "application/token-introspection+jwt" and the JWT <tt>typ</tt>
     ("type") header parameter to "token-introspection+jwt".</t>
      <t>The JWT <bcp14>MUST</bcp14> include the following top-level claims:
      </t>
      <dl newline="true" spacing="normal">
        <dt>iss</dt>
        <dd><bcp14>MUST</bcp14> be set to the issuer URL of the authorization
         server.</dd>
        <dt>aud</dt>
        <dd><bcp14>MUST</bcp14> identify the resource server receiving the token
         introspection response.</dd>
        <dt>iat</dt>
        <dd><bcp14>MUST</bcp14> be set to the time when the introspection response
         was created by the authorization server</dd>
        <dt>token_introspection</dt>
        <dd>
         <t>A JSON object containing the members of the token introspection response, as specified
	 in <xref target="RFC7662" section="2.2" sectionFormat="comma" format="default"/>.
         The separation of the introspection response members into
         a dedicated JSON object containing a JWT claim is intended to prevent conflict and confusion
         with top-level JWT claims that may bear the same name.
          </t>
          <t>
         If the access token is invalid, expired, revoked, or not intended for the
         calling resource server (audience), the authorization server <bcp14>MUST</bcp14> set the value of the
         <tt>active</tt> member in the <tt>token_introspection</tt>
         claim to <tt>false</tt> and <bcp14>MUST NOT</bcp14> include other members.
         Otherwise, the <tt>active</tt> member is set to <tt>true</tt>.
          </t>
          <t>
         The AS <bcp14>SHOULD</bcp14> narrow down the <tt>scope</tt> value to the scopes
         relevant to the particular RS.
          </t>
          <t>
         As specified in <xref target="RFC7662" section="2.2" sectionFormat="of" format="default"/>, implementations <bcp14>MAY</bcp14> extend the
         token introspection response with service-specific claims. In the context of this
         specification, such claims will be added as top-level members of the
         <tt>token_introspection</tt> claim.
          </t>
          <t>
         Token introspection response parameter names intended to be used across domains <bcp14>MUST</bcp14> be
         registered in the <xref target="IANA.OAuth.Token.Introspection" format="default">"OAuth Token Introspection
         Response" registry</xref> defined by <xref target="RFC7662" format="default"/>.
          </t>
          <t>
         When the AS acts as a provider of resource owner
         identity claims to the RS, the AS determines, based on its RS-specific policy, what
         identity claims to return in the token introspection response.
         The AS <bcp14>MUST</bcp14> ensure the release of any privacy-sensitive data is legally based (see
         <xref target="privacy" format="default"/>).
          </t>
          <t>
         Further content of the introspection response is determined by the RS-specific
         policy at the AS.</t>
        </dd>
      </dl>
      <t>The JWT <bcp14>MAY</bcp14> include other claims, including those from the
      "JSON Web Token Claims" registry established by <xref target="RFC7519"
      format="default"/>. The JWT <bcp14>SHOULD NOT</bcp14> include the
      <tt>sub</tt> and <tt>exp</tt> claims, as an additional measure to prevent misuse of the JWT as an access token (see
      <xref target="Cross-JWT_Confusion" format="default"/>).</t>
      <t>Note: Although the JWT format is widely used as an access token format, the JWT
     returned in the introspection response is not an alternative representation of 
     the introspected access token and is not intended to be used as an access token.</t>
      <t>This specification registers the "application/token-introspection+jwt" media type, 
     which is used as the value of the <tt>typ</tt> ("type") header
     parameter of the JWT to indicate that the payload is a token introspection response.</t>
      <t>The JWT is cryptographically secured as specified in <xref target="RFC7519" format="default"/>.</t>
      <t>Depending on the specific resource server policy, the JWT is either
     signed or signed and encrypted. If the JWT is signed and encrypted, it
     <bcp14>MUST</bcp14> be a Nested JWT, as defined in <xref target="RFC7519" format="default">JWT</xref>.</t>
      <t>Note: An AS compliant with this specification <bcp14>MUST</bcp14> refuse to serve introspection
     requests that don't authenticate the caller and return an HTTP status code 400. This is
     done to ensure token data is released to legitimate recipients only and prevent
     downgrading to <xref target="RFC7662" format="default"/> behavior (see
     <xref target="token_data_leakage" format="default"/>).</t>
      <t>The following is a non-normative example response
     (with line breaks for display purposes only):</t>
     <sourcecode name="" type="http-message"><![CDATA[
HTTP/1.1 200 OK
Content-Type: application/token-introspection+jwt

eyJraWQiOiJ3RzZEIiwidHlwIjoidG9rZW4taW50cm9zcGVjdGlvbitqd3QiLCJhbGc
iOiJSUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FzLmV4YW1wbGUuY29tLyIsImF1ZCI6I
mh0dHBzOi8vcnMuZXhhbXBsZS5jb20vcmVzb3VyY2UiLCJpYXQiOjE1MTQ3OTc4OTIs
InRva2VuX2ludHJvc3BlY3Rpb24iOnsiYWN0aXZlIjp0cnVlLCJpc3MiOiJodHRwczo
vL2FzLmV4YW1wbGUuY29tLyIsImF1ZCI6Imh0dHBzOi8vcnMuZXhhbXBsZS5jb20vcm
Vzb3VyY2UiLCJpYXQiOjE1MTQ3OTc4MjIsImV4cCI6MTUxNDc5Nzk0MiwiY2xpZW50X
2lkIjoicGFpQjJnb28wYSIsInNjb3BlIjoicmVhZCB3cml0ZSBkb2xwaGluIiwic3Vi
IjoiWjVPM3VwUEM4OFFyQWp4MDBkaXMiLCJiaXJ0aGRhdGUiOiIxOTgyLTAyLTAxIiw
iZ2l2ZW5fbmFtZSI6IkpvaG4iLCJmYW1pbHlfbmFtZSI6IkRvZSIsImp0aSI6InQxRm
9DQ2FaZDRYdjRPUkpVV1ZVZVRaZnNLaFczMENRQ3JXRERqd1h5NncifX0.przJMU5Gh
mNzvwtt1Sr-xa9xTkpiAg5IshbQsRiRVP_7eGR1GHYrNwQh84kxOkHCyje2g5WSRcYo
sGEVIiC-eoPJJ-qBwqwSlgx9JEeCDw2W5DjrblOI_N0Jvsq_dUeOyoWVMqlOydOBhKN
Y0smBrI4NZvEExucOm9WUJXMuJtvq1gBes-0go5j4TEv9sOP9uu81gqWTr_LOo6pgT0
tFFyZfWC4kbXPXiQ2YT6mxCiQRRNM-l9cBdF6Jx6IOrsfFhBuYdYQ_mlL19HgDDOFal
eyqmru6lKlASOsaE8dmLSeKcX91FbG79FKN8un24iwIDCbKT9xlUFl54xWVShNDFA
]]></sourcecode>
      <t>
        The example response JWT header contains the following JSON document:
      </t>
<sourcecode name="" type="json"><![CDATA[
{
  "typ": "token-introspection+jwt",
  "alg": "RS256",
  "kid": "wG6D"
}
]]></sourcecode>
      <t>
        The example response JWT payload contains the following JSON document:
      </t>
<sourcecode name="" type="json"><![CDATA[
{
  "iss":"https://as.example.com/",
  "aud":"https://rs.example.com/resource",
  "iat":1514797892,
  "token_introspection":
     {
        "active":true,
        "iss":"https://as.example.com/",
        "aud":"https://rs.example.com/resource",
        "iat":1514797822,
        "exp":1514797942,
        "client_id":"paiB2goo0a",
        "scope":"read write dolphin",
        "sub":"Z5O3upPC88QrAjx00dis",
        "birthdate":"1982-02-01",
        "given_name":"John",
        "family_name":"Doe",
        "jti":"t1FoCCaZd4Xv4ORJUWVUeTZfsKhW30CQCrWDDjwXy6w"
     }
}
]]></sourcecode>
    </section>
    <section anchor="client_metadata" numbered="true" toc="default">
      <name>Client Metadata</name>
      <t>The authorization server determines the algorithm to
      secure the JWT for a particular introspection response. This decision can
      be based on registered metadata parameters for the resource server,
      supplied via dynamic client registration <xref target="RFC7591"
      format="default"/> with the 
      resource server acting as a client, as specified below.</t>
      <t>The parameter names follow the pattern established by
      <xref target="OpenID.Registration" format="default">OpenID Connect
      Dynamic Client Registration</xref> for configuring signing and encryption
      algorithms for JWT responses at the UserInfo endpoint.</t>
      <t>The following client metadata parameters are introduced by this
      specification:
      </t>
      <dl newline="true" spacing="normal">
        <dt>introspection_signed_response_alg</dt>
        <dd><bcp14>OPTIONAL</bcp14>. 
      	  <xref target="RFC7515" format="default">"JSON Web Signature (JWS)"</xref> 
      	  algorithm (<tt>alg</tt> value), as defined in 
      	  <xref target="RFC7518" format="default">"JSON Web Algorithms (JWA)"</xref>, for signing
	  introspection responses. If
      	  this is specified, the response will be signed using JWS and the 
      	  configured algorithm. The default, if omitted, is <tt>RS256</tt>.</dd>
        <dt>introspection_encrypted_response_alg</dt>
        <dd><bcp14>OPTIONAL</bcp14>. 
        <xref target="RFC7516" format="default">"JSON Web Encryption
	(JWE)"</xref> algorithm (<tt>alg</tt> value),
        as defined in <xref target="RFC7518" format="default">JWA</xref>, for
	content key encryption.
          If this is specified, the response will be encrypted using JWE and the 
          configured content encryption algorithm 
          (<tt>introspection_encrypted_response_enc</tt>). The default, 
          if omitted, is that no encryption is performed.
          If both signing and 
          encryption are requested, the response will be 
          signed then encrypted, with the result being a Nested JWT, as defined in 
          <xref target="RFC7519" format="default">JWT</xref>.</dd>
        <dt>introspection_encrypted_response_enc</dt>
        <dd><bcp14>OPTIONAL</bcp14>.
        <xref target="RFC7516" format="default">JWE</xref> algorithm
	(<tt>enc</tt> value),
        as defined in <xref target="RFC7518" format="default">JWA</xref>, for
	content encryption of 
        introspection responses. The default, if omitted, is <tt>A128CBC-HS256</tt>.
          Note: This parameter <bcp14>MUST NOT</bcp14> be specified without setting 
          <tt>introspection_encrypted_response_alg</tt>.</dd>
      </dl>
      <t>Resource servers may register their public encryption keys 
      using the <tt>jwks_uri</tt> or <tt>jwks</tt> 
      metadata parameters.</t>
    </section>
    <section anchor="server_metadata" numbered="true" toc="default">
      <name>Authorization Server Metadata</name>
      <t>Authorization servers <bcp14>SHOULD</bcp14> publish the supported algorithms for
      signing and encrypting the JWT of an introspection response by utilizing
      <xref target="RFC8414" format="default">"OAuth 2.0 Authorization Server Metadata"</xref>
      parameters. Resource servers use this data to parametrize their client
      registration requests.</t>
      <t>The following parameters are introduced by this specification: 
      </t>
      <dl newline="true" spacing="normal">
        <dt>introspection_signing_alg_values_supported</dt>
        <dd>
		<bcp14>OPTIONAL</bcp14>. JSON array containing a list of the <xref target="RFC7515" format="default">JWS</xref> signing 
		algorithms (<tt>alg</tt> values), as defined in 
		<xref target="RFC7518" format="default">JWA</xref>, supported by the introspection
		endpoint to sign the response.</dd>
        <dt>introspection_encryption_alg_values_supported</dt>
        <dd>
		<bcp14>OPTIONAL</bcp14>. JSON array containing a list of the <xref target="RFC7516" format="default">JWE</xref> 
		encryption algorithms (<tt>alg</tt> values), as defined in
		<xref target="RFC7518" format="default">JWA</xref>, supported by the 
		introspection endpoint to encrypt the content encryption key for 
		introspection responses (content key encryption).</dd>
        <dt>introspection_encryption_enc_values_supported</dt>
        <dd>
		<bcp14>OPTIONAL</bcp14>. JSON array containing a list of the <xref target="RFC7516" format="default">JWE</xref> 
		encryption algorithms (<tt>enc</tt> values), as defined in
		<xref target="RFC7518" format="default">JWA</xref>, supported by the introspection
		endpoint to encrypt the response (content encryption).</dd>
      </dl>
    </section>
    <section anchor="Security" numbered="true" toc="default">
      <name>Security Considerations</name>
      <section anchor="Cross-JWT_Confusion" numbered="true" toc="default">
        <name>Cross-JWT Confusion</name>
        <t>The <tt>iss</tt> and potentially the <tt>aud</tt>
      claim of a token introspection JWT can resemble those of a JWT-encoded access token.
      An attacker could try to exploit this and pass a JWT token introspection response as
      an access token to the resource server. The <tt>typ</tt> ("type")
      JWT header "token-introspection+jwt" and the encapsulation of the token introspection members,
      such as <tt>sub</tt> and <tt>scope</tt> in
      the <tt>token_introspection</tt> claim, are intended to prevent such
      substitution attacks. Resource servers <bcp14>MUST</bcp14> therefore check the <tt>typ</tt>
      JWT header value of received JWT-encoded access tokens and ensure all minimally
	required claims for a valid access token are present.</t>
        <t>Resource servers <bcp14>MUST</bcp14> additionally apply the countermeasures against access token replay, 
      as described in <xref target="RFC9700" format="default"/>.</t>
        <t>JWT confusion and other attacks involving JWTs are discussed in
      <xref target="RFC8725" format="default"/>.</t>
      </section>
      <section anchor="token_data_leakage" numbered="true" toc="default">
        <name>Token Data Leakage</name>
        <t>The authorization server <bcp14>MUST</bcp14> use Transport Layer Security (TLS) 1.2
      (or higher), per BCP 195 <xref target="RFC9325" format="default"/>, in order to prevent 
      token data leakage.</t>
        <t><xref target="RFC7662" section="2.1" sectionFormat="of" format="default"/> permits requests to the introspection endpoint to
      be authorized with an access token that doesn't identify the caller. To prevent
      introspection of tokens by parties that are not the intended consumer, the
      authorization server <bcp14>MUST</bcp14> require all requests to the token introspection endpoint to be
      authenticated.</t>
      </section>
    </section>
    <section anchor="privacy" numbered="true" toc="default">
      <name>Privacy Considerations</name>
      <t>The token introspection response can be used to transfer personal identifiable 
     information (PII) from the AS to the RS. The AS <bcp14>MUST</bcp14> conform to legal and jurisdictional constraints
     for the data transfer before any data is released to a particular RS. The details and determining
     of these constraints vary by jurisdiction and are outside the scope of this document.</t>
      <t>A commonly found way to establish the legal basis for releasing PII is by explicit user
     consent gathered from the resource owner by the AS during the authorization flow.</t>
     <t>It is also possible that the legal basis is established out of band, for
     example, in an explicit contract or by the client gathering the resource owner's
     consent.</t>
     <t>If the AS and the RS belong to the same legal entity (1st party scenario),
     there is potentially no need for an explicit user consent, but the terms of
     service and policy of the respective service provider <bcp14>MUST</bcp14> be
     enforced at all times.</t>
     <t>In any case, the AS <bcp14>MUST</bcp14> ensure that the scope of the legal
     basis is enforced throughout the whole process. The AS <bcp14>MUST</bcp14>
     retain the scope of the legal basis with the access token, e.g., in the scope
     value, it <bcp14>MUST</bcp14> authenticate the RS, and the AS <bcp14>MUST</bcp14>
     determine the data an RS is allowed to receive based on the RS's identity and suitable token data,
     e.g., the scope value. </t>
     <t>Implementers should be aware that a token introspection request lets the AS
     know when the client (and potentially the user) is accessing the RS, which is
     also an indication of when the user is using 
     the client. If this implication is not acceptable, implementers
     <bcp14>MUST</bcp14> use other means to relay
     access token data, for example, by directly transferring the data needed by the
     RS within the access token.</t>
    </section>

    <section anchor="IANA" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <section anchor="DynRegReg" numbered="true" toc="default">
        <name>OAuth Dynamic Client Registration Metadata Registration</name>
        <t>
          The following client metadata definitions have been registered
          in the IANA "OAuth Dynamic Client Registration Metadata" registry
          <xref target="IANA.OAuth.Parameters" format="default"/>
          established by <xref target="RFC7591" format="default"/>:
        </t>
<section anchor="DynRegContents" numbered="true" toc="default">
          <name>Registry Contents</name>
          <dl newline="false" spacing="compact">
            <dt>Client Metadata Name:</dt>
	    <dd><tt>introspection_signed_response_alg</tt></dd>
            <dt>Client Metadata Description:</dt>
            <dd>String value indicating the client's desired introspection response 
            signing algorithm</dd>
	    <dt>Change Controller:</dt>
	    <dd>IETF</dd>
            <dt>Reference:</dt>
	    <dd><xref target="client_metadata" format="default"/> of RFC 9701</dd>
          </dl>
          <dl newline="false" spacing="compact">
            <dt>Client Metadata Name:</dt>
	    <dd><tt>introspection_encrypted_response_alg</tt></dd>
            <dt>Client Metadata Description:</dt>
            <dd>String value specifying the desired introspection response 
            content key encryption algorithm (alg value)</dd>
            <dt>Change Controller:</dt>
	    <dd>IETF</dd>
            <dt>Reference:</dt>
	    <dd><xref target="client_metadata" format="default"/> of RFC 9701</dd>
          </dl>
          <dl newline="false" spacing="compact">
            <dt>Client Metadata Name:</dt>
	    <dd><tt>introspection_encrypted_response_enc</tt></dd>
            <dt>Client Metadata Description:</dt>
            <dd>String value specifying the desired introspection response 
            content encryption algorithm (enc value)</dd>
            <dt>Change Controller:</dt>
	    <dd>IETF</dd>
            <dt>Reference:</dt>
	    <dd><xref target="client_metadata" format="default"/> of RFC 9701</dd>
          </dl>
        </section>
      </section>
      <section anchor="ietf-oauth-discoveryIANA" numbered="true" toc="default">
        <name>OAuth Authorization Server Metadata Registration</name>
        <t>
        The following values have been registered in
        the IANA "OAuth Authorization Server Metadata" registry
        <xref target="IANA.OAuth.Parameters" format="default"/> established by <xref target="RFC8414" format="default"/>.
        </t>
        <section numbered="true" toc="default">
          <name>Registry Contents</name>
          <dl newline="false" spacing="compact">
            <dt>Metadata Name:</dt>
	    <dd><tt>introspection_signing_alg_values_supported</tt></dd>
            <dt>Metadata Description:</dt>
	    <dd>JSON array containing a list of algorithms supported 
            by the authorization server for introspection response signing</dd>
            <dt>Change Controller:</dt>
	    <dd>IETF</dd>
            <dt>Reference:</dt>
	    <dd><xref target="server_metadata" format="default"/> of RFC 9701</dd>
          </dl>
          <dl newline="false" spacing="compact">
            <dt>Metadata Name:</dt>
	    <dd><tt>introspection_encryption_alg_values_supported</tt></dd>
            <dt>Metadata Description:</dt>
	    <dd>JSON array containing a list of algorithms supported 
            by the authorization server for introspection response content key
	    encryption (alg value)</dd>
            <dt>Change Controller:</dt>
	    <dd>IETF</dd>
            <dt>Reference:</dt>
	    <dd><xref target="server_metadata" format="default"/> of RFC 9701</dd>
          </dl>
          <dl newline="false" spacing="compact">
            <dt>Metadata Name:</dt>
	    <dd><tt>introspection_encryption_enc_values_supported</tt></dd>
            <dt>Metadata Description:</dt>
	    <dd>JSON array containing a list of algorithms supported 
            by the authorization server for introspection response content
	    encryption (enc value)</dd>
            <dt>Change Controller:</dt>
	    <dd>IETF</dd>
            <dt>Reference:</dt>
	    <dd><xref target="server_metadata" format="default"/> of RFC 9701</dd>
          </dl>
        </section>
      </section>
      <section anchor="ietf-media-typeIANA" numbered="true" toc="default">
        <name>Media Type Registration</name>
        <t>The "application/token-introspection+jwt" media type has been registered
	in the "Media Types" registry <xref target="IANA.MediaTypes"
	format="default"/> in the manner described in <xref target="RFC6838"
	format="default"/>. It can be used to indicate that the
	content is a token introspection response in JWT format.</t>
        <section numbered="true" toc="default">
          <name>Registry Contents</name>
          <dl newline="false" spacing="normal">
            <dt>Type name:</dt>
	    <dd>application</dd>
            <dt>Subtype name:</dt>
	    <dd>token-introspection+jwt</dd>
            <dt>Required parameters:</dt>
	    <dd>N/A</dd>
            <dt>Optional parameters:</dt>
	    <dd>N/A</dd>
            <dt>Encoding considerations:</dt>
	    <dd>binary. A token introspection response is a JWT; JWT values are
            encoded as a series of base64url-encoded values (with trailing '='
            characters removed), some of which may be the empty string,
            separated by period ('.') characters.</dd>
            <dt>Security considerations:</dt>
	    <dd>See <xref target="Security" format="default"/> of
	    RFC 9701</dd>
            <dt>Interoperability considerations:</dt>
	    <dd>N/A</dd>
            <dt>Published specification:</dt>
	    <dd><xref target="jwt_request" format="default"/> of RFC 9701</dd>
            <dt>Applications that use this media type:</dt>
	    <dd>Applications that produce and consume 
            OAuth Token Introspection Responses in JWT format</dd>
            <dt>Fragment identifier considerations:</dt>
	    <dd>N/A</dd>
	  </dl>
	  <dl newline="true" spacing="normal">
            <dt >Additional information:</dt>
	    <dd>
              <dl newline="false" spacing="compact">
                <dt>Magic number(s):</dt>
		<dd>N/A</dd>
                <dt>File extension(s):</dt>
		<dd>N/A</dd>
                <dt>Macintosh file type code(s):</dt>
		<dd>N/A</dd>
              </dl>
            </dd>
	  </dl>
	  <dl newline="false" spacing="normal">
            <dt>Person &amp; email address to contact for further information:</dt>
	    <dd><br/>Torsten Lodderstedt (torsten@lodderstedt.net)</dd>
            <dt>Intended usage:</dt>
	    <dd>COMMON</dd>
            <dt>Restrictions on usage:</dt>
	    <dd>none</dd>
            <dt>Author:</dt>
	    <dd>Torsten Lodderstedt (torsten@lodderstedt.net)</dd>
            <dt>Change controller:</dt>
	    <dd>IETF</dd>
          </dl>
        </section>
      </section>
      <section anchor="ietf-jwt-IANA" numbered="true" toc="default">
        <name>JWT Claim Registration</name>
        <t>The "token_introspection" claim has been registered in the "JSON Web
      Token (JWT)" registry <xref target="IANA.JWT" format="default"/> in the manner described in
      <xref target="RFC7519" format="default"/>.</t>
        <section numbered="true" toc="default">
          <name>Registry Contents</name>
          <dl newline="false" spacing="compact">
            <dt>Claim Name:</dt>
	    <dd>token_introspection</dd>
            <dt>Claim Description:</dt>
	    <dd>Token introspection response</dd>
            <dt>Change Controller:</dt>
	    <dd>IETF</dd>
            <dt>Reference:</dt>
	    <dd><xref target="jwt_response" format="default"/> of RFC 9701</dd>
          </dl>
        </section>
      </section>
    </section>
  </middle>

  <back>

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6838.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7519.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9325.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7591.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7662.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7518.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7515.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7516.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8414.xml"/>

        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8725.xml"/>

<reference anchor="RFC9700" target="https://www.rfc-editor.org/info/rfc9700">
<front>
<title>Best Current Practice for OAuth 2.0 Security</title>
<author initials='T' surname='Lodderstedt' fullname='Torsten Lodderstedt'>
  <organization>SPRIND</organization>
</author>
<author initials='J' surname='Bradley' fullname='John Bradley'>
  <organization>Yubico</organization>
</author>
<author initials='A' surname='Labunets' fullname='Andrey Labunets'>
  <organization>Independent Researcher</organization>
</author>
<author initials='D' surname='Fett' fullname='Daniel Fett'>
  <organization>Authlete</organization>
</author>
<date month='January' year='2025'/>
</front>
<seriesInfo name="BCP" value="240"/>
<seriesInfo name="RFC" value="9700"/>
<seriesInfo name="DOI" value="10.17487/RFC9700"/>
</reference>

<reference anchor="OpenID.Registration" target="https://openid.net/specs/openid-connect-registration-1_0.html">
                <front>
            <title>OpenID Connect Dynamic Client Registration 1.0 incorporating errata set 1</title>
            <author fullname="Nat Sakimura">
              <organization>NRI</organization>
            </author>
            <author fullname="John Bradley">
              <organization>Ping Identity</organization>
            </author>
            <author fullname="Mike Jones">
              <organization>Microsoft</organization>
            </author>
            <date month="November" year="2014"/>
          </front>
        </reference>

        <reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
          <front>
            <title>Media Types</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>

        <reference anchor="IANA.JWT" target="https://www.iana.org/assignments/jwt">
          <front>
            <title>JSON Web Token (JWT) Claims</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>

        <reference anchor="IANA.OAuth.Token.Introspection" target="https://www.iana.org/assignments/oauth-parameters">
          <front>
            <title>OAuth Token Introspection Response</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
      </references>
      <references>
        <name>Informative References</name>

<reference anchor="IANA.OAuth.Parameters" target="http://www.iana.org/assignments/oauth-parameters">
          <front>
            <title>OAuth Parameters</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
      </references>
    </references>
        <section anchor="Acknowledgements" numbered="false" toc="default">
      <name>Acknowledgements</name>
      <t>We would like to thank <contact fullname="Petteri Stenius"/>, <contact
      fullname="Neil Madden"/>, <contact fullname="Filip Skokan"/>, <contact
      fullname="Tony Nadalin"/>, <contact fullname="Remco Schaar"/>, <contact
      fullname="Justin Richer"/>, <contact fullname="Takahiko Kawasaki"/>, <contact
      fullname="Benjamin Kaduk"/>, <contact fullname=" Robert Wilton"/>, and
      <contact fullname="Roman Danyliw"/> for their valuable feedback.</t>
    </section>
</back> </rfc>
