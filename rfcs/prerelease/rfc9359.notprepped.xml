<?xml version="1.0" encoding="UTF-8"?>



<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" submissionType="IETF" category="std" consensus="true" ipr="trust200902" docName="draft-ietf-ippm-ioam-conf-state-10" number="9359" tocInclude="true" symRefs="true" sortRefs="true" updates="" obsoletes="" xml:lang="en" version="3">
  
  <!-- xml2rfc v2v3 conversion 3.15.2 -->
  <front>



    <title abbrev="Ping-Enabled IOAM Capabilities"> Echo Request/Reply for Enabled In Situ OAM (IOAM) Capabilities </title>
    <seriesInfo name="RFC" value="9359"/>
    <author fullname="Xiao Min" initials="X" surname="Min">
      <organization>ZTE Corp.</organization>
      <address>
        <postal>
          <street/>
         <city>Nanjing</city>
          <region/>
          <code/>
          <country>China</country>
        </postal>
        <phone>+86 25 88013062</phone>
        <email>xiao.min2@zte.com.cn</email>
     
     </address>
    </author>
    <author fullname="Greg Mirsky" initials="G" surname="Mirsky">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street/>
      

         <city/>
          <region/>
          <code/>
          <country>United States of America</country>
        </postal>
        <phone/>
        <email>gregimirsky@gmail.com</email>
     
     </address>
    </author>
    <author fullname="Lei Bo" initials="L" surname="Bo">
      <organization>China Telecom</organization>
      <address>
        <postal>
          <street/>
       

         <city>Beijing</city>
          <region/>
          <code/>
          <country>China</country>
        </postal>
        <phone>+86 10 50902903</phone>
        <email>leibo@chinatelecom.cn</email>
     
     </address>
    </author>
    <date year="2023" month="April" />
    <area>tsv</area>
    <workgroup>ippm</workgroup>



    <abstract>
      <t> This document describes a generic format for use in echo
      request/reply mechanisms, which can be used within an IOAM-Domain, allowing the
      IOAM encapsulating node to discover the enabled IOAM capabilities of
      each IOAM transit and IOAM decapsulating node.  The generic format is
      intended to be used with a variety of data planes such as IPv6, MPLS,
      Service Function Chain (SFC), and Bit Index Explicit Replication
      (BIER).</t>
    </abstract>
  </front>
  <middle>
    <section>
      <name>Introduction</name>
      <t> In situ Operations, Administration, and Maintenance (IOAM) (<xref target="RFC9197"/> <xref target="RFC9326"/>) defines data fields that 
  record OAM information within the packet while the packet traverses a particular network domain, called an "IOAM-Domain". IOAM can complement 
  or replace other OAM mechanisms, such as ICMP or other types of probe packets.</t>
      <t> As specified in <xref target="RFC9197"/>, within the IOAM-Domain, the IOAM data may be updated by network nodes that
  the packet traverses.  The device that adds an IOAM header to the packet is called an "IOAM encapsulating node". In contrast, the device 
  that removes an IOAM header is referred to as an "IOAM decapsulating node".  Nodes within the domain that are aware of IOAM data and 
  that read, write, and/or process IOAM data are called "IOAM transit nodes". IOAM encapsulating or decapsulating nodes can also serve as IOAM 
  transit nodes at the same time. IOAM encapsulating or decapsulating nodes are also referred to as IOAM-Domain "edge devices", which can be 
  hosts or network devices. <xref target="RFC9197"/> defines four IOAM option types, and <xref target="RFC9326"/> introduces a new IOAM option 
  type called the "Direct Export (DEX) Option-Type", which is different from the other four IOAM option types defined in <xref target="RFC9197"/> 
  regarding how to collect the operational and telemetry information defined in <xref target="RFC9197"/>.</t>
      <t> As specified in <xref target="RFC9197"/>, IOAM is focused on "limited domains" as defined in <xref target="RFC8799"/>. 
  In a limited domain, a control entity that has control over every IOAM device may be deployed. If that's the case, the control entity can 
  provision both the explicit transport path and the IOAM header applied to the data packet at every IOAM encapsulating node.</t>



      <t> In a case when a control entity that has control over every IOAM
      device is not deployed in the IOAM-Domain, the IOAM encapsulating node
      needs to discover the enabled IOAM capabilities at the IOAM transit and
      decapsulating nodes: for example, what types of IOAM tracing data can be
      added or exported by the transit nodes along the transport path of the
      data packet IOAM is applied to. The IOAM encapsulating node can then add
      the correct IOAM header to the data packet according to the discovered
      IOAM capabilities. Specifically, the IOAM encapsulating node first
      identifies the types and lengths of IOAM options included in the IOAM
      data fields according to the discovered IOAM capabilities. Then the IOAM
      encapsulating node can add the IOAM header to the data packet based on
      the identified types and lengths of IOAM options included in the IOAM
      data fields. The IOAM encapsulating node may use NETCONF/YANG or IGP to
      discover these IOAM capabilities. However, NETCONF/YANG or IGP has some
      limitations:
  
      </t>
      <ul spacing="normal">


        <li>When NETCONF/YANG is used in this scenario, each IOAM
        encapsulating node (including the host when it takes the role of an
        IOAM encapsulating node) needs to implement a NETCONF Client, and each
        IOAM transit and IOAM decapsulating node (including the host when it
        takes the role of an IOAM decapsulating node) needs to implement a
        NETCONF Server, so complexity can be an issue. Furthermore, each IOAM
        encapsulating node needs to establish a NETCONF Connection with each
        IOAM transit and IOAM decapsulating node, so scalability can be an
        issue.
    </li>
        <li>When IGP is used in this scenario, the IGP and IOAM-Domains don't
        always have the same coverage. For example, when the IOAM
        encapsulating node or the IOAM decapsulating node is a host, the
        availability can be an issue. Furthermore, it might be too challenging
        to reflect enabled IOAM capabilities at the IOAM transit and IOAM
        decapsulating node if these are controlled by a local policy depending
        on the identity of the IOAM encapsulating node.
    </li>
      </ul>
      <t> This document specifies formats and objects that can be used in the extension of echo request/reply mechanisms used in IPv6 (including Segment 
  Routing over IPv6 (SRv6) data plane), MPLS (including Segment Routing over MPLS (SR-MPLS) data plane),  Service Function Chain (SFC), and Bit Index Explicit Replication (BIER) environments, which can be 
  used within the IOAM-Domain, allowing the IOAM encapsulating node to discover the enabled IOAM capabilities of each IOAM transit and IOAM 
  decapsulating node.</t>
      <t> The following documents contain references to the echo request/reply mechanisms used in IPv6 (including SRv6), MPLS (including SR-MPLS), SFC, 
  and BIER environments:
      </t>
      <ul spacing="normal">
        <li> "<xref target="RFC4443" format="title"/>"
          <xref target="RFC4443"/></li>
	<li>"<xref target="RFC4620" format="title"/>" <xref target="RFC4620"/></li>
	<li>"<xref target="RFC4884" format="title"/>" <xref target="RFC4884"/></li> 
	<li>"<xref target="RFC8335" format="title"/>" <xref target="RFC8335"/></li>
        <li>"<xref target="RFC8029" format="title"/>"
          <xref target="RFC8029"/></li>
        <li>"<xref target="I-D.ietf-sfc-multi-layer-oam" format="title"/>"
          <xref target="I-D.ietf-sfc-multi-layer-oam"/></li>
        <li>"<xref target="I-D.ietf-bier-ping" format="title"/>"
          <xref target="I-D.ietf-bier-ping"/></li>
      </ul>
      <t> It is expected that the specification of the instantiation of each of these extensions will be done in the form of an RFC jointly designed by 
  the working group that develops or maintains the echo request/reply protocol and the IETF IP Performance Measurement (IPPM) Working Group.</t>
      <t>In this document, note that the echo request/reply mechanism used in IPv6 does not mean ICMPv6 Echo Request/Reply <xref target="RFC4443"/> but 
  does mean IPv6 Node Information Query/Reply <xref target="RFC4620"/>.</t>
      <t>Fate sharing is a common requirement for all kinds of active OAM
      packets, including echo requests. In this document, that means an echo
      request is required to traverse the path of an IOAM data packet. This
      requirement can be achieved by, e.g., applying the same explicit path or
      ECMP processing to both echo request and IOAM data
      packets. Specifically, the same ECMP processing can be applied to both
      echo request and IOAM data packets, by populating the same value or values in any
      ECMP affecting fields of the packets.</t>
    </section>
    <section>
      <name>Conventions</name>
      <section>
        <name>Requirements Language</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
      </section>
      <section>
        <name>Abbreviations</name>
	<dl spacing="normal" newline="false">
	  <dt>BIER:</dt>
	  <dd>Bit Index Explicit Replication</dd>
	  <dt>BGP:</dt>
	  <dd>Border Gateway Protocol</dd>
	  <dt>DEX:</dt>
	  <dd>Direct Export</dd>
	  <dt>ECMP:</dt>
	  <dd>Equal-Cost Multipath</dd>
	  <dt>E2E:</dt>
	  <dd>Edge to Edge</dd>
	  <dt>ICMP:</dt>
	  <dd>Internet Control Message Protocol</dd>
	  <dt>IGP:</dt>
	  <dd>Interior Gateway Protocol</dd>
	  <dt>IOAM:</dt>
	  <dd>In situ Operations, Administration, and Maintenance</dd>
	  <dt>LSP:</dt>
	  <dd>Label Switched Path</dd>
	  <dt>MPLS:</dt>
	  <dd>Multiprotocol Label Switching</dd>
	  <dt>MTU:</dt>
	  <dd>Maximum Transmission Unit</dd>
	  <dt>NETCONF:</dt>
	  <dd>Network Configuration Protocol</dd>
	  <dt>NTP:</dt>
	  <dd>Network Time Protocol</dd>
	  <dt>OAM:</dt>
	  <dd>Operations, Administration, and Maintenance</dd>
	  <dt>PCEP:</dt>
	  <dd>Path Computation Element Communication Protocol</dd>
	  <dt>POSIX:</dt>
	  <dd>Portable Operating System Interface</dd>
	  <dt>POT:</dt>
	  <dd>Proof of Transit</dd>
	  <dt>PTP:</dt>
	  <dd>Precision Time Protocol</dd>
	  <dt>SoP:</dt>
	  <dd>Size of POT</dd>
	  <dt>SR-MPLS:</dt>
	  <dd>Segment Routing over MPLS</dd>
	  <dt>SRv6:</dt>
	  <dd>Segment Routing over IPv6</dd>
	  <dt>SFC:</dt>
	  <dd>Service Function Chain</dd>
	  <dt>TTL:</dt>
	  <dd>Time to Live (this is also the Hop Limit field in the IPv6
	  header)</dd>
	<dt>TSF:</dt>
	<dd>TimeStamp Format</dd></dl>
      </section>
    </section>
    <section>
      <name>IOAM Capabilities Formats</name>
      <section>
        <name>IOAM Capabilities Query Container</name>
        <t> For echo requests, the IOAM Capabilities Query uses a container that has the following format:</t>
        <figure anchor="Figure_1">
          <name>IOAM Capabilities Query Container of an Echo Request</name>
          <artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.                                                               .
.            IOAM Capabilities Query Container Header           .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.                                                               .
.                   List of IOAM Namespace-IDs                  .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
        </figure>
        <t> When this container is present in the echo request sent by an IOAM encapsulating node, the IOAM encapsulating node 
	 requests that the receiving node reply with its enabled IOAM capabilities. If there is no IOAM capability to be reported by the receiving 
	 node, then this container <bcp14>MUST</bcp14> be ignored by the receiving node. This means the receiving node <bcp14>MUST</bcp14> send an echo reply without IOAM 
	 capabilities or no echo reply, in the light of whether the echo request includes containers other than the IOAM Capabilities Query Container. 
	 A list of IOAM Namespace-IDs (one or more Namespace-IDs) <bcp14>MUST</bcp14> be included in this container in the echo request; if present, the Default-Namespace-ID 
	 0x0000 <bcp14>MUST</bcp14> be placed at the beginning of the list of IOAM Namespace-IDs. The IOAM encapsulating node requests only the enabled IOAM capabilities 
	 that match one of the Namespace-IDs. Inclusion of the Default-Namespace-ID 0x0000 elicits replies only for capabilities that are configured 
	 with the Default-Namespace-ID 0x0000. The Namespace-ID has the same definition as what's specified in <xref target="RFC9197" sectionFormat="of" section="4.3"/>.</t>


        <t> The IOAM Capabilities Query Container has a container header that is used to identify the type and, optionally, the length of the container payload. The container payload (List of IOAM Namespace-IDs) is zero-padded to align with a 4-octet boundary. Since the Default-Namespace-ID 0x0000 is 
	 mandated to appear first in the list, any other occurrences of 0x0000 <bcp14>MUST</bcp14> be disregarded.</t>
        <t> The length, structure, and definition of the IOAM Capabilities Query Container Header depend on the specific deployment environment.</t>
      </section>
      <section>
        <name>IOAM Capabilities Response Container</name>
        <t> For echo replies, the IOAM Capabilities Response uses a container that has the following format:</t>
        <figure anchor="Figure_2">
          <name>IOAM Capabilities Response Container for an Echo Reply</name>
          <artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.                                                               .
.          IOAM Capabilities Response Container Header          .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.                                                               .
.               List of IOAM Capabilities Objects               .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
        </figure>
        <t> When this container is present in the echo reply sent by an IOAM transit node or IOAM decapsulating node, the IOAM function 
	is enabled at this node, and this container contains the enabled IOAM capabilities of the sender.  A list of IOAM capabilities objects (one 
	 or more objects) that contains the enabled IOAM capabilities <bcp14>MUST</bcp14> be included in this container of the echo reply unless the sender encounters 
	 an error (e.g., no matched Namespace-ID).</t>
        <t> The IOAM Capabilities Response Container has a container header that is used to identify the type and, optionally, the length of the container payload. 
	 The container header <bcp14>MUST</bcp14> be defined such that it falls on a 4-octet boundary.</t>
        <t> The length, structure, and definition of the IOAM Capabilities Response Container Header depends on the specific deployment environment.</t>
        <t> Based on the IOAM data fields defined in <xref target="RFC9197"/> and <xref target="RFC9326"/>, six types of objects are defined in this document. 
	 The same type of object <bcp14>MAY</bcp14> be present in the IOAM Capabilities Response Container more than once, only if listed with a different Namespace-ID.</t>
        <t> Similar to the container, each object has an object header that is used to identify the type and length of the object payload. The object 
	 payload <bcp14>MUST</bcp14> be defined such that it falls on a 4-octet boundary.</t>
        <t> The length, structure, and definition of the object header depends on the specific deployment environment.</t>
        <section>
          <name>IOAM Pre-allocated Tracing Capabilities Object</name>
          <figure anchor="Figure_3">
            <name>IOAM Pre-allocated Tracing Capabilities Object</name>
            <artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.                                                               .
.     IOAM Pre-allocated Tracing Capabilities Object Header     .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|               IOAM-Trace-Type                 |  Reserved   |W|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Namespace-ID          |          Ingress_MTU          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Ingress_if_id (short or wide format)         ......          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
          </figure>
          <t> When the IOAM Pre-allocated Tracing Capabilities Object is present in the IOAM Capabilities Response Container, the sending node is an IOAM transit node, and the IOAM 
	 pre-allocated tracing function is enabled at this IOAM transit node.</t>
          <t>The IOAM-Trace-Type field has the same definition as what's specified in <xref target="RFC9197" sectionFormat="of" section="4.4"/>.</t>
          <t>The Reserved field <bcp14>MUST</bcp14> be zeroed on transmission and ignored on receipt.</t>
          <t>The W flag indicates whether Ingress_if_id is in short or wide format. The W-bit is set if the Ingress_if_id is in wide format. 
	 The W-bit is clear if the Ingress_if_id is in short format.</t>
          <t>The Namespace-ID field has the same definition as what's specified in <xref target="RFC9197" sectionFormat="of" section="4.3"/>. It <bcp14>MUST</bcp14>
	 be one of the Namespace-IDs listed in the IOAM Capabilities Query Object of the echo request.</t>
          <t>The Ingress_MTU field has 16 bits and specifies the MTU (in octets) of the ingress interface from which the sending node received the echo 
	 request.</t>
          <t>The Ingress_if_id field has 16 bits (in short format) or 32 bits (in
          wide format) and specifies the identifier of the ingress interface
          from which the sending node received the echo request. If the W-bit is
          cleared, the Ingress_if_id field has 16 bits; then the 16
          bits following the Ingress_if_id field are reserved for future use,
          <bcp14>MUST</bcp14> be set to zero, and <bcp14>MUST</bcp14> be
          ignored when non-zero.</t>
        </section>
        <section>
          <name>IOAM Incremental Tracing Capabilities Object</name>
          <figure anchor="Figure_4">
            <name>IOAM Incremental Tracing Capabilities Object</name>
            <artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.                                                               .
.      IOAM Incremental Tracing Capabilities Object Header      .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|               IOAM-Trace-Type                 |  Reserved   |W|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Namespace-ID          |          Ingress_MTU          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Ingress_if_id (short or wide format)         ......          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
          </figure>
          <t>When the IOAM Incremental Tracing Capabilities Object is present in the IOAM Capabilities Response
          Container, the sending node is an IOAM transit node, and
          the IOAM incremental tracing function is enabled at this IOAM
          transit node.</t>
          <t>The IOAM-Trace-Type field has the same definition as what's specified in <xref target="RFC9197" sectionFormat="of" section="4.4"/>.</t>
                    <t>The Reserved field <bcp14>MUST</bcp14> be zeroed on transmission and ignored on receipt.</t>
          <t>The W flag indicates whether Ingress_if_id is in short or wide format. The W-bit is set if the Ingress_if_id is in wide format. 
	 The W-bit is clear if the Ingress_if_id is in short format.</t>
          <t>The Namespace-ID field has the same definition as what's specified in <xref target="RFC9197" sectionFormat="of" section="4.3"/>. It <bcp14>MUST</bcp14>
	 be one of the Namespace-IDs listed in the IOAM Capabilities Query Object of the echo request.</t>
          <t>The Ingress_MTU field has 16 bits and specifies the MTU (in octets) of the ingress interface from which the sending node received the echo 
	 request.</t>
          <t>The Ingress_if_id field has 16 bits (in short format) or 32 bits (in
          wide format) and specifies the identifier of the ingress interface
          from which the sending node received the echo request. If the W-bit
          is cleared, the Ingress_if_id field has 16 bits; then the
          16 bits following the Ingress_if_id field are reserved for future
          use, <bcp14>MUST</bcp14> be set to zero, and <bcp14>MUST</bcp14>
          be ignored when non-zero.</t>
        </section>
        <section anchor="ioam-cap-res-cont">
          <name>IOAM Proof of Transit Capabilities Object</name>
          <figure anchor="Figure_5">
            <name>IOAM Proof of Transit Capabilities Object</name>
            <artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.                                                               .
.       IOAM Proof of Transit Capabilities Object Header        .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Namespace-ID          | IOAM-POT-Type |SoP| Reserved  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
          </figure>
          <t> When the IOAM Proof of Transit Capabilities Object is present in the IOAM Capabilities Response Container, the sending node is an IOAM transit node and the IOAM 
	 Proof of Transit function is enabled at this IOAM transit node.</t>
          <t>The Namespace-ID field has the same definition as what's specified in <xref target="RFC9197" sectionFormat="of" section="4.3"/>. It <bcp14>MUST</bcp14>
	 be one of the Namespace-IDs listed in the IOAM Capabilities Query Object of the echo request.</t>
         <t> The IOAM-POT-Type field has the same definition as what's specified in <xref target="RFC9197" sectionFormat="of" section="4.5"/>.</t>
	 
          <t>The SoP (Size of POT) field has two bits that indicate the size of "PktID"
   and "Cumulative" data, which are specified in  <xref target="RFC9197" sectionFormat="of" section="4.5"/>. This document defines SoP as follows:
          </t>
          <dl spacing="normal">
            <dt>0b00:</dt><dd>64-bit "PktID" and 64-bit "Cumulative" data</dd>
            <dt>0b01~0b11:</dt><dd>reserved for future standardization</dd>
          </dl>
	            <t>The Reserved field <bcp14>MUST</bcp14> be zeroed on transmission and ignored on receipt.</t>

        </section>
        <section anchor="ioam-e2e">
          <name>IOAM Edge-to-Edge Capabilities Object</name>
          <figure anchor="Figure_6">
            <name>IOAM Edge-to-Edge Capabilities Object</name>
            <artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.                                                               .
.          IOAM Edge-to-Edge Capabilities Object Header         .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Namespace-ID          |         IOAM-E2E-Type         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|TSF|         Reserved          |           Reserved            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
          </figure>
          <t> When the IOAM Edge-to-Edge Capabilities Object is present in the IOAM Capabilities Response Container, the sending node is an IOAM decapsulating node and 
	 IOAM edge-to-edge function is enabled at this IOAM decapsulating node.</t>
          <t>The Namespace-ID field has the same definition as what's specified in <xref target="RFC9197" sectionFormat="of" section="4.3"/>. It <bcp14>MUST</bcp14>
	 be one of the Namespace-IDs listed in the IOAM Capabilities Query Object of the echo request.</t>
          <t>The IOAM-E2E-Type field has the same definition as what's specified in <xref target="RFC9197" sectionFormat="of" section="4.6"/>.</t>


          <t>The TSF field specifies the timestamp format used by the sending node. Aligned with three possible timestamp formats specified in <xref target="RFC9197" sectionFormat="of" section="5"/>, this document defines TSF as follows:
          </t>
          <dl spacing="normal">
            <dt>0b00:</dt><dd>PTP truncated timestamp format</dd>
            <dt>0b01:</dt><dd>NTP 64-bit timestamp format</dd>
            <dt>0b10:</dt><dd> POSIX-based timestamp format</dd>
            <dt>0b11:</dt><dd> Reserved for future standardization</dd>
          </dl>
	            <t>The Reserved field <bcp14>MUST</bcp14> be zeroed on transmission and ignored on receipt.</t>

        </section>
        <section>
          <name>IOAM DEX Capabilities Object</name>
          <figure anchor="Figure_7">
            <name>IOAM DEX Capabilities Object</name>
            <artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.                                                               .
.              IOAM DEX Capabilities Object Header              .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|               IOAM-Trace-Type                 |    Reserved   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Namespace-ID          |           Reserved            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
          </figure>
          <t>When the IOAM DEX Capabilities Object is present in the IOAM Capabilities Response Container, the sending node is an IOAM transit node and the IOAM 
	 direct exporting function is enabled at this IOAM transit node.</t>
          <t>The IOAM-Trace-Type field has the same definition as what's specified in <xref target="RFC9326" sectionFormat="of" section="3.2"/>.</t>
          <t>The Namespace-ID field has the same definition as what's specified in <xref target="RFC9197" sectionFormat="of" section="4.3"/>. It <bcp14>MUST</bcp14> 
	  be one of the Namespace-IDs listed in the IOAM Capabilities Query Object of the echo request.</t>
          <t>The Reserved field <bcp14>MUST</bcp14> be zeroed on transmission and ignored on receipt.</t>
	  
        </section>
        <section>
          <name>IOAM End-of-Domain Object</name>
          <figure anchor="Figure_8">
            <name>IOAM End-of-Domain Object</name>
            <artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.                                                               .
.               IOAM End-of-Domain Object Header                .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Namespace-ID          |            Reserved           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
          </figure>
          <t>When the IOAM End-of-Domain Object is present in the IOAM Capabilities Response Container, the sending node is an IOAM decapsulating node. 
	 Unless the IOAM Edge-to-Edge Capabilities Object is present, which also indicates that the sending node is an IOAM 
	 decapsulating node, the IOAM End-of-Domain Object <bcp14>MUST</bcp14> be present in the IOAM Capabilities Response Container sent by an IOAM decapsulating node. 
	 When the IOAM edge-to-edge function is enabled at the IOAM decapsulating node, including only the IOAM Edge-to-Edge Capabilities Object, not the IOAM End-of-Domain Object, is <bcp14>RECOMMENDED</bcp14>.</t>
          <t>The Namespace-ID field has the same definition as what's specified in <xref target="RFC9197" sectionFormat="of" section="4.3"/>. It <bcp14>MUST</bcp14>
	 be one of the Namespace-IDs listed in the IOAM Capabilities Query Container.</t>
          <t> Reserved field <bcp14>MUST</bcp14> be zeroed on transmission and ignored on receipt.</t>
        </section>
      </section>
    </section>
    <section>
      <name>Operational Guide</name>


      <t> Once the IOAM encapsulating node is triggered to discover the
      enabled IOAM capabilities of each IOAM transit and IOAM decapsulating
      node, the IOAM encapsulating node will send echo requests that include
      the IOAM Capabilities Query Container as follows:</t>
      <ul spacing="normal">
	<li>First, with TTL equal to 1 to reach the closest node (which may or
	may not be an IOAM transit node).</li>
	<li>Then, with TTL equal to 2 to reach the second-nearest node (which
	also may or may not be an IOAM transit node).</li>
	<li>Then, further increasing by 1 the TTL every time the IOAM
	encapsulating node sends a new echo request, until the IOAM
	encapsulating node receives an echo reply sent by the IOAM
	decapsulating node (which contains the IOAM Capabilities Response
	Container including the IOAM Edge-to-Edge Capabilities Object or the
	IOAM End-of-Domain Object).</li></ul>
      <t>As a result, the echo requests sent by the
      IOAM encapsulating node will reach all nodes one by one along the
      transport path of IOAM data packet.</t>

      <t>Alternatively, if the IOAM
      encapsulating node knows precisely all the IOAM transit and IOAM
      decapsulating nodes beforehand, once the IOAM encapsulating node is
      triggered to discover the enabled IOAM capabilities, it can send an echo
      request to each IOAM transit and IOAM decapsulating node directly,
      without TTL expiration.</t>
      <t> The IOAM encapsulating node may be triggered by the device administrator, the network management system, the network controller, or
  data traffic. The specific triggering mechanisms are outside the scope of this document.</t>
      <t> Each IOAM transit and IOAM decapsulating node that receives an echo request containing the IOAM Capabilities Query Container will send an
  echo reply to the IOAM encapsulating node. For the echo reply, there is an IOAM Capabilities Response Container containing one or more
  Objects. The IOAM Capabilities Query Container of the echo request would be ignored by the receiving node unaware of IOAM.</t>

      <t> Note that the mechanism defined in this document applies to all
      kinds of IOAM option types, whether the four types of IOAM options
      defined in <xref target="RFC9197"/> or the DEX type of IOAM option
      defined in <xref target="RFC9326"/>. Specifically, when applied to the
      IOAM DEX option, the mechanism allows the IOAM encapsulating node to
      discover which nodes along the transport path support IOAM direct
      exporting and which trace data types are supported to be directly
      exported at these nodes.</t>
    </section>
    <section>
      <name>IANA Considerations</name>
    
      <t> IANA has created a registry named "In Situ OAM (IOAM) Capabilities".</t>
      <t> This registry includes the following subregistries:</t>
      <ul spacing="normal">
        <li>IOAM SoP Capability</li>
        <li>IOAM TSF Capability</li>
      </ul>

      <t> The subsequent subsections detail the registries herein contained.</t>
      <t> Considering the Containers/Objects defined in this document that would be carried in different types of Echo Request/Reply messages, such as 
  ICMPv6 or LSP Ping, it is intended that the registries for Container/Object Type would be requested in subsequent documents.</t>
      <section>
        <name>IOAM SoP Capability Registry</name>
        <t> This registry defines four codepoints for the IOAM SoP Capability field for identifying the size of "PktID" and "Cumulative" data 
	as explained in <xref target="RFC9197" sectionFormat="of" section="4.5"/>.</t>
        <t> A new entry in this registry requires the following fields:</t>
        <ul spacing="normal">
          <li> SoP (Size of POT): a 2-bit binary field as defined in <xref target="ioam-cap-res-cont"/>.</li>
          <li> Description: a terse description of the meaning of this SoP value.</li>
        </ul>
        <t> The registry initially contains the following value:</t>
<table anchor="sop-description" align="center">
  <name>SoP and Description</name>
  <thead>
    <tr>
      <th>SoP</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0b00</td>
      <td>64-bit "PktID" and 64-bit "Cumulative" data</td>
    </tr>
  </tbody>
</table>
        <t>0b01 - 0b11 are available for assignment via the IETF Review process as per <xref target="RFC8126"/>.</t>
      </section>
      <section>
        <name>IOAM TSF Capability Registry</name>
        <t> This registry defines four codepoints for the IOAM TSF Capability field for identifying the timestamp format as explained in <xref target="RFC9197" sectionFormat="of" section="5"/>.</t>
        <t> A new entry in this registry requires the following fields:</t>
        <ul spacing="normal">
          <li> TSF (TimeStamp Format): a 2-bit binary field as defined in <xref target="ioam-e2e"/>.</li>
          <li> Description: a terse description of the meaning of this TSF value.</li>
        </ul>
        <t> The registry initially contains the following values:</t>

<table anchor="tsf-description" align="center">
  <name>TSF and Description</name>
  <thead>
    <tr>
      <th>TSF</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0b00</td>
      <td>PTP Truncated Timestamp Format</td>
    </tr>
    <tr>
      <td>0b01</td>
      <td>NTP 64-bit Timestamp Format</td>
    </tr>
    <tr>
      <td>0b10</td>
      <td>POSIX-based Timestamp Format</td>
    </tr>
  </tbody>
</table>

        <t> 0b11 is available for assignment via the IETF Review process as per <xref target="RFC8126"/>.</t>
      </section>
    </section>
    <section>
      <name>Security Considerations</name>
      <t> Overall, the security needs for IOAM capabilities query mechanisms used in different environments are similar.</t>
      <t> To avoid potential Denial-of-Service (DoS) attacks, it is <bcp14>RECOMMENDED</bcp14> that implementations apply rate-limiting to 
  incoming echo requests and replies.</t>
      <t> To protect against unauthorized sources using echo request messages to obtain IOAM Capabilities information, 
  implementations <bcp14>MUST</bcp14> provide a means of checking the source addresses of echo request messages against an 
  access list before accepting the message.</t>
      <t> A deployment <bcp14>MUST</bcp14> ensure that border-filtering drops inbound echo requests with an IOAM Capabilities Container Header 
  from outside of the domain and that drops outbound echo requests or replies with IOAM Capabilities Headers leaving the domain.</t>
      <t> A deployment <bcp14>MUST</bcp14> support the configuration option to enable or disable the IOAM Capabilities Discovery feature defined 
  in this document. By default, the IOAM Capabilities Discovery feature <bcp14>MUST</bcp14> be disabled.</t>
      <t> The integrity protection on IOAM Capabilities information carried in echo reply messages can be achieved by the 
  underlying transport. For example, if the environment is an IPv6 network, the IP Authentication Header 
  <xref target="RFC4302"/> or IP Encapsulating Security Payload Header <xref target="RFC4303"/> can be used.</t>
      <t> The collected IOAM Capabilities information by queries may be considered confidential. An implementation can use 
  secure underlying transport of echo requests or replies to provide privacy protection. For example, if the environment is 
  an IPv6 network, confidentiality can be achieved by using the IP Encapsulating Security Payload Header <xref target="RFC4303"/>.</t>
      <t> An implementation can also directly secure the data carried in echo requests and replies if needed, the specific 
  mechanism on how to secure the data is beyond the scope of this document.</t>


      <t> An implementation can also check whether the fields in received echo
      requests and replies strictly conform to the specifications, e.g.,
      whether the list of IOAM Namespace-IDs includes duplicate entries and
      whether the received Namespace-ID is an operator-assigned or
      IANA-assigned one, once a check fails, an exception event indicating the
      checked field should be reported to the management.</t>
      <t> Except for what's described above, the security issues discussed in <xref target="RFC9197"/> provide good guidance on 
  implementation of this specification.</t>
    </section>
  </middle>
  <back>

<displayreference target="I-D.ietf-sfc-multi-layer-oam" to="OAM-for-SFC"/>
<displayreference target="I-D.ietf-bier-ping" to="BIER-PING"/>

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9197.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9326.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8799.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4443.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4620.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4884.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8335.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8029.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4302.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4303.xml"/>

<!-- [I-D.ietf-sfc-multi-layer-oam] IESG state Publication Requested. 

-->

<reference anchor="I-D.ietf-sfc-multi-layer-oam">
<front>
<title>Active OAM for Service Function Chaining (SFC)</title>
<author initials="G." surname="Mirsky" fullname="Greg Mirsky">
<organization>Ericsson</organization>
</author>
<author initials="W." surname="Meng" fullname="Wei Meng">
<organization>ZTE Corporation</organization>
</author>
<author initials="T." surname="Ao" fullname="Ting Ao">
<organization>China Mobile</organization>
</author>
<author initials="B." surname="Khasnabish" fullname="Bhumip Khasnabish">
<organization>Individual contributor</organization>
</author>
<author initials="K." surname="Leung" fullname="Kent Leung">
<organization>Individual contributor</organization>
</author>
<author initials="G." surname="Mishra" fullname="Gyan Mishra">
<organization>Verizon Inc.</organization>
</author>
<date month="March" day="23" year="2023"/>
</front>
<seriesInfo name="Internet-Draft" value="draft-ietf-sfc-multi-layer-oam-23"/>
</reference>


<!-- [I-D.ietf-bier-ping] IESG state Expired.-->

        <xi:include href="https://datatracker.ietf.org/doc/bibxml3/draft-ietf-bier-ping.xml"/>
      </references>
    </references>
    <section numbered="false">
      <name>Acknowledgements</name>
      <t> The authors would like to acknowledge <contact fullname="Tianran
      Zhou"/>, <contact fullname="Dhruv Dhody"/>, <contact fullname="Frank
      Brockners"/>, <contact fullname="Cheng Li"/>, <contact fullname="Gyan
      Mishra"/>, <contact fullname="Marcus Ihlar"/>, <contact fullname="Martin
      Duke"/>, <contact fullname="Chris Lonvick"/>, <contact fullname="Éric
      Vyncke"/>, <contact fullname="Alvaro Retana"/>, <contact fullname="Paul
      Wouters"/>, <contact fullname="Roman Danyliw"/>, <contact fullname="Lars
      Eggert"/>, <contact fullname="Warren Kumari"/>, <contact fullname="John
      Scudder"/>, <contact fullname="Robert Wilton"/>, <contact fullname="Erik
      Kline"/>, <contact fullname="Zaheduzzaman Sarker"/>, <contact
      fullname="Murray Kucherawy"/>, and <contact fullname="Donald Eastlake
      3rd"/> for their careful review and helpful comments.</t>
      <t> The authors appreciate the f2f discussion with <contact
      fullname="Frank Brockners"/> on this document.</t>
      <t> The authors would like to acknowledge <contact fullname="Tommy
      Pauly"/> and <contact fullname="Ian Swett"/> for their good suggestion
      and guidance.</t>
    </section>
  </back>
</rfc>
