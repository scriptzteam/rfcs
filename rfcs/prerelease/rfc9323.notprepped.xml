<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc [
 <!ENTITY nbsp    "&#160;">
 <!ENTITY zwsp   "&#8203;">
 <!ENTITY nbhy   "&#8209;">
 <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" submissionType="IETF" consensus="true" category="std" docName="draft-ietf-sidrops-rpki-rsc-11" number="9323" ipr="trust200902" xml:lang="en" tocInclude="true" sortRefs="true" symRefs="true" tocDepth="3" updates="" obsoletes="" version="3">

  <front>

<title abbrev="RPKI Signed Checklists (RSCs)">
      A Profile for RPKI Signed Checklists (RSCs)
    </title>
    <seriesInfo name="RFC" value="9323"/>
    <author fullname="Job Snijders" initials="J." surname="Snijders">
      <organization>Fastly</organization>
      <address>
        <postal>
          <street/>
          <code/>
          <city>Amsterdam</city>
          <country>Netherlands</country>
        </postal>
        <email>job@fastly.com</email>
      </address>
    </author>
    <author fullname="Tom Harrison" initials="T." surname="Harrison">
      <organization abbrev="APNIC">Asia Pacific Network Information Centre</organization>
      <address>
        <postal>
          <street>6 Cordelia St</street>
          <city>South Brisbane</city>
          <code>4101</code>
          <country>Australia</country>
          <region>QLD</region>
        </postal>
        <phone/>
        <email>tomh@apnic.net</email>
      </address>
    </author>
    <author fullname="Ben Maddison" initials="B." surname="Maddison">
      <organization abbrev="Workonline">Workonline Communications</organization>
      <address>
        <postal>
          <street/>
          <city>Cape Town</city>
          <code/>
          <country>South Africa</country>
        </postal>
        <email>benm@workonline.africa</email>
      </address>
    </author>
    <date year="2022" month="November" />
    <area>ops</area>
    <workgroup>sidrops</workgroup>

    <keyword>security</keyword>
    <keyword>cryptography</keyword>
    <keyword>X.509</keyword>
    

    <abstract>

      <t>
         This document defines a Cryptographic Message Syntax (CMS) protected content type for use with the Resource Public Key Infrastructure (RPKI) to carry a general-purpose listing of checksums (a 'checklist').
         The objective is to allow for the creation of an attestation, termed an "RPKI Signed Checklist (RSC)", which contains one or more checksums of arbitrary digital objects (files) that are signed with a specific set of Internet Number Resources. When validated, an RSC confirms that the respective Internet resource holder produced the RSC.
      </t>
    </abstract>
  </front>
  <middle>
    <section anchor="intro">
      <name>Introduction</name>
      <t>
        This document defines a Cryptographic Message Syntax (CMS) <xref target="RFC5652"/> <xref target="RFC6268"/> protected content type for a general-purpose listing of checksums (a 'checklist'), for use with the Resource Public Key Infrastructure (RPKI) <xref target="RFC6480"/>.
        The CMS protected content type is intended to provide for the creation and validation of an RPKI Signed Checklist (RSC), a checksum listing signed with a specific set of Internet Number Resources.
        The objective is to allow for the creation of an attestation that, when validated, provides a means to confirm a given Internet resource holder produced the RSC.
      </t>
      <t>
        RPKI Signed Checklists are expected to facilitate inter-domain business use cases that depend on an ability to verify resource holdership.
        RPKI-based validation processes are expected to become the industry norm for automated Bring Your Own IP (BYOIP) on-boarding or establishment of physical interconnections between Autonomous Systems (ASes).
      </t>
      <t>
        The RSC concept borrows heavily from Resource Tagged Attestation (RTA) <xref target="I-D.ietf-sidrops-rpki-rta"/>, Manifests <xref target="RFC9286"/>, and OpenBSD's signify utility <xref target="signify"/>.
        The main difference between an RSC and RTA is that the RTA profile allows multiple signers to attest a single digital object through a checksum of its content, while the RSC profile allows a single signer to attest the content of multiple digital objects.
        A single signer profile is considered a simplification for both implementers and operators.
      </t>
<section anchor="requirements">
      <name>Requirements Language</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are
    to be interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/>
    <xref target="RFC8174"/> when, and only when, they appear in all capitals,
    as shown here.
        </t>
    </section>
    </section>
    <section anchor="profile">
      <name>RSC Profile and Distribution</name>
      <t>
        RSC follows the Signed Object Template for the RPKI <xref target="RFC6488"/> with one exception: because RSCs <bcp14>MUST NOT</bcp14> be distributed through the global RPKI repository system, the Subject Information Access (SIA) extension <bcp14>MUST</bcp14> be omitted from the RSC's X.509 End-Entity (EE) certificate.
      </t>

      <t>
        What constitutes suitable transport for RSC files is deliberately unspecified.
        For example, it might be a USB stick, a web interface secured with HTTPS, an email signed with Pretty Good Privacy (PGP), a T-shirt printed with a QR code, or a carrier pigeon.
      </t>
      <section title="RSC EE Certificates">

        <t>
          The Certification Authority (CA) <bcp14>MUST</bcp14> only sign one RSC with each EE certificate and <bcp14>MUST</bcp14> generate a new key pair for each new RSC.
          This type of EE certificate is termed a "one-time-use" EE certificate (see <xref target="RFC6487" section="3"/>).
        </t>
      </section>
    </section>
    <section anchor="content">
      <name>The RSC eContentType</name>
      <t>
        The eContentType for an RSC is defined as id-ct-signedChecklist, with Object Identifier (OID) 1.2.840.113549.1.9.16.1.48.
      </t>
      <t>
        This OID <bcp14>MUST</bcp14> appear within both the eContentType in the encapContentInfo object and the ContentType signed attribute in the signerInfo object (see <xref target="RFC6488"/>).
      </t>
    </section>
    <section anchor="econtent">
      <name>The RSC eContent</name>
      <t>
        The content of an RSC indicates that a checklist for arbitrary digital objects has been signed with a specific set of Internet Number Resources.
        An RSC is formally defined as follows:
      </t>
      <sourcecode type="asn.1">RpkiSignedChecklist-2022
  { iso(1) member-body(2) us(840) rsadsi(113549)
    pkcs(1) pkcs9(9) smime(16) mod(0)
    id-mod-rpkiSignedChecklist-2022(73) }

DEFINITIONS EXPLICIT TAGS ::=
BEGIN

IMPORTS
  CONTENT-TYPE, Digest, DigestAlgorithmIdentifier
  FROM CryptographicMessageSyntax-2010 -- in [RFC6268]
    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)
      pkcs-9(9) smime(16) modules(0) id-mod-cms-2009(58) }

  IPAddressOrRange, ASIdOrRange
  FROM IPAddrAndASCertExtn -- in [RFC3779]
    { iso(1) identified-organization(3) dod(6) internet(1)
      security(5) mechanisms(5) pkix(7) mod(0)
      id-mod-ip-addr-and-as-ident(30) } ;

ct-rpkiSignedChecklist CONTENT-TYPE ::=
  { TYPE RpkiSignedChecklist
    IDENTIFIED BY id-ct-signedChecklist }

id-ct-signedChecklist OBJECT IDENTIFIER ::=
  { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)
    pkcs-9(9) id-smime(16) id-ct(1) 48 }

RpkiSignedChecklist ::= SEQUENCE {
  version [0]           INTEGER DEFAULT 0,
  resources             ResourceBlock,
  digestAlgorithm       DigestAlgorithmIdentifier,
  checkList             SEQUENCE (SIZE(1..MAX)) OF FileNameAndHash }

FileNameAndHash ::= SEQUENCE {
  fileName              PortableFilename OPTIONAL,
  hash                  Digest }

PortableFilename ::=
  IA5String (FROM("a".."z" | "A".."Z" | "0".."9" | "." | "_" | "-"))

ResourceBlock ::= SEQUENCE {
  asID         [0]      ConstrainedASIdentifiers OPTIONAL,
  ipAddrBlocks [1]      ConstrainedIPAddrBlocks OPTIONAL }
  -- at least one of asID or ipAddrBlocks MUST be present
  ( WITH COMPONENTS { ..., asID PRESENT} |
    WITH COMPONENTS { ..., ipAddrBlocks PRESENT } )

ConstrainedIPAddrBlocks ::=
  SEQUENCE (SIZE(1..MAX)) OF ConstrainedIPAddressFamily

ConstrainedIPAddressFamily ::= SEQUENCE {
  addressFamily         OCTET STRING (SIZE(2)),
  addressesOrRanges     SEQUENCE (SIZE(1..MAX)) OF IPAddressOrRange }

ConstrainedASIdentifiers ::= SEQUENCE {
  asnum [0]             SEQUENCE (SIZE(1..MAX)) OF ASIdOrRange }

END
</sourcecode>
      <section>
        <name>Version</name>
        <t>
          The version number of the RpkiSignedChecklist <bcp14>MUST</bcp14> be 0.
        </t>
      </section>
      <section>
        <name>Resources</name>
        <t>
          The resources contained here are the resources used to mark the attestation and <bcp14>MUST</bcp14> be a subset of the set of resources listed by the EE certificate carried in the CMS certificates field.
        </t>
        <t>
          If the asID field is present, it <bcp14>MUST</bcp14> contain an instance of ConstrainedASIdentifiers.
        </t>
        <t>
          If the ipAddrBlocks field is present, it <bcp14>MUST</bcp14> contain an instance of ConstrainedIPAddrBlocks.
        </t>
        <t>
          At least one of asID or ipAddrBlocks <bcp14>MUST</bcp14> be present.
        </t>
        <t>
          ConstrainedASIdentifiers and ConstrainedIPAddrBlocks are specified such that the resulting DER-encoded data instances are binary compatible with ASIdentifiers and IPAddrBlocks (defined in <xref target="RFC3779"/>), respectively.
        </t>
        <t>
          Implementations encountering decoding errors whilst attempting to read DER-encoded data using this specification should be aware of the possibility that the data may have been encoded using an implementation intended for use with <xref target="RFC3779"/>. Such data may contain elements prohibited by the current specification.
        </t>
        <t>
          Attempting to decode the errored data using the more permissive specification contained in <xref target="RFC3779"/> may enable implementors to gather additional context for use when reporting errors to the user.
        </t>
        <t>
          However, implementations <bcp14>MUST NOT</bcp14> ignore errors resulting from the more restrictive definitions contained herein; in particular, such errors <bcp14>MUST</bcp14> cause the validation procedure described in <xref target="validation"/> to fail.
        </t>
        <section>
          <name>ConstrainedASIdentifiers Type</name>
          <t>
            ConstrainedASIdentifiers is a SEQUENCE consisting of a single field, asnum, which in turn contains a SEQUENCE OF one or more ASIdOrRange instances as defined in <xref target="RFC3779"/>.
          </t>
          <t>
            ConstrainedASIdentifiers is defined such that the resulting DER-encoded data are binary compatible with ASIdentifiers defined in <xref target="RFC3779"/>.
          </t>
        </section>
        <section>
          <name>ConstrainedIPAddrBlocks Type</name>
          <t>
            ConstrainedIPAddrBlocks is a SEQUENCE OF one or more instances of ConstrainedIPAddressFamily.
          </t>
          <t>
            There <bcp14>MUST</bcp14> be only one instance of ConstrainedIPAddressFamily per unique Address Family Identifier (AFI).
          </t>
          <t>
            The elements of ConstrainedIPAddressFamily <bcp14>MUST</bcp14> be ordered by ascending addressFamily values (treating the octets as unsigned numbers).
            Thus, when both IPv4 and IPv6 addresses are specified, the IPv4 addresses <bcp14>MUST</bcp14> precede the IPv6 addresses (since the IPv4 AFI of 0001 is less than the IPv6 AFI of 0002).
          </t>
          <t>
            ConstrainedIPAddrBlocks is defined such that the resulting DER-encoded data are binary compatible with IPAddrBlocks defined in <xref target="RFC3779"/>.
          </t>
          <section>
            <name>ConstrainedIPAddressFamily Type</name>
            <section>
              <name>addressFamily Field</name>
              <t>
                The addressFamily field is an OCTET STRING containing a 2-octet AFI, in network byte order.
                Unlike IPAddrBlocks <xref target="RFC3779"/>, a third octet containing a Subsequent Address Family Identifier (SAFI) <bcp14>MUST NOT</bcp14> be present.
                AFIs are specified in the "Address Family Numbers" registry <xref target="IANA.ADDRESS-FAMILY-NUMBERS"></xref> maintained by IANA.
              </t>
            </section>
            <section>
              <name>addressesOrRanges Field</name>
              <t>
                The addressesOrRanges element is a SEQUENCE OF one or more IPAddressOrRange values, as defined in <xref target="RFC3779"/>.
                The rules for canonicalization and encoding defined in <xref target="RFC3779" section="2.2.3.6"/> apply to the value of addressesOrRanges.
              </t>
            </section>
          </section>
        </section>
      </section>
      <section>
        <name>digestAlgorithm</name>
        <t>
          The digest algorithm is used to create the message digest of the attested digital object(s).
          This algorithm <bcp14>MUST</bcp14> be a hashing algorithm defined in <xref target="RFC7935"/>.
        </t>
      </section>
      <section>
        <name>checkList</name>
        <t>
          This field is a SEQUENCE OF one or more FileNameAndHash values.
          There is one FileNameAndHash entry for each digital object referenced on the RSC.
        </t>
        <section anchor="FileNameAndHash">
          <name>FileNameAndHash</name>
          <t>
            Each FileNameAndHash is an ordered pair of the name of the directory entry containing the digital object and the message digest of the digital object.
          </t>
          <t>
            The hash field is mandatory.
            The value of the hash field is the calculated message digest of the digital object.
            The hashing algorithm is specified in the digestAlgorithm field.
          </t>
          <t>
            The fileName field is <bcp14>OPTIONAL</bcp14>.
            This is to allow RSCs to be used in a "stand-alone" fashion in which nameless digital objects are addressed directly through their respective message digest rather than through a file system abstraction.
          </t>
          <t>
            If the fileName field is present, then its value:
          </t>
          <ul>
            <li>
              <bcp14>MUST</bcp14> contain only characters specified in the Portable Filename Character Set as defined in <xref target="POSIX"/>.
            </li>
            <li>
              <bcp14>MUST</bcp14> be unique with respect to the other FileNameAndHash elements of checkList for which the fileName field is also present.
            </li>
          </ul>
          <t>
            Conversely, if the fileName field is omitted, then the value of the hash field <bcp14>MUST</bcp14> be unique with respect to the other FileNameAndHash elements of checkList for which the fileName field is also omitted.
          </t>
        </section>
      </section>
    </section>
    <section anchor="validation">
      <name>RSC Validation</name>
      <t>
        Before a Relying Party (RP) can use an RSC to validate a set of digital objects, the RP <bcp14>MUST</bcp14> first validate the RSC.
        To validate an RSC, the RP <bcp14>MUST</bcp14> perform all the validation checks specified in <xref target="RFC6488"/>, except for checking for the presence of an SIA extension, which <bcp14>MUST NOT</bcp14> be present in the EE certificate (see <xref target="profile"/>).
        In addition, the RP <bcp14>MUST</bcp14> perform the following RSC-specific validation steps:
      </t>
      <ol>
        <li>
          The contents of the CMS eContent field <bcp14>MUST</bcp14> conform to all of the constraints described in <xref target="econtent"/>, including the constraints described in <xref target="FileNameAndHash"/>.
        </li>
        <li>
          If the asID field is present within the contents of the resources field, then the AS identifier delegation extension <xref target="RFC3779"/> <bcp14>MUST</bcp14> be present in the EE certificate contained in the CMS certificates field. The AS identifiers present in the eContent resources field <bcp14>MUST</bcp14> be a subset of those present in the certificate extension. The EE certificate's AS identifier delegation extension <bcp14>MUST NOT</bcp14> contain "inherit" elements.
        </li>
        <li>
          If the ipAddrBlocks field is present within the contents of the resources field, then the IP address delegation extension <xref target="RFC3779"/> <bcp14>MUST</bcp14> be present in the EE certificate contained in the CMS certificates field. The IP addresses present in the eContent resources field <bcp14>MUST</bcp14> be a subset of those present in the certificate extension. The EE certificate's IP address delegation extension <bcp14>MUST NOT</bcp14> contain "inherit" elements.
        </li>
      </ol>
    </section>
    <section>
      <name>Verifying Files or Data Using RSC</name>
      <t>
        To verify a set of digital objects with an RSC:
      </t>
      <ul>
        <li>
          The RSC <bcp14>MUST</bcp14> be validated according to the procedure described in <xref target="validation"/>.
          If the RSC cannot be validated, verification <bcp14>MUST</bcp14> fail.
          This error <bcp14>SHOULD</bcp14> be reported to the user.
        </li>
        <li>
          <t>For every digital object to be verified:</t>
          <ol>
            <li anchor="mode">
              <t>
                If the verification procedure is provided with a filename for the object being verified (e.g., because the user has provided a file system path from which to read the object), then verification <bcp14>SHOULD</bcp14> proceed in "filename-aware" mode. Otherwise, verification <bcp14>SHOULD</bcp14> proceed in "filename-unaware" mode.
              </t>
              <t>
                Implementations <bcp14>MAY</bcp14> provide an option to override the verification mode, for example, to ignore the fact that the object is to be read from a file.
              </t>
            </li>
            <li anchor="hash">
              <t>
                The message digest <bcp14>MUST</bcp14> be computed from the file contents or data using the digest algorithm specified in the digestAlgorithm field of the RSC.
              </t>
            </li>
            <li anchor="match_hash">
              <t>
                The digest computed in Step <xref target="hash" format="counter"/> <bcp14>MUST</bcp14> be compared to the value appearing in the hash field of all FileNameAndHash elements of the checkList field of the RSC.
              </t>
              <t>
                One or more FileNameAndHash elements <bcp14>MUST</bcp14> be found with a matching hash value; otherwise, verification <bcp14>MUST</bcp14> fail, and the error <bcp14>SHOULD</bcp14> be reported to the user.
              </t>
            </li>
            <li>
              <t>
                If the mode selected in Step <xref target="mode" format="counter"/> is "filename-aware", then exactly one of the FileNameAndHash elements matched in Step <xref target="match_hash" format="counter"/> <bcp14>MUST</bcp14> contain a fileName field value exactly matching the filename of the object being verified.
              </t>
              <t>
                Alternatively, if the mode selected in Step <xref target="mode" format="counter"/> is "filename-unaware", then exactly one of the FileNameAndHash elements matched in Step <xref target="match_hash" format="counter"/> <bcp14>MUST</bcp14> have the fileName field omitted.
              </t>
              <t>
                Otherwise, verification <bcp14>MUST</bcp14> fail, and the error <bcp14>SHOULD</bcp14> be reported to the user.
              </t>
            </li>
          </ol>
        </li>
      </ul>
      <t>
        Note that in the above procedure, not all elements of checkList necessarily need be used. That is, it is not an error if the length of checkList is greater than the size of the set of digital objects to be verified. However, in this situation, implementations <bcp14>SHOULD</bcp14> issue a warning to the user, allowing for corrective action to be taken if necessary.
      </t>
    </section>
    <section>
      <name>Operational Considerations</name>
      <t>
        When creating digital objects of a plain-text nature (such as ASCII, UTF-8, HTML, Javascript, and XML), converting such objects into a lossless compressed form is <bcp14>RECOMMENDED</bcp14>.
        Distributing plain-text objects within a compression envelope (such as GZIP <xref target="RFC1952"></xref>) might help avoid unexpected canonicalization at intermediate systems (which in turn would lead to checksum verification errors).
        Validator implementations are expected to treat a checksummed digital object as a string of arbitrary single octets.
      </t>

<t>
        If a fileName field is present, but no digital object within the set of to-be-verified digital objects has a filename that matches the content of that field, a validator implementation <bcp14>SHOULD</bcp14> compare the message digest of each digital object to the value from the hash field of the associated FileNameAndHash and report matches to the user for further consideration.
      </t>
    </section>
    <section anchor="security">
      <name>Security Considerations</name>
      <t>
        RPs are hereby warned that the data in an RSC is self-asserted.
        When determining the meaning of any data contained in an RSC, RPs <bcp14>MUST NOT</bcp14> make any assumptions about the signer beyond the fact that it had sufficient control of the issuing CA to create the object.
        These data have not been verified by the Certificate Authority (CA) that issued the CA certificate to the entity that issued the EE certificate used to validate the RSC.
      </t>
      <t>
        RPKI certificates are not bound to real-world identities; see <xref target="RFC9255"/> for an elaboration.
        RPs can only associate real-world entities to Internet Number Resources by additionally consulting an exogenous authority.
        RSCs are a tool to communicate assertions signed with Internet Number Resources and do not communicate any other aspect of the resource holder's business operations, such as the identity of the resource holder itself.
      </t>
      <t>
        RSC objects are not distributed through the RPKI repository system.
        From this, it follows that third parties who do not have a copy of a given RSC may not be aware of the existence of that RSC.
        Since RSC objects use EE certificates but all other currently defined types of RPKI object profiles are published in public CA repositories, an observer may infer from discrepancies in the repository that RSC object(s) may exist.
        For example, if a CA does not use random serial numbers for certificates, an observer could detect gaps between the serial numbers of the published EE certificates.
        Similarly, if the CA includes a serial number on a Certificate Revocation List (CRL) that does not match any published object, an observer could postulate that an RSC EE certificate was revoked.
      </t>

      <t>
        Conversely, a gap in serial numbers does not imply that an RSC exists.
        Nor does the presence in a CRL of a serial number unknown to the RP imply an RSC object exists: the implicitly referenced object might not be an RSC, it might have never been published, or it may have been revoked before it was visible to RPs.
        In general, it is not possible to confidently infer the existence or non-existence of RSCs from the repository state without access to a given RSC.
      </t>
      <t>
        While a one-time-use EE certificate must only be used to generate and sign a single RSC object, CAs technically are not restricted from generating and signing multiple different RSC objects with a single key pair.
        Any RSC objects sharing the same EE certificate cannot be revoked individually.
      </t>
    </section>
    <section anchor="iana">
      <name>IANA Considerations</name>

      <section>
        <name>SMI Security for S/MIME CMS Content Type (1.2.840.113549.1.9.16.1)</name>
        <t>
          IANA has allocated the following in the "SMI Security for S/MIME CMS Content Type (1.2.840.113549.1.9.16.1)" registry:
        </t>

<table anchor="cms-content-type" align="center">
  <name></name>
  <thead>
    <tr>
      <th rowspan="1" colspan="1">Decimal</th>
      <th rowspan="1" colspan="1">Description</th>
      <th rowspan="1" colspan="1">References</th>
    </tr>
    </thead>
    <tbody>
      <tr>
	<td>48</td>
	<td>id-ct-signedChecklist</td>
	<td>RFC 9323</td>
      </tr>
    </tbody>
</table>

      </section>
      <section>
        <name>RPKI Signed Objects</name>
        <t>
          IANA has registered the OID for the RSC in the "RPKI Signed Objects" registry <xref target="RFC6488"/> as follows:
        </t>

<table anchor="rpki-signed-checklist" align="center">
  <name></name>
  <thead>
    <tr>
      <th rowspan="1" colspan="1">Name</th>
      <th rowspan="1" colspan="1">OID</th>
      <th rowspan="1" colspan="1">Reference</th>
    </tr>
</thead>
  <tbody>
    <tr>
      <td>Signed Checklist</td>
      <td>1.2.840.113549.1.9.16.1.48</td>
      <td>RFC 9323</td>
    </tr>
  </tbody>
</table>

      </section>
      <section>
        <name>RPKI Repository Name Schemes</name>
        <t>
          IANA has added the Signed Checklist file extension to the "RPKI Repository Name Schemes" registry <xref target="RFC6481"/> as follows:
        </t>

<table anchor="rpki-repository-name-schemes" align="center">
  <name></name>
  <thead>
    <tr>
      <th rowspan="1" colspan="1">Filename Extension</th>
      <th rowspan="1" colspan="1">RPKI Object</th>
      <th rowspan="1" colspan="1">Reference</th>
    </tr>
</thead>
  <tbody>
    <tr>
      <td>.sig</td>
      <td>Signed Checklist</td>
      <td>RFC 9323</td>
    </tr>
  </tbody>
</table>

      </section>
      <section>
        <name>SMI Security for S/MIME Module Identifier (1.2.840.113549.1.9.16.0)</name>
        <t>
          IANA has allocated the following in the "SMI Security for S/MIME Module Identifier (1.2.840.113549.1.9.16.0)" registry:
        </t>

<table anchor="smi-security-identifier" align="center">
  <name></name>
  <thead>
    <tr>
      <th rowspan="1" colspan="1">Decimal</th>
      <th rowspan="1" colspan="1">Description</th>
      <th rowspan="1" colspan="1">References</th>
    </tr>
</thead>
  <tbody>
    <tr>
      <td>73</td>
      <td>id-mod-rpkiSignedChecklist-2022</td>
      <td>RFC 9323</td>
    </tr>
  </tbody>
</table>

      </section>
      <section>
        <name>Media Types</name>
        <t>
          IANA has registered the media type "application/rpki-checklist" in the "Media Types" registry as follows:
        </t>
<dl>
   <dt>Type name:</dt><dd>application</dd>
   <dt>Subtype name:</dt><dd>rpki-checklist</dd>
   <dt>Required parameters:</dt><dd>N/A</dd>
   <dt>Optional parameters:</dt><dd>N/A</dd>
   <dt>Encoding considerations:</dt><dd>binary</dd>
   <dt>Security considerations:</dt><dd>Carries an RPKI Signed Checklist. This media type contains no active content. See <xref target="validation"/> of RFC 9323 for further information.</dd>
   <dt>Interoperability considerations:</dt><dd>N/A</dd>
   <dt>Published specification:</dt><dd>RFC 9323</dd>
   <dt>Applications that use this media type:</dt><dd>RPKI operators</dd>
   <dt>Fragment identifier considerations:</dt><dd>N/A</dd>
   <dt>Additional information:</dt><dd>
   <t><br/></t>
   <dl spacing="compact">
     <dt>Content:</dt><dd>This media type is a signed object, as defined in [RFC6488], which contains a payload of a list of checksums as defined in RFC 9323.</dd>
     <dt>Magic number(s):</dt><dd>N/A</dd>
     <dt>File extension(s):</dt><dd>.sig</dd>
     <dt>Macintosh file type code(s):</dt><dd>N/A</dd>
   </dl>
 </dd>
   <dt>Person &amp; email address to contact for further information:</dt><dd>Job Snijders (job@fastly.com)</dd>
   <dt>Intended usage:</dt><dd>COMMON</dd>
   <dt>Restrictions on usage:</dt><dd>N/A</dd>
   <dt>Author:</dt><dd>Job Snijders (job@fastly.com)</dd>
   <dt>Change controller:</dt><dd>IETF</dd>
</dl>

      </section>
    </section>
  </middle>
  <back>

<displayreference target="I-D.ietf-sidrops-rpki-rta" to="RPKI-RTA"/>

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>

<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3779.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5652.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6481.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6487.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6488.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7935.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9286.xml"/>

        <reference anchor="POSIX" target="https://publications.opengroup.org/standards/unix/c165">
          <front>
            <title>Base Specifications</title>
            <author>
              <organization>IEEE and The Open Group</organization>
            </author>
            <date year="2016"/>
          </front>
	  <refcontent>Issue 7</refcontent>
	  <seriesInfo name="DOI" value="10.1109/IEEESTD.2016.7582338"/>
        </reference>
      </references>
      <references>
        <name>Informative References</name>

        <reference anchor="IANA.ADDRESS-FAMILY-NUMBERS" target="https://www.iana.org/assignments/address-family-numbers">
          <front>
            <title>Address Family Numbers</title>
            <author>
              <organization abbrev="IANA">Internet Assigned Numbers Authority</organization>
            </author>
          </front>
        </reference>

<!-- [I-D.ietf-sidrops-rpki-rta] IESG state Expired -->

<reference anchor="I-D.ietf-sidrops-rpki-rta" target="https://datatracker.ietf.org/doc/html/draft-ietf-sidrops-rpki-rta-00">
  <front>
    <title>A profile for Resource Tagged Attestations (RTAs)</title>
    <author fullname="George G. Michaelson" initials="G" surname="Michaelson">
      <organization>Asia Pacific Network Information Centre</organization>
    </author>
    <author fullname="Geoff Huston" initials="G" surname="Huston">
      <organization>Asia Pacific Network Information Centre</organization>
    </author>
    <author fullname="Tom Harrison" initials="T" surname="Harrison">
      <organization>Asia Pacific Network Information Centre</organization>
    </author>
    <author fullname="Tim Bruijnzeels" initials="T" surname="Bruijnzeels">
      <organization>NLNet Labs B.V.</organization>
    </author>
    <author fullname="Martin Hoffmann" initials="M" surname="Hoffman">
      <organization>NLNet Labs B.V.</organization>
    </author>
    <date month="January" day="17" year="2021"/>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-ietf-sidrops-rpki-rta-00"/>
</reference>

<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1952.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6268.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6480.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9255.xml"/>

        <reference anchor="signify" target="https://man.openbsd.org/signify">
          <front>
            <title>signify - cryptographically sign and verify files</title>
            <author initials="T." surname="Unangst">
              <organization/>
            </author>
            <author initials="M." surname="Espie">
              <organization/>
            </author>
          </front>
        </reference>

      </references>
    </references>
    <section anchor="acknowledgements" numbered="false">
      <name>Acknowledgements</name>
      <t>
        The authors wish to thank
          <contact fullname="George Michaelson"/>,
          <contact fullname="Geoff Huston"/>,
          <contact fullname="Randy Bush"/>,
          <contact fullname="Stephen Kent"/>,
          <contact fullname="Matt Lepinski"/>,
          <contact fullname="Rob Austein"/>,
          <contact fullname="Ted Unangst"/>,
          and <contact fullname="Marc Espie"/>
        for prior art.
        The authors thank <contact fullname="Russ Housley"/> for reviewing the ASN.1 notation and providing suggestions.
        The authors would like to thank
          <contact fullname="Nimrod Levy"/>,
          <contact fullname="Tim Bruijnzeels"/>,
          <contact fullname="Alberto Leiva"/>,
          <contact fullname="Ties de Kock"/>,
          <contact fullname="Peter Peele"/>,
          <contact fullname="Claudio Jeker"/>,
          <contact fullname="Theo Buehler"/>,
          <contact fullname="Donald Eastlake 3rd"/>,
          <contact fullname="Erik Kline"/>,
          <contact fullname="Robert Wilton"/>,
          <contact fullname="Roman Danyliw"/>,
          <contact fullname="Éric Vyncke"/>,
          <contact fullname="Lars Eggert"/>,
          <contact fullname="Paul Wouters"/>,
          and <contact fullname="Murray S. Kucherawy"/>
        for document review and suggestions.
      </t>
    </section>
  </back>

</rfc>
