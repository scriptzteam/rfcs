<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" docName="draft-ietf-babel-v4viav6-08" number="9229" ipr="trust200902" obsoletes="" updates="" submissionType="IETF" category="exp"
consensus="true" xml:lang="en" tocInclude="true" tocDepth="2" symRefs="true" sortRefs="true" version="3">
  
  <!-- xml2rfc v2v3 conversion 3.12.2 -->
  <front>
    <title abbrev="IPv4 Routes with an IPv6 Next Hop">
IPv4 Routes with an IPv6 Next Hop in the Babel Routing Protocol
</title>
    <seriesInfo name="RFC" value="9229"/>
    <author fullname="Juliusz Chroboczek" initials="J." surname="Chroboczek">
      <organization>IRIF, University of Paris</organization>
      <address>
        <postal>
          <street>Case 7014</street>
          <city>Paris Cedex 13</city>
          <code>75205</code>
          <country>France</country>
        </postal>
        <email>jch@irif.fr</email>
      </address>
    </author>
    <date month="May" year="2022"/>
    <area>rtg</area>
    <workgroup>babel</workgroup>

<keyword>routing</keyword>
<keyword>transition</keyword>
<keyword>IPv6 transition</keyword>
<keyword>double-stack</keyword>
<keyword>dual-stack</keyword>
<keyword>glorious IPv6-only future</keyword>

    <abstract>
      <t>This document defines an extension to the Babel routing protocol that
allows announcing routes to an IPv4 prefix with an IPv6 next hop, which
makes it possible for IPv4 traffic to flow through interfaces that have
not been assigned an IPv4 address.</t>
    </abstract>
  </front>
  <middle>
    <section numbered="true" toc="default">
      <name>Introduction</name>

<t>
  The role of a routing protocol is to build a routing table, a data
structure that maps network prefixes in a given family (IPv4 or IPv6)
to next hops, which are (at least conceptually) pairs of an outgoing
interface and a neighbour's network address. For example:
</t>

      <artwork name="" type="" align="left" alt=""><![CDATA[
          destination                      next hop
      2001:db8:0:1::/64               eth0, fe80::1234:5678
      203.0.113.0/24                  eth0, 192.0.2.1
]]></artwork>
      <t>When a packet is routed according to a given routing table entry, the
forwarding plane typically uses a neighbour discovery protocol (the
Neighbour Discovery (ND) protocol <xref target="RFC4861" format="default"/> in the case of
IPv6 and the Address Resolution Protocol (ARP) <xref target="RFC0826" format="default"/> in
the case of IPv4) to map the next-hop address to a link-layer address (a
"Media Access Control (MAC) address"), which is then used to construct the link-layer frames that
encapsulate forwarded packets.</t>
      <t>It is apparent from the description above that there is no fundamental
reason why the destination prefix and the next-hop address should be in
the same address family: there is nothing preventing an IPv6 packet from
being routed through a next hop with an IPv4 address (in which case the
next hop's MAC address will be obtained using ARP) or, conversely, an
IPv4 packet from being routed through a next hop with an IPv6 address.
(In fact, it is even possible to store link-layer addresses directly in
the next-hop entry of the routing table, which is commonly done in
networks using the OSI protocol suite).</t>
      <t>The case of routing IPv4 packets through an IPv6 next hop is
particularly interesting, since it makes it possible to build networks
that have no IPv4 addresses except at the edges and still provide IPv4
connectivity to edge hosts.  In addition, since an IPv6 next hop can use
a link-local address that is autonomously configured, the use of such
routes enables a mode of operation where the network core has no
statically assigned IP addresses of either family, which significantly
reduces the amount of manual configuration required.  (See also
<xref target="RFC7404" format="default"/> for a discussion of the issues involved with such
an approach.)</t>
      <t>We call a route towards an IPv4 prefix that uses an IPv6 next hop
a "v4-via-v6" route.  This document describes an extension that allows the
Babel routing protocol <xref target="RFC8966" format="default"/> to announce v4-via-v6
routes across interfaces that have no IPv4 addresses assigned but are
capable of forwarding IPv4 traffic.  <xref target="icmp" format="default"/> describes
procedures that ensure that all routers can originate ICMPv4 packets, even
if they have not been assigned any IPv4 addresses.</t>
      <t>The extension described in this document is inspired by a previously
defined extension to BGP <xref target="RFC5549" format="default"/>.</t>
      <section numbered="true" toc="default">
        <name>Specification of Requirements</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
    interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/> <xref
    target="RFC8174"/> when, and only when, they appear in all capitals, as
    shown here.
        </t>
      </section>
    </section>
    <section numbered="true" toc="default">
      <name>Protocol Operation</name>
      <t>The Babel protocol fully supports dual-stack operation: all data that
represent a neighbour address or a network prefix are tagged by an Address
Encoding (AE), a small integer that identifies the address family (IPv4 or
IPv6) of the address of prefix and describes how it is encoded.  This
extension defines a new AE, called "v4-via-v6", which has the same format as
the existing AE for IPv4 addresses (AE 1).  This new AE is only
allowed in TLVs that carry network prefixes: TLVs that carry an IPv6
neighbour address use one of the normal encodings for IPv6 addresses.</t>
      <section anchor="updates" numbered="true" toc="default">
        <name>Announcing v4-via-v6 Routes</name>
        <t>A Babel node can use a v4-via-v6 announcement to announce an IPv4 route
over an interface that has no assigned IPv4 address.  In order to do so,
it first establishes an IPv6 next-hop address in the usual manner (either
by sending the Babel packet over IPv6, or by including a Next Hop TLV
containing an IPv6 address and using AE 2 or 3); it then sends an Update,
with AE equal to 4 (v4-via-v6) containing the IPv4 prefix being
announced.</t>
        <t>If the outgoing interface has been assigned an IPv4 address, then, in
the interest of maximising compatibility with existing routers, the sender
<bcp14>SHOULD</bcp14> prefer an ordinary IPv4 announcement; even in that case, however,
it <bcp14>MAY</bcp14> send a v4-via-v6 announcement.  A node <bcp14>SHOULD NOT</bcp14> send both
ordinary IPv4 and v4-via-v6 announcements for the same prefix over
a single interface (if the update is sent to a multicast address) or to
a single neighbour (if sent to a unicast address), since doing that
provides no benefit while doubling the amount of routing traffic.</t>
        <t>Updates with infinite metric are retractions: they indicate that
a previously announced route is no longer available.  Retractions do not
require a next hop; therefore, there is no difference between v4-via-v6
retractions and ordinary retractions.  A node <bcp14>MAY</bcp14> send IPv4 retractions
only, or it <bcp14>MAY</bcp14> send v4-via-v6 retractions on interfaces that have not
been assigned an IPv4 address.</t>
      </section>
      <section anchor="receiving-updates" numbered="true" toc="default">
        <name>Receiving v4-via-v6 Routes</name>
        <t>Upon reception of an Update TLV with AE equal to 4 (v4-via-v6) and
finite metric, a Babel node computes the IPv6 next hop, as described in
<xref target="RFC8966" format="default" sectionFormat="of" section="4.6.9"/>.  If no IPv6 next hop exists,
then the Update <bcp14>MUST</bcp14> be ignored.  If an IPv6 next hop exists,
then the node <bcp14>MAY</bcp14> acquire the route being announced, as described in
<xref target="RFC8966" format="default" sectionFormat="of" section="3.5.3"/>; the parameters of the route are
as follows:
</t>

<ul spacing="normal">
          <li>The prefix, plen, router-id, seqno, and metric <bcp14>MUST</bcp14> be computed as for an
IPv4 route, as described in <xref target="RFC8966" format="default" sectionFormat="of" section="4.6.9"/>.</li>
          <li>The next hop <bcp14>MUST</bcp14> be computed as for an IPv6 route, as described in
<xref target="RFC8966" format="default" sectionFormat="of" section="4.6.9"/>. It is taken from the last
preceding Next Hop TLV with an AE field equal to 2 or 3; if no such
entry exists and if the Update TLV has been sent in a Babel packet
carried over IPv6, then the next hop is the network-layer source address
of the packet.</li>
        </ul>
        <t>An Update TLV with a v4-via-v6 AE and metric equal to infinity is
a retraction: it announces that a previously available route is being
retracted.  In that case, no next hop is necessary, and the retraction is
treated as described in <xref target="RFC8966" format="default" sectionFormat="of" section="4.6.9"/>.</t>
        <t>As usual, a node <bcp14>MAY</bcp14> ignore the update, e.g., due to filtering
(see <xref target="RFC8966" format="default" sectionFormat="of" section="C"/>).  If a node cannot install
v4-via-v6 routes, e.g., due to hardware or software limitations, then
routes to an IPv4 prefix with an IPv6 next hop <bcp14>MUST NOT</bcp14> be selected.</t>
      </section>
      <section anchor="requests" numbered="true" toc="default">
        <name>Route and Seqno Requests</name>

	<t>Route and seqno requests are used to request an update for a given
prefix.  Since they are not related to a specific next hop, there is no
semantic difference between IPv4 and v4-via-v6 requests.  Therefore,
a node <bcp14>SHOULD NOT</bcp14> send requests of either kind with the AE field being set
to 4 (v4-via-v6); instead, it <bcp14>SHOULD</bcp14> request IPv4 updates by sending
requests with the AE field being set to 1 (IPv4).</t>
        <t>When receiving requests, AEs 1 (IPv4) and 4 (v4-via-v6) <bcp14>MUST</bcp14> be treated
in the same manner: the receiver processes the request as described in
<xref target="RFC8966" format="default" sectionFormat="of" section="3.8"/>.  If an Update is sent, then it
<bcp14>MAY</bcp14> be an ordinary IPv4 announcement (AE = 1) or a v4-via-v6
announcement (AE = 4), as described in <xref target="updates" format="default"/>, irrespective of which AE was used in the request.</t>
        <t>When receiving a request with AE 0 (wildcard), the receiver <bcp14>SHOULD</bcp14> send
a full route dump, as described in <xref target="RFC8966" format="default" sectionFormat="of" section="3.8.1.1"/>.  Any IPv4 routes contained in the route dump may use
either AE 1 (IPv4) or AE 4 (v4-via-v6), as described <xref target="updates" format="default"/>.</t>
      </section>
      <section numbered="true" toc="default">
        <name>Other TLVs</name>
        <t>The only other TLVs defined by <xref target="RFC8966" format="default"/> that carry an
AE field are Next Hop and IHU.  Next Hop and IHU TLVs <bcp14>MUST NOT</bcp14> carry the
AE 4 (v4-via-v6).</t>
      </section>
    </section>
    <section anchor="icmp" numbered="true" toc="default">
      <name>ICMPv4 and PMTU Discovery</name>
      <t>The Internet Control Message Protocol (ICMPv4, or simply ICMP) <xref target="RFC0792" format="default"/> is a protocol related to IPv4 that is primarily used to
carry diagnostic and debugging information.  ICMPv4 packets may be
originated by end hosts (e.g., the "destination unreachable, port
unreachable" ICMPv4 packet), but they may also be originated by
intermediate routers (e.g., most other kinds of "destination unreachable"
packets).</t>
      <t>Some protocols deployed in the Internet rely on ICMPv4 packets sent by
intermediate routers.  Most notably, Path MTU Discovery (PMTUD) <xref target="RFC1191" format="default"/> is an algorithm executed by end hosts to discover the
maximum packet size that a route is able to carry.  While there exist
variants of PMTUD that are purely end-to-end <xref target="RFC4821" format="default"/>, the
variant most commonly deployed in the Internet has a hard dependency on
ICMPv4 packets originated by intermediate routers: if intermediate routers
are unable to send ICMPv4 packets, PMTUD may lead to persistent
blackholing of IPv4 traffic.</t>
      <t>Due to this kind of dependency, every Babel router that is able to
forward IPv4 traffic <bcp14>MUST</bcp14> be able originate ICMPv4 traffic.  Since the
extension described in this document enables routers to forward IPv4
traffic received over an interface that has not been assigned an IPv4
address, a router implementing this extension <bcp14>MUST</bcp14> be able to originate
ICMPv4 packets even when the outgoing interface has not been assigned an
IPv4 address.</t>
      <t>In such a situation, if a Babel router has an interface that has been
assigned an IPv4 address (other than a loopback address) or if an IPv4
address has been assigned to the router itself (to the "loopback
interface"), then that IPv4 address may be used as the source of
originated ICMPv4 packets.  If no IPv4 address is available, a Babel
router could use the experimental mechanism described in Requirement
R-22 of <xref target="RFC7600" format="default" sectionFormat="of" section="4.8"/>, which consists of
using the dummy address 192.0.0.8 as the source address of originated
ICMPv4 packets.  Note, however, that using the same address on multiple
routers may hamper debugging and fault isolation, e.g., when using the
"traceroute" utility.</t>
    </section>
    <section numbered="true" toc="default">
      <name>Protocol Encoding</name>
      <t>This extension defines the v4-via-v6 AE, whose value is 4. This AE is
solely used to tag network prefixes and <bcp14>MUST NOT</bcp14> be used to tag neighbour
addresses, e.g., in Next Hop or IHU TLVs.</t>
      <t>This extension defines no new TLVs or sub-TLVs.</t>
      <section anchor="prefix-encoding" numbered="true" toc="default">
        <name>Prefix Encoding</name>

	<t>Network prefixes tagged with AE 4 (v4-via-v6) <bcp14>MUST</bcp14> be encoded and
decoded just like prefixes tagged with AE 1 (IPv4), as described in
<xref target="RFC8966" format="default" sectionFormat="of" section="4.1.5"/>.</t>

<t>A new compression state for AE 4 (v4-via-v6) distinct from that of AE
1 (IPv4) is introduced and <bcp14>MUST</bcp14> be used for address compression of
prefixes tagged with AE 4, as described in Sections <xref target="RFC8966" sectionFormat="bare" section="4.5"/> and <xref target="RFC8966" sectionFormat="bare" section="4.6.9"/> of
<xref target="RFC8966" format="default"/></t>
      </section>
      <section numbered="true" toc="default">
        <name>Changes to Existing TLVs</name>
        <t>The following TLVs <bcp14>MAY</bcp14> be tagged with AE 4 (v4-via-v6):

</t>
        <ul spacing="normal">
          <li>Update (Type = 8)</li>
          <li>Route Request (Type = 9)</li>
          <li>Seqno Request (Type = 10)</li>
        </ul>
        <t>As AE 4 (v4-via-v6) is suitable only for network prefixes, IHU
(Type = 5) and Next Hop (Type = 7) TLVs are never sent
with AE 4.  Such (incorrect) TLVs <bcp14>MUST</bcp14> be ignored upon reception.</t>
        <section numbered="true" toc="default">
          <name>Update</name>
          <t>An Update (Type = 8) TLV with AE 4 (v4-via-v6) is constructed as described in
<xref target="RFC8966" format="default" sectionFormat="of" section="4.6.9"/> for AE 1 (IPv4), with the
following specificities:
</t>

<ul spacing="normal">
            <li>The Prefix field is constructed according to
<xref target="prefix-encoding" format="default"/>.</li>

<li>The Next Hop field is built and parsed as described in Sections
<xref target="updates" format="counter"/> and <xref target="receiving-updates" format="counter"/>.</li>
          </ul>
        </section>
        <section numbered="true" toc="default">
          <name>Requests</name>

	  <t>When tagged with the AE 4 (v4-via-v6), Route Request and Seqno Request TLVs
<bcp14>MUST</bcp14> be constructed and decoded as described in
<xref target="RFC8966" format="default" sectionFormat="of" section="4.6"/>, and the network prefixes contained within them
<bcp14>MUST</bcp14> be decoded as described in <xref target="prefix-encoding" format="default"/> (see also
<xref target="requests" format="default"/>).</t>
        </section>
      </section>
    </section>

    <section numbered="true" toc="default">
      <name>Backwards Compatibility</name>
      <t>This protocol extension adds no new TLVs or sub-TLVs.</t>
      <t>This protocol extension uses a new AE.  As discussed in
<xref target="RFC8966" format="default" sectionFormat="of" section="D"/> and specified in the same document, implementations
that do not understand the present extension will silently ignore the various
TLVs that use this new AE.  As a result, incompatible versions will ignore
v4-via-v6 routes.  They will also ignore requests with AE 4 (v4-via-v6), which, as
stated in <xref target="requests" format="default"/>, are not recommended.</t>
      <t>Using a new AE introduces a new compression state, which is used to
      parse the network prefixes.  As this compression state is separate from
      the states of other AEs, it will not interfere with the compression
      state of unextended nodes.</t>
      <t>This extension reuses the next-hop state from AEs 2 and 3 (IPv6) but
makes no changes to the way in which it is updated. Therefore, it causes
no compatibility issues.</t>
      <t>As mentioned in <xref target="updates" format="default"/>, ordinary IPv4 announcements
are preferred to v4-via-v6 announcements when the outgoing interface has
an assigned IPv4 address; doing otherwise would prevent routers that do
not implement this extension from learning the route being announced.</t>
    </section>
    <section numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>IANA has allocated value 4 in the "Babel Address Encodings" registry as
follows:</t>
      <table align="center">
        <thead>
          <tr>
            <th align="left">AE</th>
            <th align="left">Name</th>
            <th align="left">Reference</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left">4</td>
            <td align="left">v4-via-v6</td>
            <td align="left">RFC 9229</td>
          </tr>
        </tbody>
      </table>
    </section>
    <section numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>The extension defined in this document does not fundamentally change
the security properties of the Babel protocol.  However, by allowing IPv4
routes to be propagated across routers that have not been assigned IPv4
addresses, it might invalidate the assumptions made by network
administrators, which could conceivably lead to security issues.</t>
      <t>For example, if an island of IPv4-only hosts is separated from the IPv4
Internet by routers that have not been assigned IPv4 addresses, a network
administrator might reasonably assume that the IPv4-only hosts are
unreachable from the IPv4 Internet.  This assumption is broken if the
intermediary routers implement the extension described in this document,
which might expose the IPv4-only hosts to traffic from the IPv4 Internet.
If this is undesirable, the flow of IPv4 traffic must be restricted by the
use of suitable filtering rules (see <xref target="RFC8966" format="default" sectionFormat="of" section="C"/>)
together with matching packet filters in the data plane.</t>
    </section>
  </middle>
  <back>

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8966.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.0792.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.0826.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4861.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5549.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1191.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4821.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7600.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7404.xml"/>
      </references>
    </references>

    <section numbered="false" toc="default">
      <name>Acknowledgments</name>
      <t>This protocol extension was originally designed, described, and
implemented in collaboration with <contact fullname="Theophile Bastian"/>.  <contact fullname="Margaret Cullen"/>
pointed out the issues with ICMP and helped coin the phrase "v4-via-v6".
The author is also indebted to <contact fullname="Donald Eastlake"/>, <contact fullname="Toke Høiland-Jørgensen"/>,
<contact fullname="David Schinazi"/>, and <contact fullname="Donald Sharp"/>.</t>
    </section>
    
  </back>
</rfc>
