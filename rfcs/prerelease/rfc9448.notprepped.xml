<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-acme-authority-token-tnauthlist-13" number="9448" submissionType="IETF" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true" updates="" obsoletes="" xml:lang="en" version="3">

  <!-- xml2rfc v2v3 conversion 3.16.0 -->
  <front>
    <title abbrev="ACME TNAuthList Authority Token">TNAuthList Profile of Automated Certificate Management Environment (ACME) Authority Token</title>
    <seriesInfo name="RFC" value="9448"/>
    <author initials="C." surname="Wendt" fullname="Chris Wendt">
      <organization>Somos Inc.</organization>
      <address>
        <postal>
          <country>United States of America</country>
        </postal>
        <email>chris-ietf@chriswendt.net</email>
      </address>
    </author>
    <author initials="D." surname="Hancock" fullname="David Hancock">
      <organization>Somos Inc.</organization>
      <address>
        <postal>
          <country>United States of America</country>
        </postal>
        <email>davidhancock.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="M." surname="Barnes" fullname="Mary Barnes">
      <organization>Neustar Inc.</organization>
      <address>
        <postal>
          <country>United States of America</country>
        </postal>
        <email>mary.ietf.barnes@gmail.com</email>
      </address>
    </author>
    <author initials="J." surname="Peterson" fullname="Jon Peterson">
      <organization>Neustar Inc.</organization>
      <address>
        <postal>
	  <extaddr>Suite 570</extaddr>
          <street>1800 Sutter St</street>
          <city>Concord</city>
          <region>CA</region>
	  <code>94520</code>
          <country>United States of America</country>
        </postal>
        <email>jon.peterson@neustar.biz</email>
      </address>
    </author>
    <date year="2023" month="September"/>
    <area>sec</area>
    <workgroup>acme</workgroup>
    <keyword>STIR</keyword>
    <abstract>
      <t>This document defines a profile of the Automated Certificate Management Environment (ACME) Authority Token for the automated and authorized creation of certificates for Voice over IP (VoIP) telephone providers to support Secure Telephone Identity (STI) using the TNAuthList defined by STI certificates.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction">
      <name>Introduction</name>
      <t><xref target="RFC8555"/> describes a mechanism for automating certificate management on the Internet. It enables administrative entities to prove effective control over resources like domain names, and it automates the process of generating and issuing certificates. <xref target="RFC9447"/> extends ACME to provide a general method of extending the authority and authorization of entities to control a resource via a third party Token Authority beyond the certification authority (CA).</t>
      <t>This document is a profile document using the Authority Token mechanism defined in <xref target="RFC9447"/>. It is a profile that  specifically addresses the Secure Telephone Identity Revisited (STIR) problem statement described in <xref target="RFC7340"/>, which identifies the need for Internet credentials that can attest authority for the originator of VoIP calls in order to detect impersonation, which is currently an enabler for common attacks associated with illegal robocalling, voicemail hacking, and swatting.  These credentials are used to sign Personal Assertion Tokens (PASSporTs) <xref target="RFC8225"/>, which can be carried in using protocols such as SIP <xref target="RFC8224"/>.  Currently, the only defined credentials for this purpose are the certificates specified in <xref target="RFC8226"/> using the TNAuthList.  This document defines the use of the TNAuthList Authority Token in the ACME challenge to prove the authoritative use of the contents of the TNAuthList, including a Service Provider Code (SPC), a telephone number, or a set of telephone numbers or telephone number blocks.</t>
      <t>This document also describes the ability for a telephone authority to authorize the creation of CA types of certificates for delegation, as defined in <xref target="RFC9060"/>.</t>
    </section>
    <section anchor="terminology">
      <name>Requirements Language</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
    </section>
    <section anchor="acme-new-order-identifiers-for-tnauthlist">
      <name>ACME New-Order Identifiers for TNAuthList</name>
      <t><xref target="RFC8555" section="7" sectionFormat="of" /> defines the procedure that an ACME client uses to order a new certificate from a CA. The new-order request contains an identifier field that specifies the identifier objects the order corresponds to.  This document defines a new type of identifier object called TNAuthList. A TNAuthList identifier contains the identity information to be populated in the TNAuthList of the new certificate. For the TNAuthList identifier, the new-order request includes a type set to the string "TNAuthList". The value of the TNAuthList identifier <bcp14>MUST</bcp14> be set to the details of the TNAuthList requested.</t>
      <t>The string that represents the TNAuthList <bcp14>MUST</bcp14> be
   constructed using base64url encoding, as described in 
   <xref target="RFC4648" section="5" sectionFormat="of" /> and as defined in <xref target="RFC7515" section="2" sectionFormat="of">JSON Web Signature</xref>.
      The base64url encoding <bcp14>MUST NOT</bcp14> include any padding characters, and the TNAuthList ASN.1 object <bcp14>MUST</bcp14> be encoded using DER encoding rules.</t>
      <t>An example of an ACME order object "identifiers" field containing a TNAuthList certificate is as follows:</t>
      <sourcecode type=""><![CDATA[
 "identifiers": [{"type":"TNAuthList","value":"F83n2a...avn27DN3"}]
]]></sourcecode>
      <t>where the "value" object string represents the arbitrary length of the base64url-encoded string.</t>
      <t>A full new-order request would look as follows:</t>
      <sourcecode type=""><![CDATA[
POST /acme/new-order HTTP/1.1
Host: example.com
Content-Type: application/jose+json

{
  "protected": base64url({
    "alg": "ES256",
    "kid": "https://example.com/acme/acct/evOfKhNU60wg",
    "nonce": "5XJ1L3lEkMG7tR6pA00clA",
    "url": "https://example.com/acme/new-order"
  }),
  "payload": base64url({
    "identifiers": [{"type":"TNAuthList","value":"F83n...n27DN3"}],
    "notBefore": "2021-01-01T00:00:00Z",
    "notAfter": "2021-01-08T00:00:00Z"
  }),
  "signature": "H6ZXtGjTZyUnPeKn...wEA4TklBdh3e454g"
}
]]></sourcecode>
      <t>On receiving a valid new-order request, the ACME server creates an authorization object (<xref target="RFC8555" section="7.1.4" sectionFormat="comma" />), containing the challenge that the ACME client must satisfy to demonstrate authority for the identifiers specified by the new order (in this case, the TNAuthList identifier). The CA adds the authorization object URL to the "authorizations" field of the order object and returns the order object to the ACME client in the body of a 201 (Created) response.</t>
      <sourcecode type=""><![CDATA[
HTTP/1.1 201 Created
Content-Type: application/json
Replay-Nonce: MYAuvOpaoIiywTezizk5vw
Location: https://example.com/acme/order/1234

{
  "status": "pending",
  "expires": "2022-01-08T00:00:00Z",

  "notBefore": "2022-01-01T00:00:00Z",
  "notAfter": "2022-01-08T00:00:00Z",
  "identifiers":[{"type":"TNAuthList",
                 "value":"F83n2a...avn27DN3"}],

  "authorizations": [
   "https://example.com/acme/authz/1234"
  ],
  "finalize": "https://example.com/acme/order/1234/finalize"
}
]]></sourcecode>
    </section>
    <section anchor="tnauthlist-identifier-authorization">
      <name>TNAuthList Identifier Authorization</name>
      <t>On receiving the new-order response, the ACME client queries the referenced authorization object to obtain the challenges for the identifier contained in the new-order request, as shown in the following example request and response.</t>
      <sourcecode type=""><![CDATA[
POST /acme/authz/1234 HTTP/1.1
    Host: example.com
    Content-Type: application/jose+json

    {
      "protected": base64url({
        "alg": "ES256",
        "kid": " https://example.com/acme/acct/evOfKhNU60wg",
        "nonce": "uQpSjlRb4vQVCjVYAyyUWg",
        "url": "https://example.com/acme/authz/1234"
      }),
      "payload": "",
      "signature": "nuSDISbWG8mMgE7H...QyVUL68yzf3Zawps"
    }
]]></sourcecode>
      <sourcecode type=""><![CDATA[
HTTP/1.1 200 OK
Content-Type: application/json
Link: <https://example.com/acme/some-directory>;rel="index"

{
  "status": "pending",
  "expires": "2022-01-08T00:00:00Z",

  "identifier": {
    "type":"TNAuthList",
    "value":"F83n2a...avn27DN3"
  },

  "challenges": [
    {
      "type": "tkauth-01",
      "tkauth-type": "atc",
      "token-authority": "https://authority.example.org",
      "url": "https://example.com/acme/chall/prV_B7yEyA4",
      "token": "IlirfxKKXAsHtmzK29Pj8A"
    }
  ]
}
]]></sourcecode>
      <t>When processing a certificate order containing an identifier of type "TNAuthList", a CA uses the Authority Token challenge type of "tkauth-01" with a "tkauth-type" of "atc" in <xref target="RFC9447"/> to verify that the requesting ACME client has authenticated and authorized control over the requested resources represented by the "TNAuthList" value.</t>
      <t>The challenge "token-authority" parameter is only used in cases where the VoIP telephone network requires the CA to identify the Token Authority. This is currently not the case for the Signature-based Handling of Asserted information using toKENs (SHAKEN) <xref target="ATIS-1000080"/> certificate framework governance but may be used by other frameworks. If a "token-authority" parameter is present, then the ACME client <bcp14>MAY</bcp14> use the "token-authority" value to identify the URL representing the Token Authority that will provide the TNAuthList Authority Token response to the challenge. If the "token-authority" parameter is not present, then the ACME client <bcp14>MUST</bcp14> identify the Token Authority based on locally configured information or local policies.</t>
      <t>The ACME client responds to the challenge by posting the TNAuthList Authority Token to the challenge URL identified in the returned ACME authorization object, an example of which follows:</t>
      <sourcecode type=""><![CDATA[
POST /acme/chall/prV_B7yEyA4 HTTP/1.1
Host: boulder.example.com
Content-Type: application/jose+json

{
  "protected": base64url({
  "alg": "ES256",
  "kid": "https://example.com/acme/acct/evOfKhNU60wg",
  "nonce": "Q_s3MWoqT05TrdkM2MTDcw",
  "url": "https://boulder.example.com/acme/authz/asdf/0"
  }),
  "payload": base64url({
  "tkauth": "DGyRejmCefe7v4N...vb29HhjjLPSggwiE"
  }),
  "signature": "9cbg5JO1Gf5YLjjz...SpkUfcdPai9uVYYQ"
}
]]></sourcecode>
      <t>The "tkauth" field is defined as a new field in the challenge object specific to the tkauth-01 challenge type that should contain the TNAuthList Authority Token defined in the next section.</t>
    </section>
    <section anchor="tnauthlist-authority-token">
      <name>TNAuthList Authority Token</name>
      <t>The TNAuthList Authority Token is a profile instance of the ACME Authority Token defined in <xref target="RFC9447"/>.</t>
<t>The TNAuthList Authority Token protected header <bcp14>MUST</bcp14> comply with "Request Authentication" (<xref target="RFC8555" section="6.2" sectionFormat="of"/>).</t>
      <t>The TNAuthList Authority Token Payload <bcp14>MUST</bcp14> include the mandatory claims "exp", "jti", and "atc" and <bcp14>MAY</bcp14> include the optional claims defined for the Authority Token detailed in the next subsections.</t>
      <section anchor="iss-claim">
        <name>"iss" Claim</name>
        <t>The "iss" claim is an optional claim defined in <xref target="RFC7519" section="4.1.1" sectionFormat="comma" />.  It can be used as a URL identifying the Token Authority that issued the TNAuthList Authority Token beyond the "x5u" or other header claims that identify the location of the certificate or certificate chain of the Token Authority used to validate the TNAuthList Authority Token.</t>
      </section>
      <section anchor="exp-claim">
        <name>"exp" Claim</name>
        <t>The "exp" claim, defined in <xref target="RFC7519" section="4.1.4" sectionFormat="comma" />, <bcp14>MUST</bcp14> be included and contains the DateTime value of the ending date and time that the TNAuthList Authority Token expires.</t>
      </section>
      <section anchor="jti-claim">
        <name>"jti" Claim</name>
        <t>The "jti" claim, defined in <xref target="RFC7519" section="4.1.7" sectionFormat="comma" />, <bcp14>MUST</bcp14> be included and contains a unique identifier for this TNAuthList Authority Token transaction.</t>
      </section>
      <section anchor="atc-claim">
        <name>"atc" Claim</name>
        <t>The "atc" claim <bcp14>MUST</bcp14> be included and is defined in <xref target="RFC9447"/>.  It contains a JSON object with the following elements:</t>
        <ul spacing="normal">
          <li>a "tktype" key with a string value equal to "TNAuthList" to represent a TNAuthList profile of the Authority Token <xref target="RFC9447"/> defined by this document. "tktype" is a required key and <bcp14>MUST</bcp14> be included.</li>
          <li>a "tkvalue" key with a string value equal to the base64url encoding of the TNAuthList certificate extension ASN.1 object using DER encoding rules. "tkvalue" is a required key and <bcp14>MUST</bcp14> be included.</li>
          <li>a "ca" key with a boolean value set to either true when the requested certificate is allowed to be a CA cert for delegation uses or false when the requested certificate is not intended to be a CA cert, only an end-entity certificate. "ca" is an optional key; if not included, the "ca" value is considered false by default.</li>
          <li>a "fingerprint" key constructed as defined in <xref target="RFC8555" section="8.1" sectionFormat="comma" />, corresponding to the computation of the "Thumbprint" step using the ACME account key credentials. "fingerprint" is a required key and <bcp14>MUST</bcp14> be included.</li>
        </ul>
        <t>An example of the TNAuthList Authority Token is as follows:</t>
        <sourcecode type=""><![CDATA[
{
  "protected": base64url({
    "typ":"JWT",
    "alg":"ES256",
    "x5u":"https://authority.example.org/cert"
  }),
  "payload": base64url({
    "iss":"https://authority.example.org",
    "exp":1640995200,
    "jti":"id6098364921",
    "atc":{"tktype":"TNAuthList",
      "tkvalue":"F83n2a...avn27DN3",
      "ca":false,
      "fingerprint":"SHA256 56:3E:CF:AE:83:CA:4D:15:B0:29:FF:1B:71:
       D3:BA:B9:19:81:F8:50:9B:DF:4A:D4:39:72:E2:B1:F0:B9:38:E3"}
  }),
  "signature": "9cbg5JO1Gf5YLjjz...SpkUfcdPai9uVYYQ"
}
]]></sourcecode>
      </section>
      <section anchor="acquiring-the-token-from-the-token-authority">
        <name>Acquiring the Token from the Token Authority</name>
        <t>Following <xref target="RFC9447" section="5" sectionFormat="comma" />, the Authority Token should be acquired using a RESTful HTTP POST transaction as follows:</t>
        <sourcecode type=""><![CDATA[
  POST /at/account/:id/token HTTP/1.1
  Host: authority.example.org
  Content-Type: application/json
  ]]></sourcecode>
        <t>The request will pass the account identifier as a string in the request parameter "id".  This string will be managed as an identifier specific to the Token Authority's relationship with a Communications Service Provider (CSP). There is assumed to also be a corresponding authentication procedure that can be verified for the success of this transaction, for example, an HTTP authorization header containing valid authorization credentials, as defined in <xref target="RFC9110" section="11.6.2" sectionFormat="comma" />.</t>
        <t>The body of the POST request <bcp14>MUST</bcp14> contain a JSON object with key value pairs corresponding to values that are requested as the content of the claims in the issued token. As an example, the body <bcp14>SHOULD</bcp14> contain a JSON object as follows:</t>
        <sourcecode type=""><![CDATA[
 {
   "tktype":"TNAuthList",
   "tkvalue":"F83n2a...avn27DN3",
   "ca":false,
   "fingerprint":"SHA256 56:3E:CF:AE:83:CA:4D:15:B0:29:FF:1B:71:D3
     :BA:B9:19:81:F8:50:9B:DF:4A:D4:39:72:E2:B1:F0:B9:38:E3"
 }
]]></sourcecode>
        <t>If successful, the response to the POST request returns a 200 (OK) with a JSON body that contains, at a minimum, the TNAuthList Authority Token as a JSON object with a key of "token" and the base64url-encoded string representing the atc token. JSON is easily extensible, so users of this specification may want to pass other pieces of information relevant to a specific application.</t>
        <t>An example of a successful response would be as follows:</t>
        <sourcecode type=""><![CDATA[
HTTP/1.1 200 OK
Content-Type: application/json

{"token": "DGyRejmCefe7v4N...vb29HhjjLPSggwiE"}
]]></sourcecode>
        <t>If the request is not successful, the response should indicate the error condition.  Specifically, for the case that the authorization credentials are invalid or if the account identifier provided does not exist, the response code <bcp14>MUST</bcp14> be 403 (Forbidden). Other 4xx and 5xx responses <bcp14>MUST</bcp14> follow standard HTTP error condition conventions <xref target="RFC9110"/>.</t>
      </section>
      <section anchor="token-authority-responsibilities">
        <name>Token Authority Responsibilities</name>
        <t>When creating the TNAuthList Authority Token, the Token Authority <bcp14>MUST</bcp14> validate that the information contained in the ASN.1 TNAuthList accurately represents the service provider code (SPC) or telephone number (TN) resources the requesting party is authorized to represent based on their pre-established, verified, and secure relationship between the Token Authority and the requesting party. Note that the fingerprint in the token request is not meant to be verified by the Token Authority but rather is meant to be signed as part of the token so that the party that requests the token can, as part of the challenge response, allow the ACME server to validate that the token requested and used came from the same party that controls the ACME client.</t>
      </section>
      <section anchor="scope-of-the-tnauthlist">
        <name>Scope of the TNAuthList</name>
        <t>Because this specification specifically involves the TNAuthList defined in <xref target="RFC8226"/>, which involves SPC, telephone number ranges, and individual telephone numbers, the client may also request an Authority Token with some subset of its own authority as the TNAuthList provided in the "tkvalue" element in the "atc" JSON object. Generally, the scope of authority representing a CSP is represented by a particular SPC (e.g., in North America, an operating company number (OCN) or service provider identifier (SPID)). Based on number allocations, that provider is also generally associated
	with a particular set of different telephone number ranges and/or telephone numbers.  The TNAuthList can be constructed to define a limited scope of the TelephoneNumberRanges or TelephoneNumbers (<xref target="RFC8226" sectionFormat="comma" section="9"/>) either associated with an SPC or with the scope of telephone number ranges or telephone numbers the client has authority over.</t>
        <t>As recommended in the Security Considerations section in <xref target="RFC9447"/>, an Authority Token can either have a scope that attests all of the resources that a client is eligible to receive certificates for or potentially a more limited scope that is intended to capture only those resources for which a client will receive a certificate from a particular certification authority.  Any certification authority that sees an Authority Token can learn information about the resources a client can claim.  In cases where this incurs a privacy risk, Authority Token scopes should be limited to only the resources that will be attested by the requested ACME certificate.</t>
      </section>
    </section>
    <section anchor="validating-the-tnauthlist-authority-token">
      <name>Validating the TNAuthList Authority Token</name>
      <t>Upon receiving a response to the challenge, the ACME server <bcp14>MUST</bcp14> perform the following steps to determine the validity of the response.</t>
      <ol spacing="normal" type="1">
        <li>Verify that the value of the "atc" claim is a well-formed JSON object containing the mandatory key values.</li>
        <li>If there is an "x5u" parameter, verify the "x5u" parameter is an HTTPS URL with a reference to a certificate representing the trusted issuer of Authority Tokens for the ecosystem.</li>
        <li>If there is an "x5c" parameter, verify the certificate array contains a certificate representing the trusted issuer of Authority Tokens for the ecosystem.</li>
        <li>Verify the TNAuthList Authority Token signature using the public key of the certificate referenced by the token's "x5u" or "x5c" parameter.</li>
        <li>Verify that "atc" claim contains a "tktype" identifier with the value "TNAuthList".</li>
        <li>Verify that the "atc" claim "tkvalue" identifier contains the equivalent base64url-encoded TNAuthList certificate extension string value as the identifier specified in the original challenge.</li>
        <li>Verify that the remaining claims are valid (e.g., verify that token has not expired).</li>
        <li>Verify that the "atc" claim "fingerprint" is valid and matches the account key of the client making the request.</li>
        <li>Verify that the "atc" claim "ca" identifier boolean corresponds to the CA boolean in the Basic Constraints extension in the Certificate Signing Request (CSR) for either CA certificate or end-entity certificate.</li>
      </ol>
      <t>If all steps in the token validation process pass, then the ACME server <bcp14>MUST</bcp14> set the challenge object "status" to "valid". If any step of the validation process fails, the "status" in the challenge object <bcp14>MUST</bcp14> be set to "invalid".</t>
    </section>
    <section anchor="using-acme-issued-certificates-with-json-web-signature">
      <name>Using ACME-Issued Certificates with JSON Web Signature</name>
      <t>JSON Web Signature (JWS) <xref target="RFC7515"/> objects can include an "x5u" header parameter to refer to a certificate that is used to validate the JWS signature.  For example, the STIR PASSporT framework <xref target="RFC8225"/> uses "x5u" to indicate the STIR certificate used to validate the PASSporT JWS object.  The URLs used in "x5u" are expected to provide the required certificate in response to a GET request, not a POST-as-GET, as required for the "certificate" URL in the ACME order object.  Thus, the current mechanism generally requires the ACME client to download the certificate and host it on a public URL to make it accessible to relying parties.  This section defines an optional mechanism for the certification authority (CA) to host the certificate directly and provide a URL that the ACME client owner can directly reference in the "x5u" of their signed PASSporTs.</t>
      <t>As described in <xref target="RFC8555" section="7.4" sectionFormat="of"/>, when the certificate is ready for making a "finalize" request, the server will return a 200 (OK) with the updated order object.  In this response, an ACME server can add a newly defined field called "x5u" that can pass this URL to the ACME client for usage in generated PASSporTs as a publicly available URL for PASSporT validation.</t>
      <dl>
        <dt>x5u (optional, string):</dt>
        <dd>
          <t>a URL that can be used to reference the certificate in the "x5u" parameter of a JWS object <xref target="RFC7515"/></t>
        </dd>
      </dl>
      <t>The publishing of the certificates at the new "x5u" URL should follow the GET request requirement as mentioned above and should be consistent with the timely publication according to the durations of the certificate life cycle.</t>
      <t>The following is an example of the use of "x5u" in the response when the certificate status is "valid".</t>
      <sourcecode type=""><![CDATA[
HTTP/1.1 200 OK
Content-Type: application/json
Replay-Nonce: CGf81JWBsq8QyIgPCi9Q9X
Link: <https://example.com/acme/directory>;rel="index"
Location: https://example.com/acme/order/TOlocE8rfgo

{
  "status": "valid",
  "expires": "2016-01-20T14:09:07.99Z",

  "notBefore": "2016-01-01T00:00:00Z",
  "notAfter": "2016-01-08T00:00:00Z",

  "identifiers": [
    "type":"TNAuthList",
    "value":"F83n2a...avn27DN3"
  ],

  "authorizations": ["https://sti-ca.com/acme/authz/1234"],

  "finalize": "https://example.com/acme/order/TOlocE8rfgo/finalize",

  "certificate": "https://example.com/acme/cert/mAt3xBGaobw",

  "x5u": "https://example.com/cert-repo/giJI53km23.pem"
}
]]></sourcecode>
    </section>
    <section anchor="usage-considerations">
      <name>Usage Considerations</name>
      <section anchor="large-number-of-non-contiguous-tnauthlist-values">
        <name>Large Number of Noncontiguous TNAuthList Values</name>
        <t>There are many scenarios and reasons to have various combinations of SPCs, TNs, and TN ranges.  <xref target="RFC8226"/> has provided a somewhat unbounded set of combinations.  It's possible that a complex noncontiguous set of telephone numbers are being managed by a CSP.  Best practice may be simply to split a set of noncontiguous numbers under management into multiple STI certificates to represent the various contiguous parts of the greater noncontiguous set of TNs, particularly if the length of the set of values in an identifier object grows to be too large.</t>
      </section>
    </section>

    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <t>Per this document, IANA has added a new identifier object type to the "ACME Identifier Types" registry defined in <xref target="RFC8555" section="9.7.7" sectionFormat="of" />.</t>
      <table>
	<thead>
	  <tr>
	    <th>Label</th>
	    <th>Reference</th>
	  </tr>
	</thead>
	<tbody>
	  <tr>
	    <td>TNAuthList</td>
	    <td>RFC 9448</td>
	  </tr>
	</tbody>
      </table>
    </section>    
    <section anchor="security_considerations">
      <name>Security Considerations</name>
      <t>The token represented by this document has the credentials to represent the scope of a telephone number, a block of telephone numbers, or an entire set of telephone numbers represented by an SPC. The creation, transport, and any storage of this token <bcp14>MUST</bcp14> follow the strictest of security best practices beyond the recommendations of the use of encrypted transport protocols in this document to protect it from getting in the hands of bad actors with illegitimate intent to impersonate telephone numbers.</t>
      <t>This document inherits the security properties of <xref target="RFC9447"/>. Implementations should follow the best practices identified in <xref target="RFC8725"/>.</t>
      <t>This document only specifies SHA256 for the fingerprint hash. However, the syntax of the fingerprint object would permit other algorithms if, due to concerns about algorithmic agility, a more robust algorithm were required at a future time.  Future specifications can define new algorithms for the fingerprint object as needed.</t>
    </section>

  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>

<reference anchor='RFC9447' target='https://www.rfc-editor.org/info/rfc9447'>
<front>
<title>Automated Certificate Management Environment (ACME) Challenges Using an Authority Token</title>
<author initials='J' surname='Peterson' fullname='Jon Peterson'>
<organization />
</author>
<author initials='M' surname='Barnes' fullname='Mary Barnes'>
<organization />
</author>
<author initials='D' surname='Hancock' fullname='David Hancock'>
<organization />
</author>
<author initials='C' surname='Wendt' fullname='Chris Wendt'>
<organization />
</author>
<date year='2023' month='September'/>
</front>
<seriesInfo name="RFC" value="9447"/>
<seriesInfo name="DOI" value="10.17487/RFC9447"/>
</reference>

<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9110.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7515.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7519.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8226.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8555.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8725.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9060.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="ATIS-1000080" target="https://access.atis.org/apps/group_public/download.php/69428/ATIS-1000080.v005.pdf">
          <front>
            <title>Signature-based Handling of Asserted information using toKENs (SHAKEN): Governance Model and Certificate Management</title>
            <author>
              <organization>ATIS</organization>
            </author>
            <date year="2022" month="December"/>
          </front>
	  <refcontent>ATIS-1000080.v005</refcontent>
        </reference>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7340.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8224.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8225.xml"/>
      </references>
    </references>
    <section anchor="acknowledgements" numbered="false">
      <name>Acknowledgements</name>
      <t>We would like to thank <contact fullname="Richard Barnes"/> and <contact fullname="Russ Housley"/> for valuable contributions to this document.</t>
    </section>
  </back>
</rfc>
