<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE rfc [
 <!ENTITY nbsp    "&#160;">
 <!ENTITY zwsp   "&#8203;">
 <!ENTITY nbhy   "&#8209;">
 <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" 
category="std" 
consensus="true" 
docName="draft-ietf-regext-rdap-redacted-16" 
number="9537" 
ipr="trust200902" 
obsoletes="" 
updates="" 
submissionType="IETF" 
xml:lang="en" 
tocInclude="true" 
tocDepth="4" 
sortRefs="true" 
symRefs="true" 
version="3">

  <front>
    <title abbrev="Redacted Fields in RDAP">Redacted Fields in the Registration Data Access Protocol
    (RDAP) Response</title>
    <seriesInfo name="RFC" value="9537"/>
    <author fullname="James Gould" initials="J." surname="Gould">
      <organization>VeriSign, Inc.</organization>
      <address>
        <postal>
          <street>12061 Bluemont Way</street>
          <city>Reston</city>
          <region>VA</region>
          <code>20190</code>
          <country>United States of America</country>
        </postal>
        <email>jgould@verisign.com</email>
        <uri>http://www.verisign.com</uri>
      </address>
    </author>
    <author fullname="David Smith" initials="D." surname="Smith">
      <organization>VeriSign, Inc.</organization>
      <address>
        <postal>
          <street>12061 Bluemont Way</street>
          <city>Reston</city>
          <region>VA</region>
          <code>20190</code>
          <country>United States of America</country>
        </postal>
        <email>dsmith@verisign.com</email>
        <uri>http://www.verisign.com</uri>
      </address>
    </author>
    <author fullname="Jody Kolker" initials="J." surname="Kolker">
      <organization>GoDaddy Inc.</organization>
      <address>
        <postal>
          <street>14455 N. Hayden Rd., #219</street>
          <city>Scottsdale</city>
          <region>AZ</region>
          <code>85260</code>
          <country>United States of America</country>
        </postal>
        <email>jkolker@godaddy.com</email>
        <uri>http://www.godaddy.com</uri>
      </address>
    </author>
    <author fullname="Roger Carney" initials="R." surname="Carney">
      <organization>GoDaddy Inc.</organization>
      <address>
        <postal>
          <street>14455 N. Hayden Rd., #219</street>
          <city>Scottsdale</city>
          <region>AZ</region>
          <code>85260</code>
          <country>United States of America</country>
        </postal>
        <email>rcarney@godaddy.com</email>
        <uri>http://www.godaddy.com</uri>
      </address>
    </author>
    <date year="2024" month="March"/>
    <area>art</area>
    <workgroup>regext</workgroup>

    <keyword>Redacted</keyword>
    <keyword>Redaction</keyword>
    <keyword>Redacting</keyword>
    <keyword>JSONPath</keyword>

    <abstract>
      <t>This document describes a Registration Data Access     
Protocol (RDAP) extension for specifying methods of
      redaction of RDAP responses and explicitly identifying redacted RDAP
      response fields, using JSONPath as the default expression language.</t>
    </abstract>
  </front>
  <middle>
    <section>
      <name>Introduction</name>
      <t>This document describes an RDAP extension for specifying methods of
      redaction of RDAP responses and explicitly identifying redacted RDAP
      response fields, using JSONPath as the default expression language.  A redacted RDAP field is one that has data
        removed or replaced in the RDAP response due to server policy, such as the lack of client privilege to
        receive the field. This extension can be used to identify
      redacted RDAP fields in any RDAP object class, as defined in <xref target="RFC9083"/>, or
      RDAP fields defined in RDAP extensions.  Because an RDAP response may exclude a field due to either the lack of data
      or the lack of RDAP client privileges,
      this extension is used to explicitly specify which RDAP fields are not included in the RDAP response due
      to redaction.  It thereby provides a capability for disambiguation
      between redaction and other possible reasons for data or field absence.</t>
      <t>In <xref target="RFC9082"/>, RDAP supports both lookup and search queries, where a lookup query responds
        with a single object and a search query responds with a list of objects.
        This document applies to redaction of a single object of a lookup response and in each of the objects of a search response.</t>
      <t>JSONPath, as defined in <xref target="RFC9535"/>, is used
      as the default expression language to reference RDAP fields that have been redacted.
      The redacted JSON fields will be removed, have empty values, have partial values, or be replaced in the RDAP response.
      JSON is defined by <xref target="RFC8259"/>.</t>
    </section>
    <section>
      <name>Conventions Used in This Document</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
      <t>The JSON examples include extra line breaks and empty space.  For
        instance, the JSONPath expressions are broken out into multiple
      lines when required for illustration.</t>
      <t>The JSONPath expressions in the examples are for illustration
   purposes with single-role entities, and the exact expressions to be used
   by the server are out of scope.</t>
    </section>
    <section anchor="redaction-methods">
      <name>Redaction Methods</name>
      <t>Redaction in RDAP can be handled in multiple ways. The resulting redacted RDAP response <bcp14>MUST</bcp14> comply with the format defined in the RDAP RFCs, such as <xref target="RFC9083"/> and updates.
      The use of placeholder text for the values of the RDAP fields, such as "XXXX", 
      <bcp14>MUST NOT</bcp14> be used for redaction, since the placeholder text value may not match the format requirements of each of the RDAP fields, which could provide an inconsistent and unreliable redaction signal.  
      This section covers the redaction
        methods that can be used with the redaction signaling defined in <xref target="redacted-member"/>.</t>
      <t>RDAP responses, as defined in <xref target="RFC9083"/>, include
      a mix of JSON objects and JSON arrays, where JSON arrays are heavily used for entity objects with <xref target="RFC7095">jCard</xref>.
      jCard is a JSON representation of <xref target="RFC6350">vCard</xref> that
      inherits its dependency on arrays.
      An example is the vCard "ADR" property <xref target="RFC6350"/>, or the jCard
    "adr" property <xref target="RFC7095"/>, which defines a sequence of
    address components. According to <xref target="RFC6350"/>, when an "ADR" property component value is missing,
      the associated component separator <bcp14>MUST</bcp14> still be specified.
      jCard extends the use of arrays with
      each individual vCard property being represented by an array of three fixed elements, followed by one or more additional elements.
      The mix of JSON objects and JSON arrays impacts the methods used for redaction in RDAP.</t>
      <t>The redaction of RDAP fields fall into the four categories defined in the following subsections.</t>
      <section anchor="redaction-removal">
        <name>Redaction by Removal Method</name>
        <t>The Redaction by Removal Method is when the RDAP field is removed from the RDAP response, which is the default method.
        The Redaction by Removal Method can be done for all RDAP response fields except for response fields using the position in an array to signal the redacted field (e.g., the JSON arrays used with jCard).
        RDAP extensions, such as the one described in <xref target="I-D.ietf-regext-rdap-jscontact">"Using JSContact in Registration Data Access Protocol (RDAP) JSON Responses"</xref>, do not have a dependency on the use of positional JSON arrays and
        are therefore suited for the Redaction by Removal Method.</t>
        <t>When an RDAP object is redacted
        by removal, all of the RDAP object's child fields are also removed.  Only the redacted RDAP object needs to be referenced in the list of redacted fields,
        as defined in <xref target="redacted-member"/>.</t>
        <t>An example of redacting an RDAP object is removing the administrative contact
        from the RDAP response and including the following "redacted" member:</t>
        <figure anchor="redacted-admin-contact">
          <name>Redacted Administrative Contact</name>
          <sourcecode type="json">
"redacted": [
  {
    "name": {
      "description": "Administrative Contact"
    },
    "prePath": "$.entities[?(@.roles[0]=='administrative')]",
    "method": "removal"
  }
]
  </sourcecode>
        </figure>
        <t>The Redaction by Removal Method <bcp14>MUST NOT</bcp14> be used to remove an element of an array where the position of the element in the array determines semantic meaning.
          For example, removal of an individual data field in jCard will result in a non-conformant jCard array definition.</t>
      </section>
      <section anchor="redaction-empty-value">
        <name>Redaction by Empty Value Method</name>
        <t>The Redaction by Empty Value Method is when a redacted field is not removed but its value is set to an empty value, such as "" for a jCard
        text ("text") property or null for a non-text property.  The empty jCard values ("" or null) are referenced in the "redacted"
        member in place of the jCard property name in an array, such as referencing the "fn" jCard property value at position 3 instead of referencing the "fn"
        jCard property name at position 0.
        The Redaction by Empty Value Method <bcp14>MUST</bcp14> be used only when redacting JSON response fields that use the position in an
        array to signal the redacted field (e.g., jCard arrays).
        Optional jCard properties <bcp14>MUST</bcp14>
        use the <xref target="redaction-removal">Redaction by Removal Method</xref> to redact the entire property.
        The required jCard "fn" property, defined in <xref target="RFC6350" section="6.2.1" sectionFormat="of">vCard</xref>, <bcp14>MUST</bcp14> use the Redaction by Empty Value Method to redact the property value.
        Removing the "fn" property would violate <xref target="RFC6350">vCard</xref>, and removing the property value
        would violate the fixed array positions defined in jCard.</t>
	        <figure anchor="redacted-fn-empty-value">
          <name>Redacted "fn" jCard Property Using the Redaction by Empty Value Method</name>
          <sourcecode type="json">
[
  "fn",
  {},
  "text",
  ""
]
  </sourcecode>
        </figure>
        <t>An example of the "redacted" member for the redacted "fn" jCard property value, which is array position 3:</t>
        <figure anchor="redacted-fn-array-pos">
          <name>Redacted Registrant Name Using an Array Position</name>
          <sourcecode type="json">
"redacted": [
  {
    "name": {
      "description": "Registrant Name"
    },
    "postPath": "$.entities[?(@.roles[0]=='registrant')].
      vcardArray[1][?(@[0]=='fn')][3]",
    "pathLang": "jsonpath",
    "method": "emptyValue",
    "reason": {
      "description": "Server policy"
    }
  }
]
  </sourcecode>
        </figure>
      </section>
      <section anchor="redaction-partial-value">
        <name>Redaction by Partial Value Method</name>
        <t>The Redaction by Partial Value Method is when a redacted field is not removed but its value has a portion of the data removed, such as for the "label" or "fn" jCard
        properties.  The partial values are referenced in the "redacted"
        member in place of the property name in an array, such as referencing the "fn" jCard property value at position 3 instead of referencing the "fn"
        jCard property name at position 0.
        The Redaction by Partial Value Method <bcp14>SHOULD</bcp14> be used only when redacting JSON response fields that use a formatted value, where a portion of the value is removed.  
	</t>
        <t>An example of the "label" jCard property in <xref target="RFC7095" sectionFormat="of" section="3.3.1.3"/> that redacts "123 Maple Ave\nSuite 901\n":</t>
        <figure anchor="redacted-home-address-label-value">
          <name>Redacted "label" jCard Property</name>
          <sourcecode type="json">
["adr",
  {
    "type":"home",
    "label":"Vancouver\nBC\n1239\n"
  },
  "text",
  [
    "", "", "", "", "", "", ""
  ]
]
  </sourcecode>
        </figure>
        <t>An example of the "redacted" member for the redacted "label" jCard property value, based on <xref target="RFC7095" sectionFormat="of" section="3.3.1.3"/>:</t>
        <figure anchor="redacted-home-address-label">
          <name>Redacted Label Using the Redaction by Partial Value Method</name>
          <sourcecode type="json">
"redacted": [
  {
    "name": {
      "description": "Home Address Label"
    },
    "postPath": "$.vcardArray[1][?(@[0]=='adr')][1].label",
    "pathLang": "jsonpath",
    "method": "partialValue",
    "reason": {
      "description": "Server policy"
    }
  }
]
  </sourcecode>
        </figure>
      </section>
      <section anchor="redaction-replacement-value">
        <name>Redaction by Replacement Value Method</name>
        <t>The Redaction by Replacement Value Method is when a redacted field is not removed but its value is replaced with a different value, such as protecting the "email" jCard
        property value with an anonymized email "text" value or the use of an alternative "uri" value to a web form.  Replacing a property value is a form of redaction, since it protects the
        true property value for privacy reasons.</t>
        <figure anchor="redacted-email-anonymized-value">
          <name>Redacted "email" jCard Property Using the Redaction by Replacement Value Method with an Anonymized Email</name>
          <sourcecode type="json">
[
  "email",
  {},
  "text",
  "anonymized123@example.com"
]
  </sourcecode>
        </figure>
        <figure anchor="redacted-email-replacement-anonymized">
          <name>Redacted Email Using a Replacement Value with an Anonymized "text" Value</name>
          <sourcecode type="json">
"redacted": [
  {
    "name": {
      "description": "Registrant Email"
    },
    "postPath": "$.entities[?(@.roles[0]=='registrant')].
               vcardArray[1][?(@[0]=='email')][3]",
    "pathLang": "jsonpath",
    "method": "replacementValue",
  }
]
  </sourcecode>
        </figure>
        <figure anchor="redacted-email-links-related">
          <name>Redacted "email" jCard Property Using the Redaction by Replacement Value Method with a "contact-uri" jCard Property to a Web Form</name>
          <sourcecode type="json">
[
  "contact-uri",
  {},
  "uri",
  "https://email.example.com/123"
]
  </sourcecode>
        </figure>
        <figure anchor="redacted-email-replacement-links-related">
          <name>Redacted Email Using a Replacement Value with a "contact-uri" jCard Property to a Web Form</name>
          <sourcecode type="json">
"redacted": [
  {
    "name": {
      "description": "Registrant Email"
    },
    "prePath": "$.entities[?(@.roles[0]=='registrant')].
               vcardArray[1][?(@[0]=='email')]",
    "replacementPath": "$.entities[?(@.roles[0]=='registrant')].
               vcardArray[1][?(@[0]=='contact-uri')]",
    "pathLang": "jsonpath",
    "method": "replacementValue",
  }
]
  </sourcecode>
        </figure>
      </section>
    </section>
    <section anchor="redacted-rdap-response">
      <name>Redacted RDAP Response</name>
      <section anchor="rdap-conformance">
        <name>RDAP Conformance</name>
        <t>RDAP responses that contain values described in this document <bcp14>MUST</bcp14>
           indicate conformance with this specification by including an
           "rdapConformance" <xref target="RFC9083"/> value of "redacted".	   
           The "redacted" extension identifier is described in <xref target="rdap-extensions-registry"/>.</t>
        <figure anchor="rdapConformance-with-redacted">
          <name>"rdapConformance" with Redacted Extension</name>
          <sourcecode type="json">
"rdapConformance": [
  "rdap_level_0",
  "redacted"
]
  </sourcecode>
        </figure>
      </section>
      <section anchor="redacted-member">
        <name>"redacted" Member</name>
        <t>The "redacted" member <bcp14>MUST</bcp14> be added to the RDAP response when
        there is one or more redacted fields.  The "redacted" member is included as a member of the object instance in a lookup response, such as the object classes defined in <xref target="RFC9083"/>, and
        as a member of the object instances in a search response.</t>
        <t>The server, including a redacted signal, provides an unauthorized client additional 
        information related to the existence of data and <bcp14>MAY</bcp14> exclude the redacted members 
        for RDAP fields that are considered a privacy issue in providing a data existence signal.
        The server <bcp14>MAY</bcp14> choose to publish a redaction policy describing how this extension is implemented for their constituency. 
        The contents of such a policy are outside the scope of this specification.</t>
        <t>The "redacted" member contains an array
        of objects with the following child members:</t>
        <dl indent="4" newline="false">
          <dt>"name":</dt>
          <dd><bcp14>REQUIRED</bcp14> logical name for the redacted field.  The logical name used
          for the redacted field is up to server policy.
          The logical name
          is defined using an object with a "type" field denoting a registered redacted
          name (see <xref target="json-values-registry"/>) or a "description" field denoting an unregistered redacted name.
          The registered redacted names and the chosen unregistered names
          can meet the needs of different RDAP services or industries.</dd>
          <dt>"prePath":</dt>
          <dd><bcp14>OPTIONAL</bcp14> JSON path expression referencing a redacted JSON field in the pre-redacted response, using the expression language defined by the "pathLang" member.  
          The "prePath" member <bcp14>MAY</bcp14> be set when the redacted field does not exist in the redacted response for the <xref target="redaction-removal">Redaction by Removal Method</xref> and the <xref target="redaction-replacement-value">Redaction by Replacement Value Method</xref>.  
          The "prePath" member <bcp14>MUST NOT</bcp14> be set when the "postPath" member is set. 
          </dd>
          <dt>"postPath":</dt>
          <dd><bcp14>OPTIONAL</bcp14> JSON path expression referencing a redacted JSON field in the redacted (post-redacted) response, using the expression language defined by the "pathLang" member.
          The "postPath" member <bcp14>MUST</bcp14> be set when the redacted field does exist in the redacted response for the <xref target="redaction-empty-value">Redaction by Empty Value Method</xref>, the <xref target="redaction-partial-value">Redaction by Partial Value Method</xref>, and the <xref target="redaction-replacement-value">Redaction by Replacement Value Method</xref>.  
          The "postPath" member <bcp14>MUST NOT</bcp14> be set when the "prePath" member is set. 
          </dd>
          <dt>"replacementPath":</dt>
          <dd><bcp14>OPTIONAL</bcp14> JSON path expression of the replacement field of the redacted field with the
            <xref target="redaction-replacement-value">Redaction by Replacement Value Method</xref>, using the expression language defined by the "pathLang" member.
          </dd>
          <dt>"pathLang":</dt>
          <dd><bcp14>OPTIONAL</bcp14> JSON path expression language used, with the default value of "jsonpath" for JSONPath <xref target="RFC9535"/>.
           Other JSON path expression languages registered with the "redacted expression language" Type in the "RDAP JSON Values" registry <bcp14>MAY</bcp14> be used based on server policy.</dd>
          <dt>"method":</dt>
          <dd>
            <t><bcp14>OPTIONAL</bcp14> redaction method used, with one of the following values:</t>
            <ul>
              <li>"removal" indicating the <xref target="redaction-removal">Redaction by Removal Method</xref>,</li>
              <li>"emptyValue" indicating the <xref target="redaction-empty-value">Redaction by Empty Value Method</xref>,</li>
              <li>"partialValue" indicating the <xref target="redaction-partial-value">Redaction by Partial Value Method</xref>, or</li>
              <li>"replacementValue" indicating the <xref target="redaction-replacement-value">Redaction by Replacement Value Method</xref>.</li>
            </ul>
            <t>The default value is "removal" when not provided.</t>
          </dd>
          <dt>"reason":</dt>
          <dd><bcp14>OPTIONAL</bcp14> human-readable reason(s) for the redacted field in
          the language defined by the "lang" <xref target="RFC9083"/> member.
          The default language is "en" if the "lang" <xref target="RFC9083"/> member is not specified.
       The reason is defined using an object with an <bcp14>OPTIONAL</bcp14> "type" field denoting a registered redacted reason
          (see <xref target="json-values-registry"/>) and an <bcp14>OPTIONAL</bcp14> "description" field denoting an unregistered redacted reason.
          The "description" field <bcp14>MUST NOT</bcp14> be a client processing dependency.</dd>
        </dl>
        <t>Example of the unredacted version of an RDAP lookup response:</t>
        <figure anchor="unredacted-lookup-response">
          <name>Unredacted RDAP Lookup Response</name>
          <sourcecode type="json">
    {
      "rdapConformance": [
        "rdap_level_0"
      ],
      "objectClassName": "domain",
      "handle": "ABC123",
      "ldhName": "example.com",
      "secureDNS": {
        "delegationSigned": false
      },
      "notices": [
        {
          "title": "Terms of Use",
          "description": [
            "Service subject to Terms of Use."
          ],
          "links": [
            {
              "rel": "self",
              "href": "https://www.example.com/terms-of-use",
              "type": "text/html",
              "value": "https://www.example.com/terms-of-use"
            }
          ]
        }
      ],
      "nameservers": [
        {
          "objectClassName": "nameserver",
          "ldhName": "ns1.example.com"
        },
        {
          "objectClassName": "nameserver",
          "ldhName": "ns2.example.com"
        }
      ],
      "entities": [
        {
          "objectClassName": "entity",
          "handle": "123",
          "roles": [
            "registrar"
          ],
          "publicIds": [
            {
              "type": "IANA Registrar ID",
              "identifier": "1"
            }
          ],
          "vcardArray": [
            "vcard",
            [
              [
                "version",
                {},
                "text",
                "4.0"
              ],
              [
                "fn",
                {},
                "text",
                "Example Registrar Inc."
              ],
              [
                "adr",
                {},
                "text",
                [
                  "",
                  "Suite 100",
                  "123 Example Dr.",
                  "Dulles",
                  "VA",
                  "20166-6503",
                  "US"
                ]
              ],
              [
                "email",
                {},
                "text",
                "contact@organization.example"
              ],
              [
                "tel",
                {
                  "type": "voice"
                },
                "uri",
                "tel:+1.7035555555;ext=1234"
              ],
              [
                "tel",
                {
                  "type": "fax"
                },
                "uri",
                "tel:+1.7035555556"
              ]
            ]
          ],
          "entities": [
            {
              "objectClassName": "entity",
              "roles": [
                "abuse"
              ],
              "vcardArray": [
                "vcard",
                [
                  [
                    "version",
                    {},
                    "text",
                    "4.0"
                  ],
                  [
                    "fn",
                    {},
                    "text",
                    "Abuse Contact"
                  ],
                  [
                    "email",
                    {},
                    "text",
                    "abuse@organization.example"
                  ],
                  [
                    "tel",
                    {
                      "type": "voice"
                    },
                    "uri",
                    "tel:+1.7035555555;ext=1234"
                  ]
                ]
              ]
            }
          ]
        },
        {
          "objectClassName": "entity",
          "handle": "XXXX",
          "roles": [
            "registrant"
          ],
          "vcardArray": [
            "vcard",
            [
              [
                "version",
                {},
                "text",
                "4.0"
              ],
              [
                "fn",
                {},
                "text",
                "Registrant User"
              ],
              [
                "org",
                {},
                "text",
                "Example Inc."
              ],
              [
                "adr",
                {},
                "text",
                [
                  "",
                  "Suite 1235",
                  "4321 Rue Somewhere",
                  "Quebec",
                  "QC",
                  "G1V 2M2",
                  "Canada"
                ]
              ],
              [
                "email",
                {},
                "text",
                "registrant.user@example.com"
              ],
              [
                "tel",
                {
                  "type": "voice"
                },
                "uri",
                "tel:+1-555-555-1235;ext=123"
              ],
              [
                "tel",
                {
                  "type": "fax"
                },
                "uri",
                "tel:+1-555-555-5321"
              ]
            ]
          ]
        },
        {
          "objectClassName": "entity",
          "handle": "YYYY",
          "roles": [
            "technical"
          ],
          "vcardArray": [
            "vcard",
            [
              [
                "version",
                {},
                "text",
                "4.0"
              ],
              [
                "fn",
                {},
                "text",
                "Technical User"
              ],
              [
                "org",
                {},
                "text",
                "Example Inc."
              ],
              [
                "adr",
                {},
                "text",
                [
                  "",
                  "Suite 1234",
                  "4321 Rue Somewhere",
                  "Quebec",
                  "QC",
                  "G1V 2M2",
                  "Canada"
                ]
              ],
              [
                "email",
                {},
                "text",
                "technical.user@example.com"
              ],
              [
                "tel",
                {
                  "type": "voice"
                },
                "uri",
                "tel:+1-555-555-1234;ext=321"
              ],
              [
                "tel",
                {
                  "type": "fax"
                },
                "uri",
                "tel:+1-555-555-4321"
              ]
            ]
          ]
        },
        {
          "objectClassName": "entity",
          "handle": "ZZZZ",
          "roles": [
            "administrative"
          ],
          "vcardArray": [
            "vcard",
            [
              [
                "version",
                {},
                "text",
                "4.0"
              ],
              [
                "fn",
                {},
                "text",
                "Administrative User"
              ],
              [
                "org",
                {},
                "text",
                "Example Inc."
              ],
              [
                "adr",
                {},
                "text",
                [
                  "",
                  "Suite 1236",
                  "4321 Rue Somewhere",
                  "Quebec",
                  "QC",
                  "G1V 2M2",
                  "Canada"
                ]
              ],
              [
                "email",
                {},
                "text",
                "administrative.user@example.com"
              ],
              [
                "tel",
                {
                  "type": "voice"
                },
                "uri",
                "tel:+1-555-555-1236;ext=789"
              ],
              [
                "tel",
                {
                  "type": "fax"
                },
                "uri",
                "tel:+1-555-555-6321"
              ]
            ]
          ]
        },
        {
          "objectClassName": "entity",
          "handle": "WWWW",
          "roles": [
            "billing"
          ],
          "vcardArray": [
            "vcard",
            [
              [
                "version",
                {},
                "text",
                "4.0"
              ],
              [
                "fn",
                {},
                "text",
                "Billing User"
              ],
              [
                "email",
                {},
                "text",
                "billing.user@example.com"
              ]
            ]
          ]
        }
      ],
      "events": [
        {
          "eventAction": "registration",
          "eventDate": "1997-06-03T00:00:00Z"
        },
        {
          "eventAction": "last changed",
          "eventDate": "2020-05-28T01:35:00Z"
        },
        {
          "eventAction": "expiration",
          "eventDate": "2021-06-03T04:00:00Z"
        }
      ],
      "status": [
        "server delete prohibited",
        "server update prohibited",
        "server transfer prohibited",
        "client transfer prohibited"
      ]
    }
  </sourcecode>
        </figure>
        <t>Example of the redacted version of an RDAP lookup response:</t>
        <figure anchor="redacted-lookup-response">
          <name>Redacted RDAP Lookup Response</name>
          <sourcecode type="json">
    {
      "rdapConformance": [
        "rdap_level_0",
        "redacted"
      ],
      "objectClassName": "domain",
      "ldhName": "example.com",
      "secureDNS": {
        "delegationSigned": false
      },
      "notices": [
        {
          "title": "Terms of Use",
          "description": [
            "Service subject to Terms of Use."
          ],
          "links": [
            {
              "rel": "self",
              "href": "https://www.example.com/terms-of-use",
              "type": "text/html",
              "value": "https://www.example.com/terms-of-use"
            }
          ]
        }
      ],
      "nameservers": [
        {
          "objectClassName": "nameserver",
          "ldhName": "ns1.example.com"
        },
        {
          "objectClassName": "nameserver",
          "ldhName": "ns2.example.com"
        }
      ],
      "entities": [
        {
          "objectClassName": "entity",
          "handle": "123",
          "roles": [
            "registrar"
          ],
          "publicIds": [
            {
              "type": "IANA Registrar ID",
              "identifier": "1"
            }
          ],
          "vcardArray": [
            "vcard",
            [
              [
                "version",
                {},
                "text",
                "4.0"
              ],
              [
                "fn",
                {},
                "text",
                "Example Registrar Inc."
              ],
              [
                "adr",
                {},
                "text",
                [
                  "",
                  "Suite 100",
                  "123 Example Dr.",
                  "Dulles",
                  "VA",
                  "20166-6503",
                  "US"
                ]
              ],
              [
                "email",
                {},
                "text",
                "contact@organization.example"
              ],
              [
                "tel",
                {
                  "type": "voice"
                },
                "uri",
                "tel:+1.7035555555"
              ],
              [
                "tel",
                {
                  "type": "fax"
                },
                "uri",
                "tel:+1.7035555556"
              ]
            ]
          ],
          "entities": [
            {
              "objectClassName": "entity",
              "roles": [
                "abuse"
              ],
              "vcardArray": [
                "vcard",
                [
                  [
                    "version",
                    {},
                    "text",
                    "4.0"
                  ],
                  [
                    "fn",
                    {},
                    "text",
                    "Abuse Contact"
                  ],
                  [
                    "email",
                    {},
                    "text",
                    "abuse@organization.example"
                  ],
                  [
                    "tel",
                    {
                      "type": "voice"
                    },
                    "uri",
                    "tel:+1.7035555555"
                  ]
                ]
              ]
            }
          ]
        },
        {
          "objectClassName": "entity",
          "handle": "XXXX",
          "roles": [
            "registrant"
          ],
          "vcardArray": [
            "vcard",
            [
              [
                "version",
                {},
                "text",
                "4.0"
              ],
              [
                "fn",
                {},
                "text",
                ""
              ],
              [
                "adr",
                {},
                "text",
                [
                  "",
                  "",
                  "",
                  "",
                  "QC",
                  "",
                  "Canada"
                ]
              ]
            ]
          ]
        },
        {
          "objectClassName": "entity",
          "handle": "YYYY",
          "roles": [
            "technical"
          ],
          "vcardArray": [
            "vcard",
            [
              [
                "version",
                {},
                "text",
                "4.0"
              ],
              [
                "fn",
                {},
                "text",
                ""
              ],
              [
                "org",
                {},
                "text",
                "Example Inc."
              ],
              [
                "adr",
                {},
                "text",
                [
                  "",
                  "Suite 1234",
                  "4321 Rue Somewhere",
                  "Quebec",
                  "QC",
                  "G1V 2M2",
                  "Canada"
                ]
              ]
            ]
          ]
        }
      ],
      "events": [
        {
          "eventAction": "registration",
          "eventDate": "1997-06-03T00:00:00Z"
        },
        {
          "eventAction": "last changed",
          "eventDate": "2020-05-28T01:35:00Z"
        },
        {
          "eventAction": "expiration",
          "eventDate": "2021-06-03T04:00:00Z"
        }
      ],
      "status": [
        "server delete prohibited",
        "server update prohibited",
        "server transfer prohibited",
        "client transfer prohibited"
      ],
      "redacted": [
        {
          "name": {
            "description": "Registry Domain ID"
          },
          "prePath": "$.handle",
          "pathLang": "jsonpath",
          "method": "removal",
          "reason": {
            "description": "Server policy"
          }
        },
        {
          "name": {
            "description": "Registrant Name"
          },
          "postPath": "$.entities[?(@.roles[0]=='registrant')].
            vcardArray[1][?(@[0]=='fn')][3]",
          "pathLang": "jsonpath",
          "method": "emptyValue",
          "reason": {
            "description": "Server policy"
          }
        },
        {
          "name": {
            "description": "Registrant Organization"
          },
          "prePath": "$.entities[?(@.roles[0]=='registrant')].
            vcardArray[1][?(@[0]=='org')]",
          "pathLang": "jsonpath",
          "method": "removal",
          "reason": {
            "description": "Server policy"
          }
        },
        {
          "name": {
            "description": "Registrant Street"
          },
          "postPath": "$.entities[?(@.roles[0]=='registrant')].
            vcardArray[1][?(@[0]=='adr')][3][:3]",
          "pathLang": "jsonpath",
          "method": "emptyValue",
          "reason": {
            "description": "Server policy"
          }
        },
        {
          "name": {
            "description": "Registrant City"
          },
          "postPath": "$.entities[?(@.roles[0]=='registrant')].
            vcardArray[1][?(@[0]=='adr')][3][3]",
          "pathLang": "jsonpath",
          "method": "emptyValue",
          "reason": {
            "description": "Server policy"
          }
        },
        {
          "name": {
            "description": "Registrant Postal Code"
          },
          "postPath": "$.entities[?(@.roles[0]=='registrant')].
            vcardArray[1][?(@[0]=='adr')][3][5]",
          "pathLang": "jsonpath",
          "method": "emptyValue",
          "reason": {
            "description": "Server policy"
          }
        },
        {
          "name": {
            "description": "Registrant Email"
          },
          "prePath": "$.entities[?(@.roles[0]=='registrant')].
            vcardArray[1][?(@[0]=='email')]",
          "method": "removal",
          "reason": {
            "description": "Server policy"
          }
        },
        {
          "name": {
            "description": "Registrant Phone"
          },
          "prePath": "$.entities[?(@.roles[0]=='registrant')].
            vcardArray[1][?(@[1].type=='voice')]",
          "method": "removal",
          "reason": {
            "description": "Server policy"
          }
        },
        {
          "name": {
            "description": "Technical Name"
          },
          "postPath": "$.entities[?(@.roles[0]=='technical')].
            vcardArray[1][?(@[0]=='fn')][3]",
          "method": "emptyValue",
          "reason": {
            "description": "Server policy"
          }
        },
        {
          "name": {
            "description": "Technical Email"
          },
          "prePath": "$.entities[?(@.roles[0]=='technical')].
            vcardArray[1][?(@[0]=='email')]",
          "method": "removal",
          "reason": {
            "description": "Server policy"
          }
        },
        {
          "name": {
            "description": "Technical Phone"
          },
          "prePath": "$.entities[?(@.roles[0]=='technical')].
            vcardArray[1][?(@[1].type=='voice')]",
          "method": "removal",
          "reason": {
            "description": "Server policy"
          }
        },
        {
          "name": {
            "description": "Technical Fax"
          },
          "prePath": "$.entities[?(@.roles[0]=='technical')].
            vcardArray[1][?(@[1].type=='fax')]",
          "reason": {
            "description": "Client request"
          }
        },
        {
          "name": {
            "description": "Administrative Contact"
          },
          "prePath": "$.entities[?(@.roles[0]=='administrative')]",
          "method": "removal",
          "reason": {
            "description": "Refer to the technical contact"
          }
        },
        {
          "name": {
            "description": "Billing Contact"
          },
          "prePath": "$.entities[?(@.roles[0]=='billing')]",
          "method": "removal",
          "reason": {
            "description": "Refer to the registrant contact"
          }
        }
      ]
    }
  </sourcecode>
        </figure>
        <t>Example of the unredacted version of an RDAP search response:</t>
        <figure anchor="unredacted-search-response">
          <name>Unredacted RDAP Search Response</name>
          <sourcecode type="json">
  {
    "rdapConformance": [
      "rdap_level_0"
    ],
    "domainSearchResults":[
      {
        "objectClassName": "domain",
        "handle": "ABC121",
        "ldhName": "example1.com",
        "links":[
          {
            "value":"https://example.com/rdap/domain/example1.com",
            "rel":"self",
            "href":"https://example.com/rdap/domain/example1.com",
            "type":"application/rdap+json"
          },
          {
            "value":"https://example.com/rdap/domain/example1.com",
            "rel":"related",
            "href":"https://example.com/rdap/domain/example1.com",
            "type":"application/rdap+json"
          }
        ]
      },
      {
        "objectClassName": "domain",
        "handle": "ABC122",
        "ldhName": "example2.com",
        "links":[
          {
            "value":"https://example.com/rdap/domain/example2.com",
            "rel":"self",
            "href":"https://example.com/rdap/domain/example2.com",
            "type":"application/rdap+json"
          },
          {
            "value":"https://example.com/rdap/domain/example2.com",
            "rel":"related",
            "href":"https://example.com/rdap/domain/example2.com",
            "type":"application/rdap+json"
          }
        ]
      }
    ]
  }
  </sourcecode>
        </figure>
        <t>Example of the redacted version of an RDAP search response:</t>
        <figure anchor="redacted-search-response">
          <name>Redacted RDAP Search Response</name>
          <sourcecode type="json">
  {
    "rdapConformance": [
      "rdap_level_0",
      "redacted"
    ],
    "domainSearchResults":[
      {
        "objectClassName": "domain",
        "ldhName": "example1.com",
        "links":[
          {
            "value":"https://example.com/rdap/domain/example1.com",
            "rel":"self",
            "href":"https://example.com/rdap/domain/example1.com",
            "type":"application/rdap+json"
          },
          {
            "value":"https://example.com/rdap/domain/example1.com",
            "rel":"related",
            "href":"https://example.com/rdap/domain/example1.com",
            "type":"application/rdap+json"
          }
        ],
        "redacted": [
          {
            "name": {
              "type": "Registry Domain ID"
            },
            "prePath": "$.domainSearchResults[0].handle",
            "pathLang": "jsonpath",
            "method": "removal",
            "reason": {
              "type": "Server policy"
            }
          }
        ]
      },
      {
        "objectClassName": "domain",
        "ldhName": "example2.com",
        "links":[
          {
            "value":"https://example.com/rdap/domain/example2.com",
            "rel":"self",
            "href":"https://example.com/rdap/domain/example2.com",
            "type":"application/rdap+json"
          },
          {
            "value":"https://example.com/rdap/domain/example2.com",
            "rel":"related",
            "href":"https://example.com/rdap/domain/example2.com",
            "type":"application/rdap+json"
          }
        ],
        "redacted": [
          {
            "name": {
              "description": "Registry Domain ID"
            },
            "prePath": "$.domainSearchResults[1].handle",
            "pathLang": "jsonpath",
            "method": "removal",
            "reason": {
              "description": "Server policy"
            }
          }
        ]
      }
    ]
  }
  </sourcecode>
        </figure>
      </section>
    </section>
    <section anchor="jsonpath-considerations">
      <name>JSONPath Considerations</name>
      <t><xref target="RFC9535">JSONPath</xref> is the default
      JSON path expression language.  This section includes JSONPath considerations for clients and servers.</t>
      <section anchor="jsonpath-client-considerations">
        <name>JSONPath Client Considerations</name>
        <t>This section covers considerations for clients that receive responses from
          servers using JSONPath <xref target="RFC9535"/> to identify
          redacted RDAP fields with the "prePath", "postPath", or "replacementPath" member of redacted objects in the "redacted" member.
        The list of JSONPath client considerations include:</t>
        <ol spacing="compact">
          <li>When the server is using the <xref target="redaction-removal">Redaction by Removal Method</xref> or the <xref target="redaction-replacement-value">Redaction by Replacement Value Method</xref> with an alternative field value,
          the JSONPath expression of the "prePath" member will not resolve successfully with the redacted response.
          The client can key off the "name" member for display logic related to the redaction.</li>
        </ol>
      </section>
      <section anchor="jsonpath-server-considerations">
        <name>JSONPath Server Considerations</name>
        <t>This section covers considerations for servers
        using JSONPath <xref target="RFC9535"/> to identify
        redacted RDAP fields with the "prePath", "postPath", or "replacementPath" member of redacted objects in the "redacted" member.
        The list of JSONPath considerations include:</t>
        <ol spacing="normal">
          <li>Use absolute paths with the '$' JSONPath element.  An example is "$.handle" for the "Registry Domain ID" in a lookup response or "$.domainSearchResults[0].handle" in a search response.</li>
          <li>Validate a JSONPath expression with the non-redacted RDAP response when using the "prePath" member, where evaluating the expression results in returning the redacted field.</li>
          <li>Reference the removed object field when redacting an entire object by the  <xref target="redaction-removal">Redaction by Removal Method</xref>, where all of the object's child fields are explicitly removed.
          An example is "$.entities[?(@.roles[0]=='administrative')]" for the entire "Administrative Contact".</li>
          <li>Use multiple bases for the redaction of
certain content. For example, if server policy is such that all
administrative-role entities are redacted and all technical-role
entities are redacted, then an entity having both the
administrative role and the technical role could be redacted for
two different reasons. In this situation, a server is required to
include at least one "redacted" entry, but it should consider
including a separate "redacted" entry for each applicable basis
for redaction to clearly document the server policies that
are relevant to redaction in each instance.</li>
          <li>Reference the removed field when using the <xref target="redaction-removal">Redaction by Removal Method</xref>.  An example is "$.handle" for the "Registry Domain ID".</li>
          <li>Reference index 0 of the jCard property array, which is the jCard "name" property,
          with a filter expression containing the name of the field when redacting a jCard field using the <xref target="redaction-removal">Redaction by Removal Method</xref>.
          An example is "$.entities[?(@.roles[0]=='registrant')].vcardArray[1][?(@[0]=='email')]" for the "Registrant Email".</li>
          <li>Reference the jCard field value or values redacted by array index 3 and greater
          when redacting a jCard field using the <xref target="redaction-empty-value">Redaction by Empty Value Method</xref>.
          The jCard property array index 3 and greater contain the property values, where the property values set with an empty value
          are referenced directly in place of the jCard property name.  Servers can then systematically redact the jCard
          field value or values based on the JSONPath expressions, and clients will directly know which jCard property values have been redacted.
          An example is "$.entities[?(@.roles[0]=='registrant')].vcardArray[1][?(@[0]=='fn')][3]" for the "Registrant Name" or "$.entities[?(@.roles[0]=='registrant')].vcardArray[1][?(@[0]=='adr')][3][5]"
          for the "Registrant Postal Code".</li>
          <li>RDAP extensions should define any special JSONPath considerations required to identify redacted RDAP fields if these considerations are insufficient.</li>
        </ol>
      </section>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <section anchor="rdap-extensions-registry">
        <name>RDAP Extensions Registry</name>
        <t>IANA has registered the following value in the "RDAP
           Extensions" registry:</t>
        <dl spacing="normal">
          <dt>Extension Identifier:</dt>
          <dd>redacted</dd>
          <dt>Registry Operator:</dt>
          <dd>Any</dd>
          <dt>Specification:</dt>
          <dd>RFC 9537</dd>
          <dt>Contact:</dt>
          <dd>IETF &lt;iesg@ietf.org&gt;</dd>
          <dt>Intended Usage:</dt>
          <dd>This extension identifies the redacted fields in an RDAP response.</dd>
        </dl>
      </section>
      <section anchor="json-values-registry">
        <name>RDAP JSON Values Registry</name>
        <t><xref target="RFC9083" section="10.2" sectionFormat="of" /> defines the
        "RDAP JSON Values" registry with predefined Type field values and a
        registration policy of Expert Review <xref target="RFC8126"/>.
        This specification defines three new Type field
        values that can be used to register predefined redacted name, reason, and
        expression language values. IANA has updated the "RDAP JSON Values" registry to accept these additional Type field values as follows:</t>
        <dl indent="4">
          <dt>"redacted name":</dt>
          <dd>Redacted name being registered.  The registered redacted name
          is referenced using the "type" field of the redacted "name" field.</dd>
          <dt>"redacted reason":</dt>
          <dd>Redacted reason being registered.  The registered redacted reason
          is referenced using the "type" field of the redacted "reason" field.</dd>
          <dt>"redacted expression language":</dt>
          <dd>Redacted expression language being registered.  The registered redacted expression
          language is referenced using the "pathLang" field.</dd>
        </dl>
        <t>IANA has also listed this document as a reference for the "RDAP JSON Values" registry and has registered the following value:</t>
        <dl indent="4">
          <dt>Value:</dt>
          <dd>jsonpath</dd>
          <dt>Type:</dt>
          <dd>redacted expression language</dd>
          <dt>Description:</dt>
          <dd>JSON path expression language, as defined in RFC 9535.</dd>
          <dt>Registrant:</dt>
          <dd>IETF</dd>
          <dt>Contact Information:</dt>
          <dd>iesg@ietf.org</dd>
	  <dt>Reference:</dt>
	  <dd>RFC 9537</dd>
        </dl>
      </section>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>The extension described in this document does not provide any security services 
      beyond those described by <xref target="RFC9083"/>.</t>
    </section>
  </middle>
  <back>

    <displayreference target="I-D.ietf-regext-rdap-jscontact" to="RDAP-JSCONTACT"/>

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>

	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6350.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7095.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9082.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9083.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9535.xml"/>
      </references>

      <references>
        <name>Informative References</name>

<xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-regext-rdap-jscontact.xml"/>

      </references>
    </references>
    <section anchor="Acknowledgements" numbered="false">
      <name>Acknowledgements</name>
      <t>The authors wish to thank the following persons for their feedback and suggestions:
        <contact fullname="Marc Blanchet"/>,
        <contact fullname="Tom Harrison"/>,
        <contact fullname="Scott Hollenbeck"/>,
        <contact fullname="Pawel Kowalik"/>,
        <contact fullname="Mario Loffredo"/>,
        <contact fullname="Gustavo Lozano"/>,
        <contact fullname="Andy Newton"/>,
        <contact fullname="Jasdip Singh"/>,
    and <contact fullname="Rick Wilhelm"/>.
      </t>
    </section>
  </back>
</rfc>
