<?xml version='1.0' encoding='UTF-8'?>

<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" category="std" docName="draft-ietf-oauth-resource-metadata-13" number="9728" submissionType="IETF" updates="" obsoletes="" consensus="true" ipr="trust200902" tocInclude="true" tocDepth="5" symRefs="true" sortRefs="true" version="3" xml:lang="en">

  <front>
    <title abbrev="OAuth 2.0 Protected Resource Metadata">OAuth 2.0 Protected Resource Metadata</title>
    <seriesInfo name="RFC" value="9728"/>
    <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
      <organization>Self-Issued Consulting</organization>
      <address>
        <email>michael_b_jones@hotmail.com</email>
        <uri>https://self-issued.info/</uri>
      </address>
    </author>
    <author fullname="Phil Hunt" initials="P." surname="Hunt">
      <organization>Independent Identity, Inc.</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>
    <author fullname="Aaron Parecki" initials="A." surname="Parecki">
      <organization>Okta</organization>
      <address>
        <email>aaron@parecki.com</email>
        <uri>https://aaronparecki.com/</uri>
      </address>
    </author>
    <date month="April" year="2025"/>
    <area>SEC</area>
    <workgroup>oauth</workgroup>

    <keyword>OAuth</keyword>
    <keyword>Discovery</keyword>
    <keyword>Metadata</keyword>
    <keyword>Discovery Metadata</keyword>
    <keyword>Configuration Information</keyword>
    <keyword>Resource Server</keyword>
    <keyword>Protected Resource</keyword>
    <keyword>Resource Identifier</keyword>
    <keyword>JavaScript Object Notation</keyword>
    <keyword>JSON</keyword>
    <keyword>JSON Web Token</keyword>
    <keyword>JWT</keyword>
    <abstract>
      <t>
	This specification defines a metadata format that
	an OAuth 2.0 client or authorization server can use to obtain
	the information needed to interact with
	an OAuth 2.0 protected resource.
      </t>
    </abstract>
  </front>
  <middle>
    <section anchor="Introduction">
      <name>Introduction</name>
      <t>
	This specification defines a metadata format
	enabling OAuth 2.0 clients and authorization servers to obtain information needed
	to interact with an OAuth 2.0 protected resource.
	The structure and content of this specification are intentionally as parallel as possible to
	(1)&nbsp;<xref target="RFC7591">"OAuth 2.0 Dynamic Client Registration Protocol"</xref>,
	which enables a client to provide metadata about itself
	to an OAuth 2.0 authorization server and (2)&nbsp;"<xref target="RFC8414" format="title"/>" <xref target="RFC8414" format="default"/>,
	which enables a client to obtain metadata about
	an OAuth 2.0 authorization server.
      </t>
      <t>
	The means by which the client obtains the location
	of the protected resource
	is out of scope for this document.
	In some cases, the location may be manually configured into the client;
	for example, an email client could provide an interface for a user to enter
	the URL of their <xref target="RFC8620">JSON Meta Application Protocol (JMAP) server</xref>.
	In other cases, it may be dynamically discovered;
	for example, a user could enter their email address into an email client,
	the client could perform <xref target="RFC7033">WebFinger discovery</xref>
	(in a manner related to the description in <xref target="OpenID.Discovery" section="2" relative="#IssuerDiscovery"/>) to find the resource server, and the client could then fetch the resource server metadata
	to find the authorization server to use to obtain authorization
	to access the user's email.
      </t>
      <t>
	The metadata for a protected resource
	is retrieved from a well-known location as a JSON <xref target="RFC8259"/> document,
	which declares information about its capabilities and, optionally, its relationships with other services.
	This process is described in <xref target="PRConfig"/>.
      </t>
      <t>
	This metadata can be communicated either in a self-asserted fashion or as
	a set of signed metadata values represented as claims
	in a JSON Web Token (JWT) <xref target="RFC7519"/>.
	In the JWT case, the issuer is vouching for
	the validity of the data about the protected resource.
	This is analogous to the role that the software statement
	plays in OAuth Dynamic Client Registration <xref target="RFC7591"/>.
      </t>
      <t>
	Each protected resource publishing metadata about itself makes its own
	metadata document available at a well-known location
	deterministically derived from the protected resource's URL,
	even when the resource server implements multiple protected resources.
	This prevents attackers from publishing metadata that supposedly describes
	the protected resource but that is not actually authoritative for
	the protected resource, as described in <xref target="Impersonation"/>.
      </t>
      <t>
	<xref target="PRMetadata"/> defines metadata parameters that a protected
	      resource can publish, which includes things like which scopes are
	      supported, how a client can present an access token, and more.
	      These values, such as the <tt>jwks_uri</tt> (see <xref target="PRMetadata"/>),
              may be used with other specifications; for example, the public keys
              published in the <tt>jwks_uri</tt> can be used to verify the signed
              resource responses, as described in <xref target="FAPI.MessageSigning"/>.
      </t>
      <t>
	<xref target="WWW-Authenticate"/> describes the use of
	<tt>WWW-Authenticate</tt> by protected resources
	to dynamically inform clients of
	the URL of their protected resource metadata.
	This use of <tt>WWW-Authenticate</tt> can indicate that
	the protected resource metadata may have changed.
      </t>
      <section anchor="rnc">
        <name>Requirements Notation and Conventions</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
    interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/> <xref
    target="RFC8174"/> when, and only when, they appear in all capitals, as
    shown here.
        </t>

         <t>
	  All applications of <xref target="RFC7515">JSON Web Signature (JWS) data structures</xref>
	  and <xref target="RFC7516">JSON Web Encryption (JWE) data structures</xref>
	  as discussed in this specification utilize
	  the JWS Compact Serialization or the JWE Compact Serialization;
	  the JWS JSON Serialization and the JWE JSON Serialization are not used.
	  Choosing a single serialization is intended to facilitate interoperability.
        </t>
      </section>
      <section anchor="Terminology">
        <name>Terminology</name>
        <t>
	  This specification uses the terms "access token", "authorization code",
	  "authorization server",
	  "client", "client authentication", "client identifier",
	  "protected resource", and
	  "resource server"
	  defined by <xref target="RFC6749">OAuth 2.0</xref>, and
	  the terms "Claim Name" and "JSON Web Token (JWT)"
	  defined by "<xref target="RFC7519" format="title"/>" <xref target="RFC7519" format="default"/>.
        </t>
        <t>
	  This specification defines the following term:
        </t>
        <dl newline="true" spacing="normal">
          <dt>Resource Identifier:</dt>
          <dd>
	      The protected resource's resource identifier, which is a URL that
	      uses the <tt>https</tt> scheme and has no fragment component.
	      As specified in <xref section="2" sectionFormat="of" target="RFC8707"/>, it also <bcp14>SHOULD NOT</bcp14> include
	      a query component, but it is recognized that there are cases that make
	      a query component a useful and necessary part of a resource identifier.
	      Protected resource metadata is published at a
	      <tt>.well-known</tt> location
	      <xref target="RFC8615"/>
	      derived from this resource identifier,
	      as described in <xref target="PRConfig"/>.
	    </dd>
        </dl>
      </section>
    </section>
    <section anchor="PRMetadata">
      <name>Protected Resource Metadata</name>
      <t>
	Protected resources can have metadata describing their configuration.
	The following protected resource metadata parameters
	are used by this specification and are registered in the
	"OAuth Protected Resource Metadata" registry
	established in <xref target="PRMetadataReg"/>:

      </t>
      <dl newline="true" spacing="normal">
        <dt>resource</dt>
        <dd>
	    <bcp14>REQUIRED</bcp14>.
	    The protected resource's resource identifier,
	    as defined in <xref target="Terminology"/>.
	  </dd>
        <dt>authorization_servers</dt>
        <dd>
	    <bcp14>OPTIONAL</bcp14>.
	    JSON array containing a list of OAuth authorization server issuer identifiers,
	    as defined in <xref target="RFC8414"/>,
	    for authorization servers that can be used with this protected resource.
	    Protected resources <bcp14>MAY</bcp14> choose not to advertise some supported authorization servers
	    even when this parameter is used.
	    In some use cases, the set of authorization servers will not be enumerable,
	    in which case this metadata parameter would not be used.
	  </dd>
        <dt>jwks_uri</dt>
        <dd>
	    <bcp14>OPTIONAL</bcp14>.
	    URL of the protected resource's JSON Web Key (JWK) Set <xref target="RFC7517"/> document.
	    This contains public keys belonging to the protected resource, such as
	    signing key(s) that the resource server uses to sign resource responses.
	    This URL <bcp14>MUST</bcp14> use the <tt>https</tt> scheme.
	    When both signing and encryption keys are made available,
	    a <tt>use</tt> (public key use) parameter
	    value is <bcp14>REQUIRED</bcp14> for all keys in the referenced JWK Set
	    to indicate each key's intended usage.
	  </dd>
        <dt>scopes_supported</dt>
        <dd>
	    <bcp14>RECOMMENDED</bcp14>.
	    JSON array containing a list of scope values, as defined in <xref target="RFC6749">OAuth          
2.0</xref>, that
	    are used in authorization requests to request access to this protected resource.
	    Protected resources <bcp14>MAY</bcp14> choose not to advertise some scope values supported
	    even when this parameter is used.
	  </dd>
        <dt>bearer_methods_supported</dt>
        <dd>
	    <bcp14>OPTIONAL</bcp14>.
	    JSON array containing a list of the supported methods of sending an
	    OAuth 2.0 bearer token <xref target="RFC6750"/> to the protected resource.
	    Defined values are
	    <tt>["header", "body", "query"]</tt>,
	    corresponding to Sections <xref section="2.1" sectionFormat="bare" target="RFC6750"/>, <xref section="2.2" sectionFormat="bare" target="RFC6750"/>, and <xref section="2.3" sectionFormat="bare" target="RFC6750"/> of <xref target="RFC6750"/>.
	    The empty array <tt>[]</tt> can be used
	    to indicate that no bearer methods are supported.
	    If this entry is omitted,
	    no default bearer methods supported are implied,
	    nor does its absence indicate that they are not supported.
	  </dd>
        <dt>resource_signing_alg_values_supported</dt>
        <dd>
	    <bcp14>OPTIONAL</bcp14>.
	    JSON array containing a list of the JWS <xref target="RFC7515"/> signing algorithms
	    (<tt>alg</tt> values) <xref target="RFC7518"/>
	    supported by the protected resource for signing resource responses,
	    for instance,
	    as described in <xref target="FAPI.MessageSigning"/>.
	    No default algorithms are implied if this entry is omitted.
	    The value <tt>none</tt> <bcp14>MUST NOT</bcp14> be used.
	  </dd>
        <dt>resource_name</dt>
        <dd>
	    Human-readable name of the protected resource
	    intended for display to the end user.
	    It is <bcp14>RECOMMENDED</bcp14> that protected resource metadata include this field.
	    The value of this field <bcp14>MAY</bcp14> be internationalized,
	    as described in <xref target="HumanReadableMetadata"/>.
	  </dd>
        <dt>resource_documentation</dt>
        <dd>
	    <bcp14>OPTIONAL</bcp14>.
	    URL of a page containing human-readable information that
	    developers might want or need to know when using the protected resource.
	    The value of this field <bcp14>MAY</bcp14> be internationalized,
	    as described in <xref target="HumanReadableMetadata"/>.
	  </dd>
        <dt>resource_policy_uri</dt>
        <dd>
	    <bcp14>OPTIONAL</bcp14>.
	    URL of a page containing human-readable information
	    about the protected resource's requirements on how
	    the client can use the data provided by the protected resource.
	    The value of this field <bcp14>MAY</bcp14> be internationalized,
	    as described in <xref target="HumanReadableMetadata"/>.
	  </dd>
        <dt>resource_tos_uri</dt>
        <dd>
	    <bcp14>OPTIONAL</bcp14>.
	    URL of a page containing human-readable information
	    about the protected resource's terms of service.
	    The value of this field <bcp14>MAY</bcp14> be internationalized,
	    as described in <xref target="HumanReadableMetadata"/>.
	  </dd>
        <dt>tls_client_certificate_bound_access_tokens</dt>
        <dd>
	    <bcp14>OPTIONAL</bcp14>.
	    Boolean value indicating protected resource support for
	    mutual-TLS client certificate-bound access tokens
	    <xref target="RFC8705"/>.
	    If omitted, the default value is false.
	  </dd>
        <dt>authorization_details_types_supported</dt>
        <dd>
	    <bcp14>OPTIONAL</bcp14>.
	    JSON array containing a list of the authorization details
	    <tt>type</tt> values supported by the resource server
	    when the <tt>authorization_details</tt>
	    request parameter <xref target="RFC9396"/> is used.
	  </dd>
        <dt>dpop_signing_alg_values_supported</dt>
        <dd>
	    <bcp14>OPTIONAL</bcp14>.
	    JSON array containing a list of the JWS <tt>alg</tt> values
	    (from the "JSON Web Signature and Encryption Algorithms" registry
	    <xref target="IANA.JOSE"/>)
	    supported by the resource server for validating
	    Demonstrating Proof of Possession (DPoP) proof JWTs <xref target="RFC9449"/>.
	  </dd>
        <dt>dpop_bound_access_tokens_required</dt>
        <dd>
	    <bcp14>OPTIONAL</bcp14>.
	    Boolean value specifying whether the protected resource always requires
	    the use of DPoP-bound access tokens <xref target="RFC9449"/>.
	    If omitted, the default value is false.
	  </dd>
      </dl>
      <t>
	Additional protected resource metadata parameters <bcp14>MAY</bcp14> also be used.
      </t>
      <section anchor="HumanReadableMetadata">
        <name>Human-Readable Resource Metadata</name>
        <t>
	  Human-readable resource metadata values
	  and resource metadata values that reference human-readable content
	  <bcp14>MAY</bcp14> be represented in multiple languages and scripts.
	  For example, the values of fields such as
	  <tt>resource_name</tt>,
	  <tt>resource_documentation</tt>,
	  <tt>resource_tos_uri</tt>, and
	  <tt>resource_policy_uri</tt>
	  might have multiple locale-specific metadata values
	  to facilitate use in different locations.
        </t>
        <t>
	  To specify the languages and scripts, language tags <xref target="BCP47"/>
	  are added to resource metadata parameter names,
	  delimited by a <tt>#</tt> character.
	  Since member names as discussed in <xref target="RFC8259">JSON</xref> are case sensitive,
	  it is <bcp14>RECOMMENDED</bcp14> that language tag values used in Claim Names be spelled
	  using the character case with which they are registered in the
	  <xref target="IANA.Language">"Language Subtag Registry"</xref>.
	  In particular, normally, language names are spelled with lowercase
	  characters, region names are spelled with uppercase characters,
	  and languages are spelled with mixed-case characters.
	  However, since language tag values are case insensitive per <xref target="BCP47"/>,
	  implementations <bcp14>SHOULD</bcp14> interpret the language tag values supplied
	  in a case-insensitive manner.
	  Per the recommendations in <xref target="BCP47"/>, language tag values used in
	  metadata parameter names should only be as specific as is necessary.
	  For instance, using <tt>fr</tt> might be sufficient
	  in many contexts, rather than <tt>fr-CA</tt>
	  or <tt>fr-FR</tt>.
        </t>
        <t>
	  For example, a resource could represent its name in English as
	  <tt>"resource_name#en": "My Resource"</tt>
	  and its name in Italian as
	  <tt>"resource_name#it": "La mia bella risorsa"</tt>
	  within its metadata.
	  Any or all of these names <bcp14>MAY</bcp14> be displayed to the end user,
	  choosing which names to display based on system configuration,
	  user preferences, or other factors.
        </t>
        <t>
	  If any human-readable field is sent without a language tag,
	  parties using it <bcp14>MUST NOT</bcp14> make any assumptions about the language,
	  character set, or script of the string value, and the string value
	  <bcp14>MUST</bcp14> be used as is wherever it is presented in a user interface.
	  To facilitate interoperability, it is <bcp14>RECOMMENDED</bcp14> that
	  each kind of human-readable metadata provided include
	  an instance of its metadata parameter without any language tags
	  in addition to any language-specific parameters, and it is <bcp14>RECOMMENDED</bcp14> that
	  any human-readable fields sent without language tags contain values
	  suitable for display on a wide variety of systems.
        </t>
      </section>
      <section anchor="SignedMetadata">
        <name>Signed Protected Resource Metadata</name>
        <t>
	  In addition to JSON elements, metadata values <bcp14>MAY</bcp14> also be provided
	  as a <tt>signed_metadata</tt> value,
	  which is a JSON Web Token (JWT) <xref target="RFC7519"/>
	  that asserts metadata values about the protected resource as a bundle.
	  A set of metadata parameters that can be used in signed metadata as claims
	  are defined in <xref target="PRMetadata"/>.
	  The signed metadata <bcp14>MUST</bcp14> be digitally signed or MACed
	  (protected with a Message Authentication Code) using a <xref target="RFC7515">JSON Web Signature (JWS)</xref>
	  and <bcp14>MUST</bcp14> contain an <tt>iss</tt> (issuer) claim
	  denoting the party attesting to the claims in the signed metadata.
	  Consumers of the metadata <bcp14>MAY</bcp14> ignore the signed metadata
	  if they do not support this feature.
	  If the consumer of the metadata supports signed metadata,
	  metadata values conveyed in the signed metadata
	  <bcp14>MUST</bcp14> take precedence over the corresponding values conveyed using plain JSON elements.
        </t>
        <t>
	  Signed metadata is included in the protected resource metadata JSON object
	  using this <bcp14>OPTIONAL</bcp14> metadata parameter:
        </t>
        <dl newline="true" spacing="normal">
          <dt>signed_metadata</dt>
          <dd>
	      A JWT containing metadata parameters about the protected resource as claims.
	      This is a string value consisting of the entire signed JWT.
	      A <tt>signed_metadata</tt>
	      parameter <bcp14>SHOULD NOT</bcp14> appear as a claim in the JWT;
	      it is <bcp14>RECOMMENDED</bcp14> to reject any metadata in which this occurs.
	    </dd>
        </dl>
      </section>
    </section>
    <section anchor="PRConfig">
      <name>Obtaining Protected Resource Metadata</name>
      <t>
	Protected resources supporting metadata
	<bcp14>MUST</bcp14> make a JSON document containing metadata as specified in <xref target="PRMetadata"/>
	available at a URL formed by
	inserting a well-known URI string into the protected resource's resource identifier
	between the host component and the path and/or query components, if any.
	By default, the well-known URI string used is
	<tt>/.well-known/oauth-protected-resource</tt>.
	The syntax and semantics of <tt>.well-known</tt>
	are defined in <xref target="RFC8615"/>.
	The well-known URI path suffix used <bcp14>MUST</bcp14> be registered in the 
	"Well-Known URIs" registry <xref target="IANA.well-known"/>.
	Examples of this construction can be found in <xref target="PRConfigurationRequest"/>.
      </t>
      <t>
	The term "application", as used below (and as used in <xref target="RFC8414"/>),
	encompasses all the components used to accomplish the task for the use case.
	That can include OAuth clients, authorization servers, protected resources,
	and non-OAuth components, inclusive of the code running in each of them.
	Applications are built to solve particular problems
	and may utilize many components and services.
      </t>
      <t>
	Different applications utilizing OAuth protected resources in application-specific ways
	<bcp14>MAY</bcp14> define and register different well-known URI path suffixes
	for publishing protected resource metadata used by those applications.
	For instance, if the Example application uses an OAuth protected resource in an Example-specific way
	and there are Example-specific metadata values that it needs to publish,
	then it might register and use the
	<tt>example-protected-resource</tt> URI path suffix and publish
	the metadata document at the URL formed by inserting
	<tt>/.well-known/example-protected-resource</tt>
	between the host and path and/or query components of the
	protected resource's resource identifier.
	Alternatively, many such applications will use the default well-known URI string
	<tt>/.well-known/oauth-protected-resource</tt>,
	which is the right choice for general-purpose OAuth protected resources,
	and not register an application-specific one.
      </t>
      <t>
	An OAuth 2.0 application using this specification <bcp14>MUST</bcp14> specify
	what well-known URI suffix it will use for this purpose.
	The same protected resource <bcp14>MAY</bcp14> choose to publish its metadata at multiple
	well-known locations derived from its resource identifier --
	for example, publishing metadata at both
	<tt>/.well-known/example-protected-resource</tt> and
	<tt>/.well-known/oauth-protected-resource</tt>.
      </t>
      <section anchor="PRConfigurationRequest">
        <name>Protected Resource Metadata Request</name>
        <t>
	  A protected resource metadata document <bcp14>MUST</bcp14> be queried using an HTTP
	  <tt>GET</tt> request at the previously specified URL.
        </t>
        <t>
	  The consumer of the metadata would make the following request when the
	  resource identifier is <tt>https://resource.example.com</tt>
	  and the well-known URI path suffix is <tt>oauth-protected-resource</tt>
	  to obtain the metadata,
	  since the resource identifier contains no path component:
        </t>
        <sourcecode type="http-message"><![CDATA[
  GET /.well-known/oauth-protected-resource HTTP/1.1
  Host: resource.example.com
]]></sourcecode>
        <t>
	  If the resource identifier value contains a path or query component,
	  any terminating slash (<tt>/</tt>) following the host component
	  <bcp14>MUST</bcp14> be removed before inserting
	  <tt>/.well-known/</tt> and the well-known URI path suffix
	  between the host component and the path and/or query components.
	  The consumer of the metadata would make the following request when the
	  resource identifier is <tt>https://resource.example.com/resource1</tt>
	  and the well-known URI path suffix is <tt>oauth-protected-resource</tt>
	  to obtain the metadata,
	  since the resource identifier contains a path component:
        </t>
        <sourcecode type="http-message"><![CDATA[
  GET /.well-known/oauth-protected-resource/resource1 HTTP/1.1
  Host: resource.example.com
]]></sourcecode>
        <t>
	  Using path components enables supporting multiple resources per host.
	  This is required in some multi-tenant hosting configurations.
	  This use of <tt>.well-known</tt> is for supporting
	  multiple resources per host; unlike its use in
	  <xref target="RFC8615"/>, it does not provide
	  general information about the host.
        </t>
      </section>
      <section anchor="PRConfigurationResponse">
        <name>Protected Resource Metadata Response</name>
        <t>
	  The response is a set of metadata parameters about the protected resource's
	  configuration.
	  A successful response <bcp14>MUST</bcp14> use the 200 OK HTTP status code and return
	  a JSON object using the <tt>application/json</tt> content type
	  that contains a set of metadata parameters as its members
	  that are a subset of the metadata parameters defined in
	  <xref target="PRMetadata"/>.
	  Additional metadata parameters <bcp14>MAY</bcp14> be defined and used;
	  any metadata parameters that are not understood <bcp14>MUST</bcp14> be ignored.
        </t>
        <t>
	  Parameters with multiple values are represented as JSON arrays.
	  Parameters with zero values <bcp14>MUST</bcp14> be omitted from the response.
        </t>
        <t>
	  An error response uses the applicable HTTP status code value.
        </t>
        <t keepWithNext="true">The following is a non-normative example response:</t>
        <sourcecode type="http-message"><![CDATA[
  HTTP/1.1 200 OK
  Content-Type: application/json

  {
   "resource":
     "https://resource.example.com",
   "authorization_servers":
     ["https://as1.example.com",
      "https://as2.example.net"],
   "bearer_methods_supported":
     ["header", "body"],
   "scopes_supported":
     ["profile", "email", "phone"],
   "resource_documentation":
     "https://resource.example.com/resource_documentation.html"
  }
]]></sourcecode>
      </section>
      <section anchor="PRConfigurationValidation">
        <name>Protected Resource Metadata Validation</name>
        <t>
	  The <tt>resource</tt> value returned <bcp14>MUST</bcp14> be identical to
	  the protected resource's resource identifier value into which
	  the well-known URI path suffix was inserted to create the URL
	  used to retrieve the metadata.
	  If these values are not identical, the data contained in the response <bcp14>MUST NOT</bcp14> be used.
        </t>
        <t>
	  If the protected resource metadata was retrieved from a URL
	  returned by the protected resource via the <tt>WWW-Authenticate</tt>
          <tt>resource_metadata</tt> parameter, then
	  the <tt>resource</tt> value returned <bcp14>MUST</bcp14> be identical to
	  the URL that the client used to make the request to the resource server.
	  If these values are not identical, the data contained in the response <bcp14>MUST NOT</bcp14> be used.
        </t>
        <t>
	  These validation actions can thwart impersonation attacks,
	  as described in <xref target="Impersonation"/>.
        </t>
        <t>
	  The recipient <bcp14>MUST</bcp14> validate that any signed metadata was signed
	  by a key belonging to the issuer and that the signature is valid.
	  If the signature does not validate or the issuer is not trusted,
	  the recipient <bcp14>SHOULD</bcp14> treat this as an error condition.
        </t>
      </section>
    </section>
    <section anchor="ASMetadata">
      <name>Authorization Server Metadata</name>
      <t>
	To support use cases in which the set of legitimate protected resources
	to use with the authorization server is enumerable,
	this specification defines the authorization server metadata parameter
	<tt>protected_resources</tt>,
	which enables the authorization server to explicitly list the protected resources.
	Note that if the set of legitimate authorization servers
	to use with a protected resource is also enumerable,
	lists in the authorization server metadata and protected resource metadata
	should be cross-checked against one another for consistency
	when these lists are used by the application profile.
      </t>
      <t>
	The following authorization server metadata parameter
	is defined by this specification and is registered in the 
	"OAuth Authorization Server Metadata" registry established in
"<xref target="RFC8414" format="title"/>" <xref target="RFC8414" format="default"/>.

      </t>
      <dl newline="true" spacing="normal">
        <dt>protected_resources</dt>
        <dd>
	    <bcp14>OPTIONAL</bcp14>.
	    JSON array containing a list of resource identifiers for OAuth protected resources
	    that can be used with this authorization server.
	    Authorization servers <bcp14>MAY</bcp14> choose not to advertise some supported protected resources
	    even when this parameter is used.
	    In some use cases, the set of protected resources will not be enumerable,
	    in which case this metadata parameter will not be present.
	  </dd>
      </dl>
    </section>
    <section anchor="WWW-Authenticate">
      <name>Use of WWW-Authenticate for Protected Resource Metadata</name>
      <t>
	A protected resource <bcp14>MAY</bcp14> use the <tt>WWW-Authenticate</tt>
        HTTP response header field, as discussed in <xref target="RFC9110"/>,
	to return a URL to its protected resource metadata to the client.
	The client can then retrieve protected resource metadata as described in <xref target="PRConfig"/>.
	The client might then, for instance, determine what authorization server to use for the resource
	based on protected resource metadata retrieved.
      </t>
      <t>
	A typical end-to-end flow doing so is as follows.
	Note that while this example uses the OAuth 2.0 authorization code flow,
	a similar sequence could also be implemented with any other OAuth flow.
      </t>
      <figure>
        <name>Sequence Diagram</name>
        <artset>
          <artwork type="svg" name="sequence.svg">
			<svg xmlns="http://www.w3.org/2000/svg" baseProfile="tiny" height="550" version="1.2" viewBox="0 0 478 550" width="478">
              <path d="M-252,-405.0000000000001 L-252,0" fill="none" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <rect fill="white" height="48" stroke="black" stroke-width="1" width="62" x="67.5" y="15.5"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="79.23567708333343" y="44.791666666666536">
			    Client  </text>
              <rect fill="white" height="48" stroke="black" stroke-width="1" width="62" x="67.5" y="468.5"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="79.23567708333343" y="497.35416666666663">
			    Client  </text>
              <path d="M-53,-405.00000000000017 L-53,0" fill="none" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <rect fill="white" height="48" stroke="black" stroke-width="1" width="85" x="255.5" y="15.5"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="266.95833333333337" y="37.03124999999985">
			    Resource  </text>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="276.11523437500006" y="52.552083333333165">
			    Server  </text>
              <rect fill="white" height="48" stroke="black" stroke-width="1" width="85" x="255.5" y="468.5"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="266.95833333333337" y="489.59375">
			    Resource  </text>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="276.11523437500006" y="505.1145833333333">
			    Server  </text>
              <path d="M56,-405.00000000000017 L56,0" fill="none" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <rect fill="white" height="48" stroke="black" stroke-width="1" width="112" x="350.5" y="15.5"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="362.00390625" y="37.03124999999985">
			    Authorization  </text>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="384.7936197916667" y="52.552083333333165">
			    Server  </text>
              <rect fill="white" height="48" stroke="black" stroke-width="1" width="112" x="350.5" y="468.5"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="362.00390625" y="489.59375">
			    Authorization  </text>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="384.7936197916667" y="505.1145833333333">
			    Server  </text>
              <rect fill="white" height="15.333333333333314" width="137.99479166666669" x="129.25911458333337" y="76.8333333333332"/>
              <rect fill="white" height="15.333333333333314" width="147.43489583333334" x="124.53906250000003" y="92.35416666666652"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="129.25911458333337" y="90.16666666666653">
			    1. Resource Request  </text>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="124.53906250000003" y="105.68749999999984">
			    Without Access Token  </text>
              <path d="M-251.4641927083333,-360 L-53.02278645833337,-360" fill="none" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <path d="M-54,-360 L-54,-360 L-62,-368 L-62,-360 L-62,-352 L-54,-360" fill="black" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <rect fill="white" height="15.333333333333314" width="147.08984375" x="124.71158854166669" y="122.2083333333332"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="124.71158854166669" y="135.54166666666654">
			    2. WWW-Authenticate  </text>
              <path d="M-251.4641927083333,-330 L-53.022786458333314,-330" fill="none" stroke="black" stroke-dasharray="5,3" stroke-width="1" transform="translate(350.5 468.5)"/>
              <path d="M-251,-330 L-251,-330 L-243,-338 L-243,-330 L-243,-322 L-251,-330" fill="black" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <rect fill="white" height="15.333333333333314" width="143.18359375" x="126.66471354166669" y="152.0624999999999"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="126.66471354166669" y="165.39583333333323">
			    3. Fetch RS Metadata  </text>
              <path d="M-251.4641927083333,-300 L-53.022786458333314,-300" fill="none" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <path d="M-54,-300 L-54,-300 L-62,-308 L-62,-300 L-62,-292 L-54,-300" fill="black" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <rect fill="white" height="15.333333333333314" width="170.93750000000003" x="112.78776041666671" y="181.91666666666657"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="112.78776041666671" y="195.24999999999991">
			    4. RS Metadata Response  </text>
              <path d="M-251.4641927083333,-270 L-53.02278645833326,-270" fill="none" stroke="black" stroke-dasharray="5,3" stroke-width="1" transform="translate(350.5 468.5)"/>
              <path d="M-251,-270 L-251,-270 L-243,-278 L-243,-270 L-243,-262 L-251,-270" fill="black" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <path d="M-340,-257 L-340,-257 L-172,-257 L-164,-249 L-164,-209 L-340,-209 L-340,-257" fill="white" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <path d="M-171.5592447916666,-256.72916666666674 L-171.5592447916666,-248.72916666666674 L-163.5592447916666,-248.72916666666674" fill="none" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="15.882812500000057" y="232.86458333333326">
			    5. Validate RS Metadata,  </text>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="15.882812500000057" y="248.3854166666666">
			    Build AS Metadata URL  </text>
              <rect fill="white" height="15.333333333333371" width="143.04036458333337" x="181.07552083333337" y="272.66666666666663"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="181.07552083333337" y="285.99999999999994">
			    6. Fetch AS Metadata  </text>
              <path d="M-251.46419270833326,-179 L55.65559895833337,-179" fill="none" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <path d="M55,-179 L55,-179 L47,-187 L47,-179 L47,-171 L55,-179" fill="black" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <rect fill="white" height="15.333333333333314" width="170.79427083333337" x="167.19856770833337" y="302.5208333333333"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="167.19856770833337" y="315.85416666666663">
			    7. AS Metadata Response  </text>
              <path d="M-251.46419270833326,-149 L55.65559895833337,-149" fill="none" stroke="black" stroke-dasharray="5,3" stroke-width="1" transform="translate(350.5 468.5)"/>
              <path d="M-251,-149 L-251,-149 L-243,-157 L-243,-149 L-243,-141 L-251,-149" fill="black" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <path d="M-257,-136 L-257,-136 L54,-136 L62,-128 L62,-89 L-257,-89 L-257,-136" fill="white" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <path d="M53.65559895833337,-136.125 L53.65559895833337,-128.125 L61.65559895833337,-128.125" fill="none" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="152.48828125000006" y="353.46874999999994">
			    8-9. OAuth Authorization Flow  </text>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="152.48828125000006" y="368.9895833333333">
			    Client Obtains Access Token  </text>
              <rect fill="white" height="15.333333333333314" width="146.47786458333331" x="125.01757812500006" y="393.2708333333333"/>
              <rect fill="white" height="15.333333333333371" width="123.32031250000003" x="136.5963541666667" y="408.79166666666663"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="125.01757812500006" y="406.60416666666663">
			    10. Resource Request  </text>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="136.5963541666667" y="422.12499999999994">
			    With Access Token  </text>
              <path d="M-251.46419270833326,-43 L-53.02278645833326,-43" fill="none" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <path d="M-54,-43 L-54,-43 L-62,-51 L-62,-43 L-62,-35 L-54,-43" fill="black" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
              <rect fill="white" height="15.333333333333371" width="156.35416666666669" x="120.07942708333337" y="438.6458333333333"/>
              <text fill="black" font-family="sans-serif" font-size="13.333333333333334" x="120.07942708333337" y="451.97916666666663">
			    11. Resource Response  </text>
              <path d="M-251.46419270833326,-13 L-53.022786458333314,-13" fill="none" stroke="black" stroke-dasharray="5,3" stroke-width="1" transform="translate(350.5 468.5)"/>
              <path d="M-251,-13 L-251,-13 L-243,-21 L-243,-13 L-243,-5 L-251,-13" fill="black" stroke="black" stroke-width="1" transform="translate(350.5 468.5)"/>
            </svg>
          </artwork>
          <artwork type="ascii-art" name="sequence.txt"><![CDATA[
     +----------+              +----------+    +---------------+
     |  Client  |              | Resource |    | Authorization |
     |          |              |  Server  |    |    Server     |
     +----+-----+              +----+-----+    +-------+-------+
          |                         |                  |
          |  1. Resource Request    |                  |
          | ----------------------> |                  |
          |  Without Access Token   |                  |
          |                         |                  |
          |                         |                  |
          |   2. WWW-Authenticate   |                  |
          | <---------------------- |                  |
          |                         |                  |
          |                         |                  |
          |   3. Fetch RS Metadata  |                  |
          | ----------------------> |                  |
          |                         |                  |
          |                         |                  |
          | 4. RS Metadata Response |                  |
          | <---------------------- |                  |
          |                         |                  |
+---------+---------------+         |                  |
| 5. Validate RS Metadata |         |                  |
| Build AS Metadata URL   |         |                  |
+---------+---------------+         |                  |
          |                         |                  |
          |   6. Fetch AS Metadata  |                  |
          | ------------------------+----------------> |
          |                         |                  |
          |                         |                  |
          | 7. AS Metadata Response |                  |
          | <-----------------------+----------------- |
          |                         |                  |
        +-+-------------------------+------------------+-+
        |       8-9. OAuth Authorization Code Flow       |
        |            Client Obtains Access Token         |
        +-+-------------------------+------------------+-+
          |                         |                  |
          |  10. Resource Request   |                  |
          | ----------------------> |                  |
          |  With Access Token      |                  |
          |                         |                  |
          |                         |                  |
          |  11. Resource Response  |                  |
          | <---------------------- |                  |
          |                         |                  |
     +----+-----+              +----+-----+    +-------+-------+
     |  Client  |              | Resource |    | Authorization |
     |          |              |  Server  |    |    Server     |
     +----------+              +----------+    +---------------+
]]></artwork>
        </artset>
      </figure>
      <ol spacing="normal" type="1"><li>
          <t>
	    The client makes a request to a protected resource without presenting an access token.
          </t>
        </li>
        <li>
          <t>
	    The resource server responds with a <tt>WWW-Authenticate</tt> header including the URL of the protected resource metadata.
          </t>
        </li>
        <li>
          <t>
	    The client fetches the protected resource metadata from this URL.
          </t>
        </li>
        <li>
          <t>
	    The resource server responds with the protected resource metadata
	    according to <xref target="PRConfigurationResponse"/>.
          </t>
        </li>
        <li>
          <t>
	    The client validates the protected resource metadata,
	    as described in <xref target="PRConfigurationValidation"/>,
            and builds the authorization server metadata URL from an issuer
            identifier in the resource metadata according to <xref target="RFC8414"/>.
          </t>
        </li>
        <li>
          <t>
	    The client makes a request to fetch the authorization server metadata.
          </t>
        </li>
        <li>
          <t>
	    The authorization server responds with the authorization server metadata document according to <xref target="RFC8414"/>.
          </t>
        </li>
        <li>
          <t>
	    The client directs the user agent to the authorization server to begin the authorization flow.
          </t>
        </li>
        <li>
          <t>
	    The authorization exchange is completed and the authorization server returns an access token to the client.
          </t>
        </li>
        <li>
          <t>
	    The client repeats the resource request from step 1, presenting the newly obtained access token.
          </t>
        </li>
        <li>
          <t>
	    The resource server returns the requested protected resource.
          </t>
        </li>
      </ol>
      <section anchor="WWW-Authenticate-Response">
        <name>WWW-Authenticate Response</name>
        <t>
	  This specification introduces a new parameter in the
	  <tt>WWW-Authenticate</tt> HTTP response header field
	  to indicate the protected resource metadata URL:
        </t>
        <dl newline="true" spacing="normal">
          <dt>resource_metadata:</dt>
          <dd>
		The URL of the protected resource metadata.
	      </dd>
        </dl>
        <t keepWithNext="true">The response below is an example of a <tt>WWW-Authenticate</tt> header that includes the resource identifier.</t>
        <sourcecode type="http-message"><![CDATA[
HTTP/1.1 401 Unauthorized
WWW-Authenticate: Bearer resource_metadata=
  "https://resource.example.com/.well-known/oauth-protected-resource"
]]></sourcecode>
        <t>
	  The HTTP status code in the example response above
	  is defined by <xref target="RFC6750"/>.
        </t>
        <t>
	  This parameter <bcp14>MAY</bcp14> also be used in
	  <tt>WWW-Authenticate</tt> responses using
	  <tt>authorization</tt> schemes other than
	  <tt>"Bearer"</tt> <xref target="RFC6750"/>,
	  such as the <tt>DPoP</tt> scheme
	  defined by <xref target="RFC9449"/>.
        </t>
        <t>
	  The <tt>resource_metadata</tt> parameter <bcp14>MAY</bcp14> be combined with other parameters defined in other extensions,
	  such as the <tt>max_age</tt> parameter defined by <xref target="RFC9470"/>.
        </t>
      </section>
      <section anchor="changes">
        <name>Changes to Resource Metadata</name>
        <t>
	  At any point, for any reason determined by the resource server,
	  the protected resource <bcp14>MAY</bcp14> respond with a new <tt>WWW-Authenticate</tt> challenge
	  that includes a value for the protected resource metadata URL to indicate that its metadata may have changed.
	  If the client receives such a <tt>WWW-Authenticate</tt> response,
	  it <bcp14>SHOULD</bcp14> retrieve the updated protected resource metadata
	  and use the new metadata values obtained, after validating them
	  as described in <xref target="PRConfigurationValidation"/>.
	  Among other things,
	  this enables a resource server to change which authorization servers it uses without any other coordination with clients.
        </t>
      </section>
      <section anchor="assumptions">
        <name>Client Identifier and Client Authentication</name>
        <t>
	  The way in which the client identifier is established at the authorization server is out of scope for this specification.
        </t>
        <t>


	  This specification is intended to be deployed in scenarios where the client has no prior knowledge about the resource server
	  and where the resource server might or might not have prior knowledge about the client.
        </t>
        <t>
	  There are some existing methods by which an unrecognized client can make use of an authorization server,
	  such as using Dynamic Client Registration <xref target="RFC7591"/>
	  to register the client prior to initiating the authorization flow.
	  Future OAuth extensions might define alternatives, such as using URLs to identify clients.
        </t>
      </section>
      <section anchor="compatibility">
        <name>Compatibility with Other Authentication Methods</name>
        <t>
	  Resource servers <bcp14>MAY</bcp14> return other <tt>WWW-Authenticate</tt> headers indicating various authentication schemes.
	  This allows the resource server to support clients that may or may not implement this specification
	  and allows clients to choose their preferred authentication scheme.
        </t>
      </section>
    </section>
    <section anchor="StringOps">
      <name>String Operations</name>
      <t>
	Processing some OAuth 2.0 messages requires comparing
	values in the messages to known values. For example, the
	member names in the metadata response might be
	compared to specific member names such as <tt>resource</tt>.  Comparing Unicode strings <xref target="UNICODE"/>,
	however, has significant security implications.
      </t>
      <t>
	Therefore, comparisons between JSON strings and other Unicode
	strings <bcp14>MUST</bcp14> be performed as specified below:

      </t>
      <ol spacing="normal" type="1"><li>
          <t>
	    Remove any JSON-applied escaping to produce an array of
	    Unicode code points.
          </t>
        </li>
        <li>
          <t>
	    Unicode Normalization <xref target="USA15"/> <bcp14>MUST NOT</bcp14>
	    be applied at any point to either the JSON string or
	    the string it is to be compared against.
          </t>
        </li>
        <li>
          <t>
	    Comparisons between the two strings <bcp14>MUST</bcp14> be performed as a
	    Unicode code-point-to-code-point equality comparison.
          </t>
        </li>
      </ol>
      <t>
	Note that this is the same equality comparison procedure as that described in
	<xref section="8.3" sectionFormat="of" target="RFC8259"/>.
      </t>
    </section>
    <section anchor="Security">
      <name>Security Considerations</name>
      <section anchor="TLSRequirements">
        <name>TLS Requirements</name>
        <t>
	  Implementations <bcp14>MUST</bcp14> support TLS.
	  They <bcp14>MUST</bcp14> follow the guidance in
	  <xref target="BCP195"/>,
	  which provides recommendations and requirements
	  for improving the security of deployed services that use TLS.
        </t>
        <t>
	  The use of TLS at the protected resource metadata URLs
	  protects against information disclosure and tampering.
        </t>
      </section>
      <section anchor="Scopes">
        <name>Scopes</name>
        <t>
					The <tt>scopes_supported</tt> parameter is the list of scopes the resource server is willing to disclose that it supports. It is not meant to indicate that an OAuth client should request all scopes in the list. The client <bcp14>SHOULD</bcp14> still follow OAuth best practices and request tokens with as limited a scope as possible for the given operation, as described in 
<xref section="2.3" sectionFormat="of" target="RFC9700">"Best Current Practice for OAuth 2.0 Security"</xref>.
        </t>
      </section>
      <section anchor="Impersonation">
        <name>Impersonation Attacks</name>
        <t>
	  TLS certificate checking <bcp14>MUST</bcp14> be performed by the client
	  as described in <xref target="RFC9525"/>
	  when making a protected resource metadata request.
	  Checking that the server certificate is valid for the resource identifier URL
	  prevents adversary-in-the-middle and DNS-based attacks.
	  These attacks could cause a client to be tricked into using an attacker's
	  resource server, which would enable impersonation of the legitimate protected resource.
	  If an attacker can accomplish this, they can access the resources
	  that the affected client has access to,
	  using the protected resource that they are impersonating.
        </t>
        <t>
	  An attacker may also attempt to impersonate a protected resource by publishing
	  a metadata document that contains a <tt>resource</tt> metadata parameter
	  using the resource identifier URL of the protected resource being impersonated
	  but that contains information of the attacker's choosing.
	  This would enable it to impersonate that protected resource, if accepted by the client.
	  To prevent this, the client <bcp14>MUST</bcp14> ensure that the resource identifier URL it is using
	  as the prefix for the metadata request exactly matches the value of
	  the <tt>resource</tt> metadata parameter
	  in the protected resource metadata document received by the client,
	  as described in <xref target="PRConfigurationValidation"/>.
        </t>
      </section>
      <section anchor="AudienceRestriction">
        <name>Audience-Restricted Access Tokens</name>
        <t>
      		If a client expects to interact with multiple resource servers, the client
      		<bcp14>SHOULD</bcp14> request audience-restricted access tokens using <xref target="RFC8707"/>,
      		and the authorization server <bcp14>SHOULD</bcp14> support audience-restricted access tokens.
        </t>
        <t>
      		Without audience-restricted access tokens, a malicious resource server (RS1) may be
      		able to use the <tt>WWW-Authenticate</tt> header to get a client
      		to request an access token with a scope used by a legitimate resource server (RS2), and
      		after the client sends a request to RS1, then RS1 could reuse the access token at RS2.
        </t>
        <t>
      		While this attack is not explicitly enabled by this specification and is possible in
      		a plain OAuth 2.0 deployment, it is made somewhat more likely by the use of
      		dynamically configured clients. As such, the use
      		of audience-restricted access tokens and Resource Indicators <xref target="RFC8707"/>
      		is <bcp14>RECOMMENDED</bcp14> when using the features in this specification.
        </t>
      </section>
      <section anchor="StandardFormat">
        <name>Publishing Metadata in a Standard Format</name>
        <t>
	  Publishing information about the protected resource in a standard format
	  makes it easier for both legitimate clients and attackers
	  to use the protected resource.
	  Whether a protected resource publishes its metadata in an ad hoc manner
	  or in the standard format defined by this specification,
	  the same defenses against attacks that might be mounted
	  that use this information should be applied.
        </t>
      </section>
      <section anchor="AuthorizationServers">
        <name>Authorization Servers</name>
        <t>
	  To support use cases in which the set of legitimate authorization servers
	  to use with the protected resource is enumerable,
	  this specification defines the <tt>authorization_servers</tt>
	  metadata parameter, which enables explicitly listing them.
	  Note that if the set of legitimate protected resources
	  to use with an authorization server is also enumerable,
	  lists in the protected resource metadata and authorization server metadata
	  should be cross-checked against one another for consistency
	  when these lists are used by the application profile.
        </t>
        <t>
	  Secure determination of appropriate authorization servers
	  to use with a protected resource for all use cases
	  is out of scope for this specification.
	  This specification assumes that the client has a means of determining
	  appropriate authorization servers to use with a protected resource
	  and that the client is using the correct metadata
	  for each protected resource.
	  Implementers need to be aware that if an inappropriate authorization server
	  is used by the client, an attacker may be able to act as
	  an adversary-in-the-middle proxy to a valid authorization server without
	  it being detected by the authorization server or the client.
        </t>
        <t>
	  The ways to determine the appropriate authorization servers to use
	  with a protected resource are, in general, application dependent.
          For instance, some protected resources are used with a
          fixed authorization server or a set of authorization servers,
          the locations of which may be known via out-of-band mechanisms.
          Alternatively, as described in this specification, the locations
          of the authorization servers could be published by the protected
          resource as metadata values.
	  In other cases, the set of authorization servers that can be used with
	  a protected resource can be dynamically changed
	  by administrative actions
	  or by changes to the set of authorization servers adhering to a trust framework.
	  Many other means of determining appropriate associations between
	  protected resources and authorization servers are also possible.
        </t>
      </section>
      <section anchor="SSRF">
        <name>Server-Side Request Forgery (SSRF)</name>
        <t>
					The OAuth client is expected to fetch the authorization server metadata based on the value of the issuer in the resource server metadata. Since this specification enables clients to interoperate with RSs and ASes it has no prior knowledge of, this opens a risk for Server-Side Request Forgery (SSRF) attacks by malicious users or malicious resource servers. Clients <bcp14>SHOULD</bcp14> take appropriate precautions against SSRF attacks, such as blocking requests to internal IP address ranges. Further recommendations can be found in the Open Worldwide Application Security Project (OWASP) SSRF Prevention Cheat Sheet <xref target="OWASP.SSRF"/>.
        </t>
      </section>
      <section anchor="phishing">
        <name>Phishing</name>
        <t>
      		This specification may be deployed in a scenario where the desired HTTP resource is identified by a user-selected URL. If this resource is malicious or compromised, it could mislead the user into revealing their account credentials or authorizing unwanted access to OAuth-controlled capabilities. This risk is reduced, but not eliminated, by following best practices for OAuth user interfaces, such as providing clear notice to the user, displaying the authorization server's domain name, supporting origin-bound phishing-resistant authenticators, supporting the use of password managers, and applying heuristic checks such as domain reputation.
        </t>
      </section>
      <section anchor="UnsignedMetadata">
        <name>Differences Between Unsigned and Signed Metadata</name>
        <t>
	  Unsigned metadata is integrity protected by the use of TLS at the site
	  where it is hosted.
	  This means that its security is dependent upon the Internet
	  Public Key Infrastructure using X.509 (PKIX), as described in <xref target="RFC9525"/>.
	  Signed metadata is additionally integrity protected by the JWS signature
	  applied by the issuer, which is not dependent upon the Internet PKI.
        </t>
        <t>
	  When using unsigned metadata, the party issuing the metadata
	  is the protected resource itself, which is represented by the
	  <tt>resource</tt> value in the metadata,
	  whereas when using signed metadata, the party issuing the metadata
	  is represented by the <tt>iss</tt> (issuer) claim
	  in the signed metadata.
	  When using signed metadata, applications can make trust decisions
	  based on the issuer that performed the signing --
	  information that is not available when using unsigned metadata.
	  How these trust decisions are made is out of scope for this specification.
        </t>
      </section>
      <section anchor="caching">
        <name>Metadata Caching</name>
        <t>
	  Protected resource metadata is retrieved using an HTTP
	  <tt>GET</tt> request,
	  as specified in <xref target="PRConfigurationRequest"/>.
	  Normal HTTP caching behaviors apply, meaning that the <tt>GET</tt> request may retrieve
	  a cached copy of the content, rather than the latest copy.
	  Implementations should utilize HTTP caching directives such as
	  <tt>Cache-Control</tt>
	  with <tt>max-age</tt>,
	  as defined in <xref target="RFC9111"/>,
	  to enable caching of retrieved metadata for appropriate time periods.
        </t>
      </section>
    </section>
    <section anchor="IANA">
      <name>IANA Considerations</name>
      <t>
	Values are registered via Specification Required <xref target="RFC8126"/>.
        Registration requests should be sent to &lt;oauth-ext-review@ietf.org&gt;
	to initiate a two-week review period.
	However, to allow for the allocation of values prior to publication
	of the final version of a specification,
	the designated experts may approve registration once they are satisfied
	that the specification will be completed and published.
	However, if the specification is not completed and published
	in a timely manner, as determined by the designated experts,
	the designated experts may request that IANA withdraw the registration.
      </t>
      <t>
	Registration requests sent to the mailing list for review should use
	an appropriate subject
	(e.g., "Request to register OAuth Protected Resource Metadata: example").
      </t>
      <t>
	Within the review period, the designated experts will either approve or
	deny the registration request, communicating this decision to the review list and IANA.
	Denials should include an explanation and, if applicable, suggestions as to how to make
	the request successful.    If the designated experts are not responsive, the registration requesters should contact IANA to escalate the process. 
      </t>
      <t>
        Designated experts should apply the following criteria when reviewing
        proposed registrations: They must be unique -- that is, they should not 
        duplicate existing functionality; they are likely generally applicable, 
        as opposed to being used for a single application; and they are clear 
        and fit the purpose of the registry.
      </t>
      <t>
	IANA must only accept registry updates from the designated experts and should direct
	all requests for registration to the review mailing list.
      </t>

      <t>
In order to enable broadly informed review of registration decisions, there should be multiple designated experts to represent the perspectives of different applications using this specification.  
	In cases where registration may be perceived as a conflict of interest for a particular expert,
	that expert should defer to the judgment of the other experts.
      </t>
      <t>
	 The mailing list is used to enable
	 public review of registration requests, which enables both designated experts
	 and other interested parties to provide feedback on proposed registrations.
         Designated experts may allocate values prior to publication of the 
         final specification.  This allows authors to receive guidance from 
         the designated experts early, so any identified issues can be fixed 
         before the final specification is published.
      </t>
      <section anchor="PRMetadataReg">
        <name>OAuth Protected Resource Metadata Registry</name>
        <t>
	  This specification establishes the
	  "OAuth Protected Resource Metadata" registry
	  for OAuth 2.0 protected resource metadata names.
	  The registry records the protected resource metadata parameter
	  and a reference to the specification that defines it.
        </t>
        <section anchor="PRMetadataTemplate">
          <name>Registration Template</name>
          <dl newline="true" spacing="normal">
            <dt>Metadata Name:</dt>
            <dd>
                The name requested (e.g., "resource").
		This name is case sensitive.
		Names may not match other registered names in a case-insensitive manner
		unless the designated experts state that there is a compelling reason
		to allow an exception.
              </dd>
            <dt>Metadata Description:</dt>
            <dd>
                Brief description of the metadata (e.g., "Resource identifier URL").
              </dd>
            <dt>Change Controller:</dt>
            <dd>
                For IETF Stream RFCs, list "IETF".
		For others, give the name of the responsible party.
		Other details (e.g., postal address, email address, home page URI) may also be included.
              </dd>
            <dt>Specification Document(s):</dt>
            <dd>
                Reference to the document or documents that specify the parameter,
		preferably including URIs that
                can be used to retrieve copies of the documents.
		An indication of the relevant
                sections may also be included but is not required.
              </dd>
          </dl>
        </section>
        <section anchor="PRMetadataContents">
          <name>Initial Registry Contents</name>
          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>resource</tt></dd>
            <dt>Metadata Description:</dt><dd> Protected resource's resource
            identifier URL</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>
          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>authorization_servers</tt></dd>
            <dt>Metadata Description:</dt><dd>JSON array containing a list of
            OAuth authorization server issuer identifiers</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>
          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>jwks_uri</tt></dd>
            <dt>Metadata Description:</dt><dd>URL of the protected resource's
            JWK Set document</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>
          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>scopes_supported</tt></dd>
            <dt>Metadata Description:</dt><dd>JSON array containing a list of
            the OAuth 2.0 scope values that are used in authorization
            requests to request access to this protected resource</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>
          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>bearer_methods_supported</tt></dd>
            <dt>Metadata Description:</dt><dd>JSON array containing a list of
            the OAuth 2.0 bearer token presentation methods that this
            protected resource supports</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>
          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>resource_signing_alg_values_supported</tt></dd>
            <dt>Metadata Description:</dt><dd>JSON array containing a list of
            the JWS signing algorithms (<tt>alg</tt> values) supported by the
            protected resource for signed content</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>
          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>resource_name</tt></dd>
            <dt>Metadata Description:</dt><dd>Human-readable name of the
            protected resource</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>
          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>resource_documentation</tt></dd>
            <dt>Metadata Description:</dt><dd>URL of a page containing
            human-readable information that developers might want or need to
            know when using the protected resource</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>
          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>resource_policy_uri</tt></dd>
            <dt>Metadata Description:</dt><dd>URL of a page containing
            human-readable information about the protected resource's
            requirements on how the client can use the data provided by the
            protected resource</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>
          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>resource_tos_uri</tt></dd>
            <dt>Metadata Description:</dt><dd>URL of a page containing
            human-readable information about the protected resource's terms of
            service</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>
          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>tls_client_certificate_bound_access_tokens</tt></dd>
            <dt>Metadata Description:</dt><dd>Boolean value indicating
            protected resource support for mutual-TLS client certificate-bound
            access tokens</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>
          <dl spacing="compact" newline="false">
	    <dt>Metadata Name:</dt><dd><tt>authorization_details_types_supported</tt></dd>
	    <dt>Metadata Description:</dt><dd>JSON array containing a list of
	    the authorization details <tt>type</tt> values supported by the
	    resource server when the <tt>authorization_details</tt> request
	    parameter is used</dd>
	    <dt>Change Controller:</dt><dd>IETF</dd>
	    <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>

          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>dpop_signing_alg_values_supported</tt></dd>
            <dt>Metadata Description:</dt><dd>JSON array containing a list of
            the JWS <tt>alg</tt> values supported by the resource server for validating
            DPoP proof JWTs</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>
          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>dpop_bound_access_tokens_required</tt></dd>
            <dt>Metadata Description:</dt><dd>Boolean value specifying
            whether the protected resource always requires the use of
            DPoP-bound access tokens</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="PRMetadata"/> of RFC 9728</dd>
          </dl>
          <dl spacing="compact" newline="false">
	    <dt>Metadata Name:</dt><dd><tt>signed_metadata</tt></dd>
	    <dt>Metadata Description:</dt><dd>Signed JWT containing metadata
	    parameters about the protected resource as claims</dd>
	    <dt>Change Controller:</dt><dd>IETF</dd>
	    <dt>Specification Document(s):</dt><dd><xref target="SignedMetadata"/> of RFC 9728</dd>
          </dl>
        </section>
      </section>
      <section anchor="ASMetadataReg">
        <name>OAuth Authorization Server Metadata Registry</name>
        <t>
	  IANA has registered the following authorization server metadata parameter
	  in the
	  "OAuth Authorization Server Metadata" registry established in
"<xref target="RFC8414" format="title"/>" <xref target="RFC8414" format="default"/>.
        </t>
        <section anchor="ASMetadataContents">
          <name>Registry Contents</name>
          <dl spacing="compact" newline="false">
            <dt>Metadata Name:</dt><dd><tt>protected_resources</tt></dd>
            <dt>Metadata Description:</dt><dd>JSON array containing a list of
            resource identifiers for OAuth protected resources</dd>
            <dt>Change Controller:</dt><dd>IETF</dd>
            <dt>Specification Document(s):</dt><dd><xref target="ASMetadata"/> of RFC 9728</dd>
          </dl>
        </section>
      </section>
      <section anchor="WellKnownRegistry">
        <name>Well-Known URIs Registry</name>
        <t>
	  This specification registers the well-known URI defined in
	  <xref target="PRConfig"/> in the 
	  "Well-Known URIs" registry <xref target="IANA.well-known"/>.
        </t>
        <section anchor="WellKnownContents">
          <name>Registry Contents</name>
          <dl spacing="compact" newline="false">
	    <dt>URI Suffix:</dt><dd><tt>oauth-protected-resource</tt></dd>
	    <dt>Reference:</dt><dd><xref target="PRConfig"/> of RFC 9728</dd>
	    <dt>Status:</dt><dd>permanent</dd>
	    <dt>Change Controller:</dt><dd>IETF</dd>
	    <dt>Related Information:</dt><dd>(none)</dd>
          </dl>
        </section>
      </section>
    </section>
  </middle>
  <back>

    <displayreference target="RFC7518" to="JWA"/>
    <displayreference target="RFC7516" to="JWE"/>
    <displayreference target="RFC7517" to="JWK"/>
    <displayreference target="RFC7515" to="JWS"/>
    <displayreference target="RFC7519" to="JWT"/>

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml9/reference.BCP.047.xml"/> 
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6749.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6750.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9111.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7591.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8414.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8615.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8705.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8707.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9110.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9396.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9449.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9525.xml"/>

        <xi:include href="https://bib.ietf.org/public/rfc/bibxml9/reference.BCP.0195.xml"/> 

        <reference anchor="USA15" target="https://www.unicode.org/reports/tr15/">
          <front>
            <title>Unicode Normalization Forms</title>
            <author fullname="Ken Whistler" initials="K." surname="Whistler" role="editor">
	  </author>
            <date day="14" month="August" year="2024"/>
          </front>
          <seriesInfo name="Unicode Standard Annex" value="#15"/>
        </reference>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7519.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7515.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7516.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7518.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7517.xml"/>
        <reference anchor="UNICODE" target="https://www.unicode.org/versions/latest/">
          <front>
            <title abbrev="Unicode">The Unicode Standard</title>
            <author>
              <organization>The Unicode Consortium</organization>
              <address/>
            </author>
            <date/>
          </front>
      </reference>
        <reference anchor="IANA.Language" target="https://www.iana.org/assignments/language-subtag-registry">
          <front>
            <title>Language Subtag Registry</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7033.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8620.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9470.xml"/>

        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9700.xml"/>

        <reference anchor="OpenID.Discovery" target="https://openid.net/specs/openid-connect-discovery-1_0.html">
          <front>
            <title>OpenID Connect Discovery 1.0 incorporating errata set 2</title>
            <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
              <organization abbrev="NAT.Consulting (was at NRI)">NAT.Consulting</organization>
            </author>
            <author fullname="John Bradley" initials="J." surname="Bradley">
              <organization abbrev="Yubico (was at Ping Identity)">Yubico</organization>
            </author>
            <author fullname="Michael B. Jones" initials="M." surname="Jones">
              <organization abbrev="Self-Issued Consulting (was at Microsoft)">Self-Issued Consulting</organization>
            </author>
            <author fullname="Edmund Jay" initials="E." surname="Jay">
              <organization abbrev="Illumila">Illumila</organization>
            </author>
            <date day="15" month="December" year="2023"/>
          </front>
        </reference>
        <reference anchor="IANA.well-known" target="https://www.iana.org/assignments/well-known-uris">
          <front>
            <title>Well-Known URIs</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>

        <reference anchor="IANA.JOSE" target="https://www.iana.org/assignments/jose">
          <front>
            <title>JSON Web Signature and Encryption Algorithms</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
        <reference anchor="OWASP.SSRF" target="https://cheatsheetseries.owasp.org/cheatsheets/Server_Side_Request_Forgery_Prevention_Cheat_Sheet.html">
          <front>
            <title>OWASP Server-Side Request Forgery Prevention Cheat Sheet</title>
            <author>
              <organization>OWASP Foundation</organization>
            </author>
          </front>
        </reference>
        <reference anchor="FAPI.MessageSigning" target="https://openid.net/specs/fapi-2_0-message-signing.html">
          <front>
            <title>FAPI 2.0 Message Signing (Draft)</title>
            <author fullname="Dave Tonge" initials="D." surname="Tonge">
              <organization abbrev="Moneyhub">Moneyhub Financial Technology</organization>
            </author>
            <author fullname="Daniel Fett" initials="D." surname="Fett">
              <organization>Authlete</organization>
            </author>
            <date day="24" month="March" year="2023"/>
          </front>
        </reference>
      </references>
    </references>
    <section anchor="Acknowledgements" numbered="false">
      <name>Acknowledgements</name>
      <t>The authors of this specification would like to thank the attendees
      of the IETF 115 OAuth and HTTP API Working Group meetings and the
      attendees of subsequent OAuth Working Group meetings for their input on
      this specification.  We would also like to thank <contact
      fullname="Amanda Baber"/>, <contact fullname="Mike Bishop"/>, <contact
      fullname="Ralph Bragg"/>, <contact fullname="Brian Campbell"/>, <contact
      fullname="Deb Cooley"/>, <contact fullname="Gabriel Corona"/>, <contact fullname="Roman Danyliw"/>,
      <contact fullname="Vladimir Dzhuvinov"/>,
      <contact fullname="George Fletcher"/>, <contact fullname="Arnt
      Gulbrandsen"/>, <contact fullname="Pieter Kasselman"/>, <contact
      fullname="Murray Kucherawy"/>, <contact fullname="David Mandelberg"/>,
      <contact fullname="Tony Nadalin"/>, <contact fullname="Francesca
      Palombini"/>, <contact fullname="John Scudder"/>, <contact
      fullname="Rifaat Shekh-Yusef"/>, <contact fullname="Filip Skokan"/>,
      <contact fullname="Orie Steele"/>, <contact fullname="Atul
      Tulshibagwale"/>, <contact fullname="Éric Vyncke"/>, <contact
      fullname="Paul Wouters"/>, and <contact fullname="Bo Wu"/> for their
      contributions to the specification.
</t>
    </section>
  </back>
</rfc>
