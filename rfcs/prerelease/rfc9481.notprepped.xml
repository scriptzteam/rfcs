<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc [
 <!ENTITY nbsp    "&#160;">
 <!ENTITY zwsp   "&#8203;">
 <!ENTITY nbhy   "&#8209;">
 <!ENTITY wj     "&#8288;">
]> 

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" 
	submissionType="IETF" 
	category="std"
	consensus="true" 	
	docName="draft-ietf-lamps-cmp-algorithms-16" 
	number="9481"
	ipr="trust200902" 
	obsoletes="" 
	updates="4210" 
	xml:lang="en" 
	tocInclude="true" 
	tocDepth="3" 
	symRefs="true" 
	sortRefs="true" 
	version="3">

	<front>
	<title abbrev="CMP Algorithms">Certificate Management Protocol (CMP) Algorithms</title>
	<seriesInfo name="RFC" value="9481"/>
	<author fullname="Hendrik Brockhaus" initials="H." surname="Brockhaus">
	  <organization abbrev="Siemens">Siemens AG</organization>
	  <address>
	    <postal>
	      <street>Werner-von-Siemens-Strasse 1</street>
	      <code>80333</code>
	      <city>Munich</city>
	      <country>Germany</country>
	    </postal>
	    <email>hendrik.brockhaus@siemens.com</email>
	    <uri>https://www.siemens.com</uri>
	  </address>
	</author>

	<author fullname="Hans Aschauer" initials="H." surname="Aschauer">
	  <organization abbrev="Siemens">Siemens AG</organization>
	  <address>
	    <postal>
	      <street>Werner-von-Siemens-Strasse 1</street>
	      <code>80333</code>
	      <city>Munich</city>
	      <country>Germany</country>
	    </postal>
	    <email>hans.aschauer@siemens.com</email>
	    <uri>https://www.siemens.com</uri>
	  </address>
	</author>

	<author fullname="Mike Ounsworth" initials="M." surname="Ounsworth">
	  <organization abbrev="Entrust">Entrust</organization>
	  <address>
	    <postal>
	      <street>1187 Park Place</street>
	      <region>MN</region>
	      <code>55379</code>
	      <city>Minneapolis</city>
	      <country>United States of America</country>
	    </postal>
	    <email>mike.ounsworth@entrust.com</email>
	    <uri>https://www.entrust.com</uri>
	  </address>
	</author>

	<author fullname="John Gray" initials="J." surname="Gray">
	  <organization abbrev="Entrust">Entrust</organization>
	  <address>
	    <postal>
	      <street>1187 Park Place</street>
	      <region>MN</region>
	      <code>55379</code>
	      <city>Minneapolis</city>
	      <country>United States of America</country>
	    </postal>
	    <email>john.gray@entrust.com</email>
	    <uri>https://www.entrust.com</uri>
	  </address>
	</author>
	<date year="2023" month="November"/>
	<area>sec</area>
	<workgroup>lamps</workgroup>
	<keyword>CMP</keyword>
		<abstract>
			<t>This document describes the conventions for using several cryptographic algorithms with the Certificate Management Protocol (CMP).  CMP is used to enroll and further manage the lifecycle of X.509 certificates.  This document also updates the algorithm use profile from Appendix D.2 of RFC 4210.</t>
		</abstract>
	</front>
	<middle>
		<section anchor="Introduction">
<name>Introduction</name>
		  <t><xref target="RFC4210" sectionFormat="of" section="D.2"/> contains a set of algorithms that is mandatory to be supported by implementations conforming to <xref target="RFC4210"/>. These algorithms were appropriate at the time CMP was released, but as cryptographic algorithms weaken over time, some of them should no longer be used.		  
		  In general, new attacks are emerging due to research in cryptanalysis or an increase in computing power. New algorithms were introduced that are more resistant to today's attacks.</t>
			<t>This document lists current cryptographic algorithms that can be used with CMP to offer an easier way to maintain the list of suitable algorithms over time.</t>
			<section anchor="Terminology">
<name>Terminology</name>
			          <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
				<t>In the following sections, ASN.1 values and types are used to indicate where algorithm identifier and output values are provided. These ASN.1 values and types are defined in <xref target="RFC4210">CMP</xref>, <xref target="RFC4211">Certificate Request Message Format (CRMF)</xref>, <xref target="RFC9480">CMP Updates</xref>, and <xref target="RFC5652">Cryptographic Message Syntax (CMS)</xref>.</t>
			</section>
		</section>
		<section anchor="Hash">
<name>Message Digest Algorithms</name>
			<t>This section provides references to object identifiers and conventions to be employed by CMP implementations that support SHA2 or SHAKE message digest algorithms.</t>
			<t keepWithNext="true">Digest algorithm identifiers are located in the:</t>
			<ul spacing="compact">
				<li>hashAlg field of OOBCertHash and CertStatus,</li>
				<li>owf field of Challenge, PBMParameter, and DHBMParameter,</li>
				<li>digestAlgorithms field of SignedData, and</li>
				<li>digestAlgorithm field of SignerInfo.</li>
			</ul>
			<t keepWithNext="true">Digest values are located in the:</t>
			<ul spacing="compact">
				<li>hashVal field of OOBCertHash,</li>
				<li>certHash field of CertStatus, and</li>
				<li>witness field of Challenge.</li>
			</ul>
			<t>In addition, digest values are input to signature algorithms.</t>
			<section anchor="SHA2">
<name>SHA2</name>
			  <t>The SHA2 algorithm family is defined in <xref target="NIST_FIPS_180_4">FIPS&nbsp;Pub&nbsp;180-4</xref>.</t>
				<t keepWithNext="true">The message digest algorithms SHA-224, SHA-256, SHA-384, and SHA-512 are identified by the following OIDs:</t>
				<sourcecode type="asn.1"><![CDATA[
   id-sha224 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)
      us(840) organization(1) gov(101) csor(3) nistalgorithm(4)
      hashalgs(2) 4 }
   id-sha256 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)
      us(840) organization(1) gov(101) csor(3) nistalgorithm(4)
      hashalgs(2) 1 }
   id-sha384 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)
      us(840) organization(1) gov(101) csor(3) nistalgorithm(4)
      hashalgs(2) 2 }
   id-sha512 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)
      us(840) organization(1) gov(101) csor(3) nistalgorithm(4)
      hashalgs(2) 3 }
           ]]></sourcecode>
				<t>Specific conventions to be considered are specified in <xref target="RFC5754" section="2" sectionFormat="of"/>.</t>
			</section>
			<section anchor="SHAKE">
<name>SHAKE</name>
				<t>The SHA-3 family of hash functions is defined in <xref target="NIST_FIPS_202" format="default">FIPS&nbsp;Pub&nbsp;202</xref> and consists of the fixed output length variants SHA3-224, SHA3-256, SHA3-384, and SHA3-512, as well as the extendable-output functions (XOFs) SHAKE128 and SHAKE256. Currently, SHAKE128 and SHAKE256 are the only members of the SHA3-family that are specified for use in X.509 certificates <xref target="RFC8692" format="default"/> and CMS <xref target="RFC8702" format="default"/> as one-way hash functions for use with RSASSA-PSS and ECDSA.</t>
				<t>SHAKE is an extendable-output function, and <xref target="NIST_FIPS_202" format="default">FIPS&nbsp;Pub&nbsp;202</xref> prohibits using SHAKE as a general-purpose hash function.  When SHAKE is used in CMP as a message digest algorithm, the output length <bcp14>MUST</bcp14> be 256 bits for SHAKE128 and 512 bits for SHAKE256.</t>
				<t keepWithNext="true">The message digest algorithms SHAKE128 and SHAKE256 are identified by the following OIDs:</t>
				<sourcecode type="asn.1"><![CDATA[
   id-shake128 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)
      us(840) organization(1) gov(101) csor(3) nistAlgorithm(4)
      hashalgs(2) 11 }
   id-shake256 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)
      us(840) organization(1) gov(101) csor(3) nistAlgorithm(4)
      hashalgs(2) 12 }
           ]]></sourcecode>
				<t>Specific conventions to be considered are specified in <xref target="RFC8702" section="3.1" sectionFormat="of"/>.</t>
			</section>
		</section>
		<section anchor="Sig">
<name>Signature Algorithms</name>
			<t>This section provides references to object identifiers and conventions to be employed by CMP implementations that support signature algorithms like RSA, ECDSA, or EdDSA.</t>
			<t>The signature algorithm is referred to as MSG_SIG_ALG in Appendices <xref target="RFC4210" sectionFormat="bare" section="D"/> and <xref target="RFC4210" sectionFormat="bare" section="E"/> of <xref target="RFC4210"/>, in the <xref target="RFC9483">Lightweight CMP Profile</xref>, and in <xref target="AlgProfLWP"/>.</t>
			<t keepWithNext="true">Signature algorithm identifiers are located in the:</t>
			<ul spacing="compact">
				<li>protectionAlg field of PKIHeader,</li>
				<li>algorithmIdentifier field of POPOSigningKey, and</li>
				<li>signatureAlgorithm field of CertificationRequest, SignKeyPairTypes, and SignerInfo</li>
			</ul>
			<t keepWithNext="true">Signature values are located in the:</t>
			<ul spacing="compact">
				<li>protection field of PKIMessage,</li>
				<li>signature field of POPOSigningKey, and</li>
				<li>signature field of CertificationRequest and SignerInfo.</li>
			</ul>
			<section anchor="RSASig">
<name>RSA</name>
				<t>The RSA (RSASSA-PSS and PKCS #1 version 1.5) signature algorithm is defined in <xref target="RFC8017"/>.</t>
				<t keepWithNext="true">The algorithm identifier for RSASAA-PSS signatures used with SHA2 message digest algorithms is identified by the following OID:</t>
				<sourcecode type="asn.1"><![CDATA[
   id-RSASSA-PSS OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) rsadsi(113549) pkcs(1) pkcs-1(1) 10 }
            ]]></sourcecode>
				<t>Specific conventions to be considered are specified in <xref target="RFC4056"/>.</t>
				<t keepWithNext="true">The signature algorithm RSASSA-PSS used with SHAKE message digest algorithms is identified by the following OIDs:</t>
				<sourcecode type="asn.1"><![CDATA[
   id-RSASSA-PSS-SHAKE128  OBJECT IDENTIFIER  ::=  { iso(1)
      identified-organization(3) dod(6) internet(1) security(5)
      mechanisms(5) pkix(7) algorithms(6) 30 }
   id-RSASSA-PSS-SHAKE256  OBJECT IDENTIFIER  ::=  { iso(1)
      identified-organization(3) dod(6) internet(1) security(5)
      mechanisms(5) pkix(7) algorithms(6) 31 }
           ]]></sourcecode>
				<t>Specific conventions to be considered are specified in <xref target="RFC8702" section="3.2.1" sectionFormat="of"/>.</t>
				<t keepWithNext="true">The signature algorithm PKCS #1 version 1.5 used with SHA2 message digest algorithms is identified by the following OIDs:</t>
				<sourcecode type="asn.1"><![CDATA[
   sha224WithRSAEncryption OBJECT IDENTIFIER ::= { iso(1)
      member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-1(1) 14 }
   sha256WithRSAEncryption  OBJECT IDENTIFIER  ::=  { iso(1)
      member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-1(1) 11 }
   sha384WithRSAEncryption  OBJECT IDENTIFIER  ::=  { iso(1)
      member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-1(1) 12 }
   sha512WithRSAEncryption  OBJECT IDENTIFIER  ::=  { iso(1)
      member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-1(1) 13 }
           ]]></sourcecode>
				<t>Specific conventions to be considered are specified in <xref target="RFC5754" section="3.2" sectionFormat="of"/>.</t>
			</section>
			<section anchor="ECDSA">
<name>ECDSA</name>
				<t>The ECDSA signature algorithm is defined in <xref target="NIST.FIPS.186-5">FIPS&nbsp;Pub&nbsp;186-5</xref>.</t>
				<t keepWithNext="true">The signature algorithm ECDSA used with SHA2 message digest algorithms is identified by the following OIDs:</t>
				<sourcecode type="asn.1"><![CDATA[
   ecdsa-with-SHA224 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) ansi-X9-62(10045) signatures(4) ecdsa-with-SHA2(3) 1 }
   ecdsa-with-SHA256 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) ansi-X9-62(10045) signatures(4) ecdsa-with-SHA2(3) 2 }
   ecdsa-with-SHA384 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) ansi-X9-62(10045) signatures(4) ecdsa-with-SHA2(3) 3 }
   ecdsa-with-SHA512 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) ansi-X9-62(10045) signatures(4) ecdsa-with-SHA2(3) 4 }
      ]]></sourcecode>
				<t keepWithNext="true">As specified in <xref target="RFC5480"/>, the NIST-recommended curves are identified by the following OIDs:</t>
				<sourcecode type="asn.1"><![CDATA[
   secp192r1 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) ansi-X9-62(10045) curves(3) prime(1) 1 }
   secp224r1 OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) curve(0) 33 }
   secp256r1 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) ansi-X9-62(10045) curves(3) prime(1) 7 }
   secp384r1 OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) curve(0) 34 }
   secp521r1 OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) curve(0) 35 }
           ]]></sourcecode>
				<t>Specific conventions to be considered are specified in <xref target="RFC5754" section="3.3" sectionFormat="of" />.</t>
				<t keepWithNext="true">The signature algorithm ECDSA used with SHAKE message digest algorithms is identified by the following OIDs:</t>
				<sourcecode type="asn.1"><![CDATA[
   id-ecdsa-with-shake128 OBJECT IDENTIFIER  ::=  { iso(1)
      identified-organization(3) dod(6) internet(1) security(5)
      mechanisms(5) pkix(7) algorithms(6) 32 }
   id-ecdsa-with-shake256 OBJECT IDENTIFIER  ::=  { iso(1)
      identified-organization(3) dod(6) internet(1) security(5)
      mechanisms(5) pkix(7) algorithms(6) 33 }
           ]]></sourcecode>
				<t>Specific conventions to be considered are specified in <xref target="RFC8702" section="3.2.2" sectionFormat="of"/>.</t>
			</section>
			<section anchor="EdDSA">
<name>EdDSA</name>
				<t>The EdDSA signature algorithm is defined in <xref target="RFC8032" section="3.3" sectionFormat="of"/> and <xref target="NIST.FIPS.186-5">FIPS&nbsp;Pub&nbsp;186-5</xref>.</t>
				<t keepWithNext="true">The signature algorithm Ed25519 that <bcp14>MUST</bcp14> be used with SHA-512 message digest algorithms is identified by the following OIDs:</t>
				<sourcecode type="asn.1"><![CDATA[
   id-Ed25519 OBJECT IDENTIFIER  ::=  { iso(1)
      identified-organization(3) thawte(101) 112 }
           ]]></sourcecode>
				<t keepWithNext="true">The signature algorithm Ed448 that <bcp14>MUST</bcp14> be used with SHAKE256 message digest algorithms is identified by the following OIDs:</t>
				<sourcecode type="asn.1"><![CDATA[
   id-Ed448 OBJECT IDENTIFIER  ::=  { iso(1)
      identified-organization(3) thawte(101) 113 }
           ]]></sourcecode>
				<t>Specific conventions to be considered are specified in <xref target="RFC8419"/>.</t>
				<t>Note: The hash algorithm used to calculate the certHash in certConf messages <bcp14>MUST</bcp14> be SHA512 if the certificate to be confirmed has been signed using Ed25519 or SHAKE256 with d=512 if the certificate to be confirmed has been signed using Ed448.</t>
			</section>
		</section>
		<section anchor="KeyMan">
<name>Key Management Algorithms</name>
			<t>CMP utilizes the following general key management techniques: key agreement, key transport, and passwords.</t>
			<t><xref target="RFC4211">CRMF</xref> and <xref target="RFC9480">CMP Updates</xref> promote the use of <xref target="RFC5652">CMS EnvelopedData</xref> by deprecating the use of EncryptedValue.</t>
			<section anchor="KeyAgree">
<name>Key Agreement Algorithms</name>
				<t>The key agreement algorithm is referred to as PROT_ENC_ALG in Appendices <xref target="RFC4210" sectionFormat="bare" section="D"/> and <xref target="RFC4210" sectionFormat="bare" section="E"/> of <xref target="RFC4210"/> and as KM_KA_ALG in the <xref target="RFC9483">Lightweight CMP Profile</xref> and <xref target="AlgProf"/>.</t>
				<t>Key agreement algorithms are only used in CMP when using <xref target="RFC5652">CMS EnvelopedData</xref> together with the key agreement key management technique. When a key agreement algorithm is used, a key-encryption algorithm (<xref target="SymKeyEnc"/>) is needed next to the content-encryption algorithm (<xref target="Enc"/>).</t>
				<t keepWithNext="true">Key agreement algorithm identifiers are located in the:</t>
				<ul spacing="compact">
					<li>keyEncryptionAlgorithm field of KeyAgreeRecipientInfo.</li>
				</ul>
				<t keepWithNext="true">Key wrap algorithm identifiers are located in the:</t>
				<ul spacing="compact">
					<li>KeyWrapAlgorithm parameters within keyEncryptionAlgorithm field of KeyAgreeRecipientInfo.</li>
				</ul>
				<t keepWithNext="true">Wrapped content-encryption keys are located in the:</t>
				<ul spacing="compact">
					<li>encryptedKey field of RecipientEncryptedKeys.</li>
				</ul>
				<section anchor="DH">
<name>Diffie-Hellman</name>
					<t>The Diffie-Hellman (DH) key agreement is defined in <xref target="RFC2631"/> and <bcp14>SHALL</bcp14> be used in the ephemeral-static variants, as specified in <xref target="RFC3370"/>. Static-static variants <bcp14>SHALL NOT</bcp14> be used.</t>
					<t keepWithNext="true">The DH key agreement algorithm is identified by the following OID:</t>
					<sourcecode type="asn.1"><![CDATA[
   id-alg-ESDH OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) alg(3) 5 }
               ]]></sourcecode>
					<t>Specific conventions to be considered are specified in <xref target="RFC3370" section="4.1" sectionFormat="of" />.</t>
				</section>
				<section anchor="ECDH">
<name>ECDH</name>
					<t>The Elliptic Curve Diffie-Hellman (ECDH) key agreement is defined in <xref target="RFC5753"/> and <bcp14>SHALL</bcp14> be used in the ephemeral-static variant, as specified in <xref target="RFC5753"/>, or the 1-Pass Elliptic Curve Menezes-Qu-Vanstone (ECMQV) variant, as specified in <xref target="RFC5753"/>. Static-static variants <bcp14>SHALL NOT</bcp14> be used.</t>
					<t keepWithNext="true">The ECDH key agreement algorithm used together with NIST-recommended SECP curves are identified by the following OIDs:</t>
					<sourcecode type="asn.1"><![CDATA[
   dhSinglePass-stdDH-sha224kdf-scheme OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) schemes(1) 11(11) 0 }
   dhSinglePass-stdDH-sha256kdf-scheme OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) schemes(1) 11(11) 1 }
   dhSinglePass-stdDH-sha384kdf-scheme OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) schemes(1) 11(11) 2 }
   dhSinglePass-stdDH-sha512kdf-scheme OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) schemes(1) 11(11) 3 }
   dhSinglePass-cofactorDH-sha224kdf-scheme OBJECT IDENTIFIER ::= {
      iso(1) identified-organization(3) certicom(132) schemes(1)
      14(14) 0 }
   dhSinglePass-cofactorDH-sha256kdf-scheme OBJECT IDENTIFIER ::= {
      iso(1) identified-organization(3) certicom(132) schemes(1)
      14(14) 1 }
   dhSinglePass-cofactorDH-sha384kdf-scheme OBJECT IDENTIFIER ::= {
      iso(1) identified-organization(3) certicom(132) schemes(1)
      14(14) 2 }
   dhSinglePass-cofactorDH-sha512kdf-scheme OBJECT IDENTIFIER ::= {
      iso(1) identified-organization(3) certicom(132) schemes(1)
      14(14) 3 }
   mqvSinglePass-sha224kdf-scheme OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) schemes(1) 15(15) 0 }
   mqvSinglePass-sha256kdf-scheme OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) schemes(1) 15(15) 1 }
   mqvSinglePass-sha384kdf-scheme OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) schemes(1) 15(15) 2 }
   mqvSinglePass-sha512kdf-scheme OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) schemes(1) 15(15) 3 }
               ]]></sourcecode>
					<t keepWithNext="true">As specified in <xref target="RFC5480"/>, the NIST-recommended SECP curves are identified by the following OIDs:</t>
					<sourcecode type="asn.1"><![CDATA[
   secp192r1 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) ansi-X9-62(10045) curves(3) prime(1) 1 }
   secp224r1 OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) curve(0) 33 }
   secp256r1 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) ansi-X9-62(10045) curves(3) prime(1) 7 }
   secp384r1 OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) curve(0) 34 }
   secp521r1 OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) certicom(132) curve(0) 35 }
               ]]></sourcecode>
					<t>Specific conventions to be considered are specified in <xref target="RFC5753"/>.</t>
					<t keepWithNext="true">The ECDH key agreement algorithm used together with curve25519 or curve448 is identified by the following OIDs:</t>
					<sourcecode type="asn.1"><![CDATA[
   id-X25519 OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) thawte(101) 110 }
   id-X448 OBJECT IDENTIFIER ::= { iso(1)
      identified-organization(3) thawte(101) 111 }
               ]]></sourcecode>
					<t>Specific conventions to be considered are specified in <xref target="RFC8418"/>.</t>
				</section>
			</section>
			<section anchor="KeyTrans">
<name>Key Transport Algorithms</name>
				<t>The key transport algorithm is also referred to as PROT_ENC_ALG in Appendices <xref target="RFC4210" sectionFormat="bare" section="D"/> and <xref target="RFC4210" sectionFormat="bare" section="E"/> of <xref target="RFC4210"/> and as KM_KT_ALG in the <xref target="RFC9483">Lightweight CMP Profile</xref> and <xref target="AlgProf"/>.</t>
				<t>Key transport algorithms are only used in CMP when using <xref target="RFC5652">CMS</xref> EnvelopedData together with the key transport key management technique.</t>
				<t keepWithNext="true">Key transport algorithm identifiers are located in the:</t>
				<ul spacing="compact">
					<li>keyEncryptionAlgorithm field of KeyTransRecipientInfo.</li>
				</ul>
				<t keepWithNext="true">Key transport encrypted content-encryption keys are located in the:</t>
				<ul spacing="compact">
					<li>encryptedKey field of KeyTransRecipientInfo.</li>
				</ul>
				<section anchor="RSAEnc">
<name>RSA</name>
					<t>The RSA key transport algorithm is the RSA encryption scheme defined in <xref target="RFC8017"/>.</t>
					<t keepWithNext="true">The algorithm identifier for RSA (PKCS #1 v1.5) is:</t>
					<sourcecode type="asn.1"><![CDATA[
   rsaEncryption OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) rsadsi(113549) pkcs(1) pkcs-1(1) 1 }
               ]]></sourcecode>
					<t keepWithNext="true">The algorithm identifier for RSAES-OAEP is:</t>
					<sourcecode type="asn.1"><![CDATA[
   id-RSAES-OAEP  OBJECT IDENTIFIER  ::=  { iso(1) member-body(2)
      us(840) rsadsi(113549) pkcs(1) pkcs-1(1) 7 }   
               ]]></sourcecode>
					<t>Further conventions to be considered for PKCS #1 v1.5 are specified in <xref target="RFC3370" section="4.2.1" sectionFormat="of" /> and for RSAES-OAEP in <xref target="RFC3560"/>.</t>
				</section>
			</section>
			<section anchor="SymKeyEnc">
<name>Symmetric Key-Encryption Algorithms</name>
				<t>The symmetric key-encryption algorithm is also referred to as KM_KW_ALG in <xref target="AlgProfLWP"/> and the <xref target="RFC9483">Lightweight CMP Profile</xref>.</t>
				<t>As the symmetric key-encryption key management technique is not used by CMP, the symmetric key-encryption algorithm is only needed when using the key agreement or password-based key management technique with <xref target="RFC5652">CMS</xref> EnvelopedData.</t>
				<t keepWithNext="true">Key wrap algorithm identifiers are located in the:</t>
				<ul spacing="compact">
					<li>parameters field of the KeyEncryptionAlgorithmIdentifier of KeyAgreeRecipientInfo and PasswordRecipientInfo.</li>
				</ul>
				<t keepWithNext="true">Wrapped content-encryption keys are located in the:</t>
				<ul spacing="compact">
					<li>encryptedKey field of RecipientEncryptedKeys (for key agreement) and PasswordRecipientInfo (for password-based key management).</li>
				</ul>
				<section anchor="AESWrap">
<name>AES Key Wrap</name>
					<t>The AES encryption algorithm is defined in <xref target="NIST.FIPS.197">FIPS&nbsp;Pub&nbsp;197</xref>, and the key wrapping is defined in <xref target="RFC3394"/>.</t>
					<t keepWithNext="true">AES key encryption has the algorithm identifier:</t>
					<sourcecode type="asn.1"><![CDATA[  
   id-aes128-wrap OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)
      country(16) us(840) organization(1) gov(101) csor(3)
      nistAlgorithm(4) aes(1) 5 }
   id-aes192-wrap OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)
      country(16) us(840) organization(1) gov(101) csor(3)
      nistAlgorithm(4) aes(1) 25 }
   id-aes256-wrap OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)
      country(16) us(840) organization(1) gov(101) csor(3)
      nistAlgorithm(4) aes(1) 45 }
               ]]></sourcecode>
					<t>The underlying encryption functions for the key wrap and content-encryption algorithms (as specified in <xref target="Enc"/>) and the key sizes for the two algorithms <bcp14>MUST</bcp14> be the same (e.g., AES-128 key wrap algorithm with AES-128 content-encryption algorithm); see <xref target="RFC8551"/>.</t>
					<t>Further conventions to be considered for AES key wrap are specified in <xref target="RFC3394" section="2.2" sectionFormat="of" /> and <xref target="RFC3565" section="2.3.2" sectionFormat="of" />.</t>
				</section>
			</section>
			<section anchor="KeyDeriv">
<name>Key Derivation Algorithms</name>
				<t>The key derivation algorithm is also referred to as KM_KD_ALG in <xref target="AlgProfLWP"/> and the <xref target="RFC9483">Lightweight CMP Profile</xref>.</t>
				<t>Key derivation algorithms are only used in CMP when using <xref target="RFC5652">CMS EnvelopedData</xref> together with the password-based key management technique.</t>
				<t keepWithNext="true">Key derivation algorithm identifiers are located in the:</t>
				<ul spacing="compact">
					<li>keyDerivationAlgorithm field of PasswordRecipientInfo.</li>
				</ul>
				<t>When using the password-based key management technique with EnvelopedData as specified in <xref target="RFC9480">CMP Updates</xref> together with PKIProtection based on the message authentication code (MAC), the salt for the password-based MAC and key derivation function (KDF) must be chosen independently to ensure usage of independent symmetric keys.</t>
				<section anchor="PBKDF2">
<name>PBKDF2</name>
					<t>Password-based key derivation function 2 (PBKDF2) is defined in <xref target="RFC8018"/>.</t>
					<t keepWithNext="true">PBKDF2 has the algorithm identifier:</t>
					<sourcecode type="asn.1"><![CDATA[  
   id-PBKDF2 OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)
      rsadsi(113549) pkcs(1) pkcs-5(5) 12 }
               ]]></sourcecode>
					<t>Further conventions to be considered for PBKDF2 are specified in <xref target="RFC3370" section="4.4.1" sectionFormat="of" /> and <xref target="RFC8018" section="5.2" sectionFormat="of" />.</t>
				</section>
			</section>
		</section>
		<section anchor="Enc">
<name>Content-Encryption Algorithms</name>
		  <t>The content-encryption algorithm is also referred to as PROT_SYM_ALG in Appendices <xref target="RFC4210" sectionFormat="bare" section="D"/> and <xref target="RFC4210" sectionFormat="bare" section="E"/> of <xref target="RFC4210"/>, in the <xref target="RFC9483">Lightweight CMP Profile</xref>, and in <xref target="AlgProf"/>.</t>
			<t>Content-encryption algorithms are used in CMP when using <xref target="RFC5652">CMS EnvelopedData</xref> to transport a signed private key package in case of central key generation or key archiving, a certificate to facilitate implicit proof-of-possession, or a revocation passphrase in encrypted form.</t>
			<t keepWithNext="true">Content-encryption algorithm identifiers are located in the:</t>
			<ul spacing="compact">
				<li>contentEncryptionAlgorithm field of EncryptedContentInfo.</li>
			</ul>
			<t keepWithNext="true">Encrypted content is located in the:</t>
			<ul spacing="compact">
				<li>encryptedContent field of EncryptedContentInfo.</li>
			</ul>
			<section anchor="AESEnc">
<name>AES-CBC</name>
				<t>The AES encryption algorithm is defined in <xref target="NIST.FIPS.197">FIPS&nbsp;Pub&nbsp;197</xref>.</t>
				<t keepWithNext="true">AES Cipher Block Chaining (AES-CBC) content encryption has the algorithm identifier:</t>
				<sourcecode type="asn.1"><![CDATA[  
   id-aes128-CBC OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)
      country(16) us(840) organization(1) gov(101) csor(3)
      nistAlgorithm(4) aes(1) 2 }
   id-aes192-CBC OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)
      country(16) us(840) organization(1) gov(101) csor(3)
      nistAlgorithm(4) aes(1)22 }
   id-aes256-CBC OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)
      country(16) us(840) organization(1) gov(101) csor(3)
      nistAlgorithm(4) aes(1)42 }
           ]]></sourcecode>
				<t>Specific conventions to be considered for AES-CBC content encryption are specified in <xref target="RFC3565"/>.</t>
			</section>
		</section>
		<section anchor="MAC">
<name>Message Authentication Code Algorithms</name>
			<t>The message authentication code (MAC) is either used for shared secret-based CMP message protection or together with the password-based key derivation function (PBKDF2).</t>
			<t>The MAC algorithm is also referred to as MSG_MAC_ALG in <xref target="AlgProf"/>, Appendices <xref target="RFC4210" sectionFormat="bare" section="D"/> and <xref target="RFC4210" sectionFormat="bare" section="E"/> of <xref target="RFC4210"/>, and the <xref target="RFC9483">Lightweight CMP Profile</xref>.</t>
			<section anchor="PBMac">
<name>Password-Based MAC</name>
				<t>Password-based message authentication code (MAC) algorithms combine the derivation of a symmetric key from a password or other shared secret information and a symmetric key-based MAC function, as specified in <xref target="SKMac"/>, using this derived key.</t>
				<t keepWithNext="true">MAC algorithm identifiers are located in the:</t>
				<ul spacing="compact">
					<li>protectionAlg field of PKIHeader.</li>
				</ul>
				<t keepWithNext="true">Message authentication code values are located in the:</t>
				<ul spacing="compact">
					<li>PKIProtection field of PKIMessage.</li>
				</ul>
				<section anchor="P-BMac">
<name>PasswordBasedMac</name>
					<t>The PasswordBasedMac algorithm is defined in <xref target="RFC4210" section="5.1.3.1" sectionFormat="of" />, <xref target="RFC4211" section="4.4" sectionFormat="of" />, and <xref target="RFC9045">"Algorithm Requirements Update to the Internet X.509 Public Key Infrastructure Certificate Request Message Format (CRMF)"</xref>.</t>
					<t keepWithNext="true">The PasswordBasedMac algorithm is identified by the following OID:</t>
					<sourcecode type="asn.1"><![CDATA[  
   id-PasswordBasedMac OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) nt(113533) nsn(7) algorithms(66) 13 }
				]]></sourcecode>
					<t>Further conventions to be considered for PasswordBasedMac  are specified in <xref target="RFC4210" section="5.1.3.1" sectionFormat="of" />, <xref target="RFC4211" section="4.4" sectionFormat="of" />, and <xref target="RFC9045">"Algorithm Requirements Update to the Internet X.509 Public Key Infrastructure Certificate Request Message Format (CRMF)"</xref>.</t>
				</section>
				<section anchor="PBMAC1">
<name>PBMAC1</name>
					<t>Password-Based Message Authentication Code 1 (PBMAC1) is defined in <xref target="RFC8018"/>. PBMAC1 combines a password-based key derivation function, like PBKDF2 (<xref target="PBKDF2"/>), with an underlying symmetric key-based message authentication scheme.</t>
					<t keepWithNext="true">PBMAC1 has the following OID:</t>
					<sourcecode type="asn.1"><![CDATA[  
   id-PBMAC1 OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)
      rsadsi(113549) pkcs(1) pkcs-5(5) 14 }
				]]></sourcecode>
					<t>Specific conventions to be considered for PBMAC1 are specified in Section <xref target="RFC8018" section="7.1" sectionFormat="bare"/> and Appendix <xref target="RFC8018" section="A.5" sectionFormat="bare"/> of <xref target="RFC8018"/>.</t>
				</section>
			</section>
			<section anchor="SKMac">
<name>Symmetric Key-Based MAC</name>
				<t>Symmetric key-based message authentication code (MAC) algorithms are used for deriving the symmetric encryption key when using PBKDF2, as described in <xref target="PBKDF2"/>, as well as with password-based MAC, as described in <xref target="PBMac"/>.</t>
				<t keepWithNext="true">MAC algorithm identifiers are located in the:</t>
				<ul spacing="compact">
					<li>protectionAlg field of PKIHeader,</li>
					<li>messageAuthScheme field of PBMAC1,</li>
					<li>mac field of PBMParameter, and</li>
					<li>prf field of PBKDF2-params.</li>
				</ul>
				<t keepWithNext="true">MAC values are located in the:</t>
				<ul spacing="compact">
					<li>PKIProtection field of PKIMessage.</li>
				</ul>
				<section anchor="HMAC-SHA2">
<name>SHA2-Based HMAC</name>
					<t>The HMAC algorithm is defined in <xref target="RFC2104"/> and <xref target="NIST.FIPS.198-1">FIPS&nbsp;Pub&nbsp;198-1</xref>.</t>
					<t keepWithNext="true">The HMAC algorithm used with SHA2 message digest algorithms is identified by the following OIDs:</t>
					<sourcecode type="asn.1"><![CDATA[
   id-hmacWithSHA224 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) rsadsi(113549) digestAlgorithm(2) 8 }
   id-hmacWithSHA256 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) rsadsi(113549) digestAlgorithm(2) 9 }
   id-hmacWithSHA384 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) rsadsi(113549) digestAlgorithm(2) 10 }
   id-hmacWithSHA512 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
      us(840) rsadsi(113549) digestAlgorithm(2) 11 }
               ]]></sourcecode>
					<t>Specific conventions to be considered for SHA2-based HMAC are specified in <xref target="RFC4231" section="3.1" sectionFormat="of"/>.</t>
				</section>
				<section anchor="AES-GMAC">
<name>AES-GMAC</name>
					<t>The AES-GMAC algorithm is defined in <xref target="NIST.FIPS.197">FIPS&nbsp;Pub&nbsp;197</xref> and <xref target="NIST_SP_800_38d">NIST&nbsp;SP&nbsp;800-38d</xref>.</t>
					<t>Note: The AES-GMAC <bcp14>MUST NOT</bcp14> be used twice with the same parameter set, especially the same nonce. Therefore, it <bcp14>MUST NOT</bcp14> be used together with PBKDF2. When using it with PBMAC1, it <bcp14>MUST</bcp14> be ensured that the AES-GMAC is only used as a message authentication scheme and not for the key derivation function PBKDF2.</t>
					<t keepWithNext="true">The AES-GMAC algorithm is identified by the following OIDs:</t>
					<sourcecode type="asn.1"><![CDATA[  
   id-aes128-GMAC OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)
      country(16) us(840) organization(1) gov(101) csor(3)
      nistAlgorithm(4) aes(1) 9 }
   id-aes192-GMAC OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)
      country(16) us(840) organization(1) gov(101) csor(3)
      nistAlgorithm(4) aes(1) 29 }
   id-aes256-GMAC OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)
      country(16) us(840) organization(1) gov(101) csor(3)
      nistAlgorithm(4) aes(1) 49 }
               ]]></sourcecode>
					<t>Specific conventions to be considered for the AES-GMAC are specified in <xref target="RFC9044"/>.</t>
				</section>
				<section anchor="SHAKE-KMAC">
<name>SHAKE-Based KMAC</name>
					<t>The KMAC algorithm is defined in <xref target="RFC8702"/> and <xref target="NIST_SP_800_185">FIPS&nbsp;SP&nbsp;800-185</xref>.</t>
					<t keepWithNext="true">The SHAKE-based KMAC algorithm is identified by the following OIDs:</t>
					<sourcecode type="asn.1"><![CDATA[  
   id-KMACWithSHAKE128 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)
      country(16) us(840) organization(1) gov(101) csor(3)
      nistAlgorithm(4) hashAlgs(2) 19 }
   id-KMACWithSHAKE256 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2)
      country(16) us(840) organization(1) gov(101) csor(3)
      nistAlgorithm(4) hashAlgs(2) 20 }
               ]]></sourcecode>
					<t>Specific conventions to be considered for KMAC with SHAKE are specified in <xref target="RFC8702" section="3.4" sectionFormat="of" />.</t>
				</section>
			</section>
		</section>
		<section anchor="AlgProf">
<name>Algorithm Use Profiles</name>
			<t>This section provides profiles of algorithms and respective conventions for different application use cases.</t>
			<t>Recommendations like those described in Table 2 of <xref target="NIST_SP_800_57pt1r5">NIST SP&nbsp;800-57 "Recommendation for Key Management"</xref> and Section 4.6 of <xref target="ECRYPT.CSA.D5.4">ECRYPT "Algorithms, Key Size and Protocols Report (2018)"</xref> provide general information on current cryptographic algorithms.</t>
			<t keepWithNext="true">The overall cryptographic strength of CMP implementations will depend on several factors, including:</t>
			<ul spacing="normal">
				<li>capabilities of the end entity: What kind of algorithms does the end entity support? The cryptographic strength of the system <bcp14>SHOULD</bcp14> be at least as strong as the algorithms and keys used for the certificate being managed.</li>
				<li>algorithm profile: The overall strength of the profile will be the strength of the weakest algorithm it contains.</li>
				<li>
					<t keepWithNext="true">message protection: The overall strength of the CMP message protection.</t>
					<ul spacing="normal">
						<li>MAC-based protection: The entropy of the shared secret information or password when MAC-based message protection is used (MSG_MAC_ALG).</li>
						<li>signature-based protection: The strength of the key pair and signature algorithm when signature-based protection is used (MSG_SIG_ALG).</li>
						<li>protection of centrally generated keys: The strength of the algorithms used for the key management technique (<xref target="AlgProf4210"/>: PROT_ENC_ALG or <xref target="AlgProfLWP"/>: KM_KA_ALG, KM_KT_ALG, KM_KD_ALG) and the encryption of the content-encryption key and private key (<xref target="AlgProf4210"/>: SYM_PENC_ALG, PROT_SYM_ALG or <xref target="AlgProfLWP"/>: KM_KW_ALG, PROT_SYM_ALG).</li>
					</ul>
				</li>
			</ul>
			<t keepWithNext="true">The following table shows the algorithms listed in this document sorted by their bits of security. If an implementation intends to enroll and manage certificates for keys of a specific security, it <bcp14>SHALL</bcp14> implement and use algorithms of at least that strength for the respective PKI management operation.  If one row does not provide a suitable algorithm, the implementer <bcp14>MUST</bcp14> choose one offering more bits of security.</t>
			<table anchor="BalacedAlgSets" align="left">
				<name>Cryptographic Algorithms Sorted by Their Bits of Security</name>
				<thead>
					<tr>
						<th align='left'>Bits of Security</th>
						<th align='left'>RSA or DH</th>
						<th align='left'>Elliptic Curve Cryptography</th>
						<th align='left'>Hash Function or XOF with Specified Output Length (d)</th>
						<th align='left'>Symmetric Encryption</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td align="left">112</td>
						<td align="left">RSA2048,<br/>DH(2048)</td>
						<td align="left">ECDSA/ECDH (secp224r1)</td>
						<td align="left">SHA-224</td>
						<td align="left"></td>
					</tr>
					<tr>
						<td align="left">128</td>
						<td align="left">RSA3072,<br/>DH(3072)</td>
						<td align="left">ECDSA/ECDH (secp256r1),<br/>Ed25519/X25519 (curve25519)</td>
						<td align="left">SHA-256,<br/>SHAKE128(d=256)</td>
						<td align="left">AES-128</td>
					</tr>
					<tr>
						<td align="left">192</td>
						<td align="left"></td>
						<td align="left">ECDSA/ECDH (secp384r1)</td>
						<td align="left">SHA-384</td>
						<td align="left">AES-192</td>
					</tr>
					<tr>
						<td align="left">224</td>
						<td align="left"></td>
						<td align="left">Ed448/X448 (curve448)</td>
						<td align="left"></td>
						<td align="left"></td>
					</tr>
					<tr>
						<td align="left">256</td>
						<td align="left"></td>
						<td align="left">ECDSA/ECDH (secp521r1)</td>
						<td align="left">SHA-512,<br/>SHAKE256(d=512)</td>
						<td align="left">AES-256</td>
					</tr>
				</tbody>
			</table>
			<t>The following table shows the cryptographic algorithms sorted by their usage in CMP and with more details.</t>
			<table anchor="BalacedAlgSetsCMP" align="left">
				<name>Cryptographic Algorithms Sorted by Their Bits of Security and Usage by CMP</name>
				<thead>
					<tr>
						<th align='left'>Bits of Security</th>
						<th align='left'>Key Types to Be Certified</th>
						<th align='left'>CMP Protection<br/>MSG_SIG_ALG, MSG_MAC_ALG</th>
						<th align='left'>Key Management Technique<br/>PROT_ENC_ALG or KM_KA_ALG, KM_KT_ALG, KM_KD_ALG</th>
						<th align='left'>Key-Wrap and Symmetric Encryption<br/>PROT_SYM_ALG,<br/>SYM_PENC_ALG<br/>or<br/>KM_KW_ALG</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td align="left">112</td>
						<td align="left">RSA2048,<br/>secp224r1</td>
						<td align="left">RSASSA-PSS (2048, SHA-224 or SHAKE128 (d=256)),<br/>RSAEncryption (2048, SHA-224),<br/>ECDSA (secp224r1, SHA-224 or SHAKE128 (d=256)),<br/>PBMAC1 (HMAC-SHA-224)</td>
						<td align="left">DH(2048),<br/>RSAES-OAEP (2048, SHA-224),<br/>RSAEncryption (2048, SHA-224),<br/>ECDH (secp224r1, SHA-224),<br/>PBKDF2 (HMAC-SHA-224)</td>
						<td align="left"></td>
					</tr>
					<tr>
						<td align="left">128</td>
						<td align="left">RSA3072,<br/>secp256r1,<br/>curve25519</td>
						<td align="left">RSASSA-PSS (3072, SHA-256 or SHAKE128 (d=256)),<br/>RSAEncryption (3072, SHA-256),<br/>ECDSA (secp256r1, SHA-256 or SHAKE128 (d=256)),<br/>Ed25519 (SHA-512),<br/>PBMAC1 (HMAC-SHA-256)</td>
						<td align="left">DH(3072),<br/>RSAES-OAEP (3072, SHA-256),<br/> RSAEncryption (3072, SHA-256),<br/>ECDH (secp256r1, SHA-256),<br/>X25519,<br/>PBKDF2 (HMAC-SHA-256)</td>
						<td align="left">AES-128</td>
					</tr>
					<tr>
						<td align="left">192</td>
						<td align="left">secp384r1</td>
						<td align="left">ECDSA (secp384r1, SHA-384),<br/>PBMAC1 (HMAC-SHA-384)</td>
						<td align="left">ECDH (secp384r1, SHA-384),<br/>PBKDF2 (HMAC-SHA-384)</td>
						<td align="left">AES-192</td>
					</tr>
					<tr>
						<td align="left">224</td>
						<td align="left">curve448</td>
						<td align="left">Ed448 (SHAKE256)</td>
						<td align="left">X448</td>
						<td align="left"></td>
					</tr>
					<tr>
						<td align="left">256</td>
						<td align="left">secp521r1</td>
						<td align="left">ECDSA (secp521r1, SHA-512 or SHAKE256 (d=512)),<br/>PBMAC1 (HMAC-SHA-512)</td>
						<td align="left">ECDH (secp521r1, SHA-512),<br/>PBKDF2 (HMAC-SHA-512)</td>
						<td align="left">AES-256</td>
					</tr>
				</tbody>
			</table>
			<t>To avoid consuming too many computational resources, choosing a set of algorithms offering roughly the same level of security is recommended. Below are several algorithm profiles that are balanced, assuming the implementer chooses MAC secrets and/or certificate profiles of at least equivalent strength.</t>
			<section anchor="AlgProf4210">
<name>Algorithm Profile for PKI Management Message Profiles in RFC 4210</name>

				<t>The following table updates the definitions of algorithms used within PKI Management Message Profiles, as defined in <xref target="RFC4210" sectionFormat="of" section="D.2"/>.</t>
				<t>The columns in the table are:</t>
				<dl newline="false" spacing="normal">
				<dt>Name:</dt> <dd>An identifier used for message profiles</dd>
				<dt>Use:</dt> <dd>Description of where and for what the algorithm is used</dd>
				<dt>Mandatory:</dt> <dd>Algorithms that <bcp14>MUST</bcp14> be supported by conforming implementations</dd>
				<dt>Optional:</dt> <dd>Algorithms that are <bcp14>OPTIONAL</bcp14> to support</dd>
				<dt>Deprecated:</dt> <dd>Algorithms from <xref target="RFC4210"/> that <bcp14>SHOULD NOT</bcp14> be used any more</dd>
				</dl>
				<table anchor="AlgProd4210T">
					<name>Algorithms Used within Appendix D.2 of RFC 4210</name>
					<thead>
						<tr>
							<th align='left'>Name</th>
							<th align='left'>Use</th>
							<th align='left'>Mandatory</th>
							<th align='left'>Optional</th>
							<th align='left'>Deprecated</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td align="left">MSG_SIG_ALG</td>
							<td align="left">protection of PKI messages using signatures</td>
							<td align="left">RSA</td>
							<td align="left">ECDSA, EdDSA</td>
							<td align="left">DSA, combinations with MD5 and SHA-1</td>
						</tr>
						<tr>
							<td align="left">MSG_MAC_ALG</td>
							<td align="left">protection of PKI messages using MACs</td>
							<td align="left">PBMAC1</td>
							<td align="left">PasswordBasedMac, HMAC, KMAC</td>
							<td align="left">X9.9</td>
						</tr>
						<tr>
							<td align="left">SYM_PENC_ALG</td>
							<td align="left">symmetric encryption of an end entity's private key where the symmetric key is distributed out of band</td>
							<td align="left">AES-wrap</td>
							<td align="left"></td>
							<td align="left">3-DES(3-key-EDE, CBC Mode), RC5, CAST-128</td>
						</tr>
						<tr>
							<td align="left">PROT_ENC_ALG</td>
							<td align="left">asymmetric algorithm used for encryption of (symmetric keys for encryption of) private keys transported in PKIMessages</td>
							<td align="left">DH</td>
							<td align="left">ECDH, RSA</td>
							<td align="left"></td>
						</tr>
						<tr>
							<td align="left">PROT_SYM_ALG</td>
							<td align="left">symmetric encryption algorithm used for encryption of private key bits (a key of this type is encrypted using PROT_ENC_ALG)</td>
							<td align="left">AES-CBC</td>
							<td align="left"></td>
							<td align="left">3-DES(3-key-EDE, CBC Mode), RC5, CAST-128</td>
						</tr>
					</tbody>
				</table>
				<t keepWithNext="true">The following are the mandatory algorithm identifiers and specifications:</t>
				<dl newline="false" spacing="normal">
				<dt>RSA:</dt> <dd>sha256WithRSAEncryption with 2048 bit, see <xref target="RSASig"/></dd>
				<dt>PasswordBasedMac:</dt> <dd>id-PasswordBasedMac, see <xref target="PBMac"/> (with id-sha256 as the owf parameter, see <xref target="SHA2"/> and id-hmacWithSHA256 as the mac parameter, see <xref target="HMAC-SHA2"/>)</dd>
				<dt>PBMAC1:</dt> <dd>id-PBMAC1, see <xref target="PBMAC1"/> (with id-PBKDF2 as the key derivation function, see <xref target="PBKDF2"/> and id-hmacWithSHA256 as the message authentication scheme, see <xref target="HMAC-SHA2"/>). It is <bcp14>RECOMMENDED</bcp14> to prefer the usage of PBMAC1 instead of PasswordBasedMac.</dd>
				<dt>DH:</dt> <dd>id-alg-ESDH, see <xref target="DH"/></dd>
				<dt>AES-wrap:</dt> <dd>id-aes128-wrap, see <xref target="AESWrap"/></dd>
				<dt>AES-CBC:</dt> <dd>id-aes128-CBC, see <xref target="AESEnc"/></dd>
			      </dl>
			</section>
			<section anchor="AlgProfLWP">
<name>Algorithm Profile for Lightweight CMP Profile</name>
				<t>The following table contains definitions of algorithms that <bcp14>MAY</bcp14> be supported by implementations of the <xref target="RFC9483">Lightweight CMP Profile</xref>.</t>
				<t>As the set of algorithms to be used for implementations of the Lightweight CMP Profile heavily depends on the PKI management operations implemented, the certificates used for message protection, and the certificates to be managed, this document will not specify a specific set that is mandatory to support for conforming implementations.</t>
				<t>The columns in the table are:</t>
				<dl newline="false" spacing="normal">
				<dt>Name:</dt> <dd>An identifier used for message profiles</dd>
				<dt>Use:</dt> <dd>Description of where and for what the algorithm is used</dd>
				<dt>Examples:</dt> <dd>Lists the algorithms, as described in this document. The list of algorithms depends on the set of PKI management operations to be implemented.</dd>
			      </dl>
				<t>Note: It is <bcp14>RECOMMENDED</bcp14> to prefer the usage of PBMAC1 instead of PasswordBasedMac.</t>
				<table anchor="AlgProfLWPT">
					<name>Algorithms Used within the Lightweight CMP Profile</name>
					<thead>
						<tr>
							<th align='left'>Name</th>
							<th align='left'>Use</th>
							<th align='left'>Examples</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td align="left">MSG_SIG_ALG</td>
							<td align="left">protection of PKI messages using signatures and for SignedData, e.g., a private key transported in PKIMessages</td>
							<td align="left">RSA, ECDSA, EdDSA</td>
						</tr>
						<tr>
							<td align="left">MSG_MAC_ALG</td>
							<td align="left">protection of PKI messages using MACing</td>
							<td align="left">PasswordBasedMac (see <xref target="Security"/>), PBMAC1, HMAC, KMAC</td>
						</tr>
						<tr>
							<td align="left">KM_KA_ALG</td>
							<td align="left">asymmetric key agreement algorithm used for agreement of a symmetric key for use with KM_KW_ALG</td>
							<td align="left">DH, ECDH</td>
						</tr>
						<tr>
							<td align="left">KM_KT_ALG</td>
							<td align="left">asymmetric key-encryption algorithm used for transport of a symmetric key for PROT_SYM_ALG</td>
							<td align="left">RSA</td>
						</tr>
						<tr>
							<td align="left">KM_KD_ALG</td>
							<td align="left">symmetric key derivation algorithm used for derivation of a symmetric key for use with KM_KW_ALG</td>
							<td align="left">PBKDF2</td>
						</tr>
						<tr>
							<td align="left">KM_KW_ALG</td>
							<td align="left">algorithm to wrap a symmetric key for PROT_SYM_ALG</td>
							<td align="left">AES-wrap</td>
						</tr>
						<tr>
							<td align="left">PROT_SYM_ALG</td>
							<td align="left">symmetric content-encryption algorithm used for encryption of EnvelopedData, e.g., a private key transported in PKIMessages</td>
							<td align="left">AES-CBC</td>
						</tr>
					</tbody>
				</table>
			</section>
		</section>
		<section anchor="IANA">
<name>IANA Considerations</name>
			<t>This document has no IANA actions.</t>
		</section>
		<section anchor="Security">
<name>Security Considerations</name>
			<t>This document lists many cryptographic algorithms usable with CMP to offer implementers a more up-to-date choice.  Finally, the algorithms to be supported also heavily depend on the certificates and PKI management operations utilized in the target environment. The algorithm with the lowest security strength and the entropy of shared secret information defines the security of the overall solution; see <xref target="AlgProf"/>.</t>
			<t>When using MAC-based message protection, the use of PBMAC1 is preferable to that of PasswordBasedMac. First, PBMAC1 is a well-known scrutinized algorithm, which is not true for PasswordBasedMac. Second, the PasswordBasedMac algorithm as specified in <xref target="RFC4211" section="4.4" sectionFormat="of"/> is essentially PBKDF1 (as defined in <xref target="RFC8018" section="5.1" sectionFormat="of"/>) with an HMAC step at the end. Here, we update to use the PBKDF2-HMAC construct defined as PBMAC1 in <xref target="RFC8018"/>. PBKDF2 is superior to PBKDF1 in an improved internal construct for iterated hashing and in removing PBKDF1's limitation of only being able to derive keys up to the size of the underlying hash function. Additionally, PBKDF1 is not recommended for new applications as stated in <xref target="RFC8018" section="5.1" sectionFormat="of"/> and is no longer an approved algorithm by most standards bodies. Therefore, it presents difficulties to implementers who are submitting their CMP implementations for certification, hence moving to a PBKDF2-based mechanism. This change is in alignment with <xref target="RFC9045"/>, which updates <xref target="RFC4211"/> to allow the use of PBMAC1 in CRMF.</t>
			<t>The AES-GMAC <bcp14>MUST NOT</bcp14> be used as the pseudorandom function (PRF) in PBKDF2; the use of the AES-GMAC more than once with the same key and the same nonce will break the security.</t>
			<t>In <xref target="AlgProf"/> of this document, there is also an update to <xref target="RFC4210" sectionFormat="of" section="D.2"/> and a set of algorithms that <bcp14>MAY</bcp14> be supported when implementing the <xref target="RFC9483">Lightweight CMP Profile</xref>.  It is recognized that there may be older CMP implementations in use that conform to the algorithm use profile from <xref target="RFC4210" sectionFormat="of" section="D.2"/>. For example, the use of AES is now mandatory for PROT_SYM_ALG, while 3-DES was mandatory in <xref target="RFC4210"/>. Therefore, it is expected that many CMP systems may already support the recommended algorithms in this specification. In such systems, the weakened algorithms should be disabled from further use. If critical systems cannot be immediately updated to conform to the recommended algorithm use profile, it is recommended that a plan to migrate the infrastructure to conforming profiles be adopted as soon as possible.</t>
			<t>Symmetric key-based MAC algorithms as described in <xref target="SKMac"/> <bcp14>MAY</bcp14> be used as MSG_MAC_ALG. The implementer <bcp14>MUST</bcp14> choose a suitable PRF and ensure that the key has sufficient entropy to match the overall security level of the algorithm profile. These considerations are outside the scope of the profile.</t>
		</section>
	</middle>
	<back>
<displayreference target="NIST_FIPS_180_4" to="NIST.FIPS.180-4"/>
<displayreference target="NIST_FIPS_202" to="NIST.FIPS.202"/>
<displayreference target="NIST_SP_800_38d" to="NIST.SP.800-38d"/>
<displayreference target="NIST_SP_800_57pt1r5" to="NIST.SP.800-57pt1r5"/>
<displayreference target="NIST_SP_800_185" to="NIST.SP.800-185]"/>

<references>
<name>References</name>
	  <references>
<name>Normative References</name>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2104.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2631.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3370.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3394.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3560.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3565.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4056.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4210.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4211.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4231.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5480.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5652.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5753.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5754.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8017.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8018.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8032.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8418.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8419.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8551.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8692.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8702.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9044.xml"/>
<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9045.xml"/>

<reference anchor='RFC9480' target='https://www.rfc-editor.org/info/rfc9480'>
<front>
<title>Certificate Management Protocol (CMP) Updates</title>
<author initials='H' surname='Brockhaus' fullname='Hendrik Brockhaus'>
<organization />
</author>
<author initials='D' surname='von Oheimb' fullname='David von Oheimb'>
<organization />
</author>
<author initials='J' surname='Gray' fullname='John Gray'>
<organization />
</author>
<date year='2023' month='November'/>
</front>
<seriesInfo name="RFC" value="9480"/>
<seriesInfo name="DOI" value="10.17487/RFC9480"/>
</reference>

<reference anchor='RFC9483' target='https://www.rfc-editor.org/info/rfc9483'>
<front>
<title>Lightweight Certificate Management Protocol (CMP) Profile</title>
<author initials='H' surname='Brockhaus' fullname='Hendrik Brockhaus'>
<organization />
</author>
<author initials='D' surname='von Oheimb' fullname='David von Oheimb'>
<organization />
</author>
<author initials='S' surname='Fries' fullname='Steffen Fries'>
<organization />
</author>
<date year='2023' month='November'/>
</front>
<seriesInfo name="RFC" value="9483"/>
<seriesInfo name="DOI" value="10.17487/RFC9483"/>
</reference>

<xi:include href="https://bib.ietf.org/public/rfc/bibxml-nist/reference.NIST.FIPS.180-4.xml"/>

<xi:include href="https://bib.ietf.org/public/rfc/bibxml-nist/reference.NIST.FIPS.202.xml"/>

<xi:include href="https://bib.ietf.org/public/rfc/bibxml-nist/reference.NIST.SP.800-38d.xml"/> 

<xi:include href="https://bib.ietf.org/public/rfc/bibxml-nist/reference.NIST.SP.800-185.xml"/>

<reference anchor="NIST.FIPS.197" target="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf">
  <front>
    <title>Advanced Encryption Standard (AES)</title>
    <author>
      <organization showOnFrontPage="true">National Institute of Standards and Technology (NIST)</organization>
    </author>
    <date year="2001" month="November"/>
  </front>
  <seriesInfo name="NIST FIPS" value="197"/>
  <seriesInfo name="DOI" value="10.6028/NIST.FIPS.197"/>
</reference>

<reference anchor="NIST.FIPS.198-1" target="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.198-1.pdf">
  <front>
    <title>The Keyed-Hash Message Authentication Code (HMAC)</title>
    <author>
      <organization showOnFrontPage="true">National Institute of Standards and Technology (NIST)</organization>
    </author>
    <date year="2008" month="July"/>
  </front>
  <seriesInfo name="FIPS PUB" value="198-1"/>
  <seriesInfo name="DOI" value="10.6028/NIST.FIPS.198-1"/>
</reference>

<reference anchor="NIST.FIPS.186-5" target="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-5.pdf">
  <front>
    <title>Digital Signature Standard (DSS)</title>
    <author>
      <organization showOnFrontPage="true">National Institute of Standards and Technology (NIST)</organization>
    </author>
    <date month="February" year="2023"/>
  </front>
  <seriesInfo name="FIPS PUB" value="186-5"/>
  <seriesInfo name="DOI" value="10.6028/NIST.FIPS.186-5"/>
</reference>
</references>

<references>
<name>Informative References</name>
<reference anchor="ECRYPT.CSA.D5.4" target="https://www.ecrypt.eu.org/csa/documents/D5.4-FinalAlgKeySizeProt.pdf">
  <front>
    <title>Algorithms, Key Size and Protocols Report (2018)</title>
    <author>
      <organization showOnFrontPage="true">University of Bristol</organization>
    </author>
    <date month="March" year="2015"/>
  </front>
</reference>

<xi:include href="https://bib.ietf.org/public/rfc/bibxml-nist/reference.NIST.SP.800-57pt1r5.xml"/>
</references>
</references>
		<section anchor="Acknowledgements" numbered="false">
<name>Acknowledgements</name>
			<t>Thanks to <contact fullname="Russ Housley"/> for his work on <xref target="RFC9044"/> and <xref target="RFC9045"/> upon which this RFC relies heavily.</t>
			<t>May thanks also to all reviewers like <contact fullname="Serge Mister"/>, <contact fullname="Mark Ferreira"/>, <contact fullname="Yuefei Lu"/>, <contact fullname="Tomas Gustavsson"/>, <contact fullname="Lijun Liao"/>, <contact fullname="David von Oheimb"/>, and <contact fullname="Steffen Fries"/> for their input and feedback to this document. Apologies to all not mentioned reviewers and supporters.</t>
		</section>		
	</back>
</rfc>
