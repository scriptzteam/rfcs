<?xml version='1.0' encoding='UTF-8'?>

<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" category="std" consensus="true" submissionType="IETF" docName="draft-ietf-netconf-tcp-client-server-26" number="9643" updates="" obsoletes="" ipr="trust200902" tocInclude="true" symRefs="true" sortRefs="true" version="3" xml:lang="en">

  <front>

    <title abbrev="Groupings for TCP Clients and Servers">YANG Groupings for
      TCP Clients and TCP Servers</title>
    <seriesInfo name="RFC" value="9643"/>
    <author fullname="Kent Watsen" initials="K." surname="Watsen">
      <organization>Watsen Networks</organization>
      <address>
        <email>kent+ietf@watsen.net</email>
      </address>
    </author>
    <author fullname="Michael Scharf" initials="M." surname="Scharf">
      <organization abbrev="Hochschule Esslingen">
        Hochschule Esslingen
      </organization>
      <address>
	<postal>
	  <street>University of Applied Sciences</street>
	  <street>Kanalstr. 33</street>
	  <code>73728</code>
	  <city>Esslingen am Neckar</city>
	  <country>Germany</country>
	</postal>
        <email>michael.scharf@hs-esslingen.de</email>
      </address>
    </author>
    <date month="October" year="2024"/>
    <area>OPS</area>
    <workgroup>netconf</workgroup>
<keyword>IETF</keyword>

    <abstract>
      <t>This document presents three YANG 1.1 modules
        to support the configuration of TCP clients and TCP servers. The modules
        include basic parameters of a TCP connection relevant for client or server
        applications, as well as client configuration required for traversing proxies.
        The data models defined by these modules may be used directly (e.g., to define a specific TCP client or TCP server) or in conjunction with the configuration defined for higher level protocols that depend on TCP (e.g., SSH, TLS, etc.).  Examples of higher level protocol configuration designed to be used in conjunction with this configuration are in RFCs 9644 and 9645.</t>
    </abstract>
  </front>
  <middle>
    <section>
      <name>Introduction</name>
      <t>This document defines three YANG 1.1 <xref target="RFC7950"/> modules
        to support the configuration of TCP clients and TCP servers (TCP is
        defined in <xref target="RFC9293"/>). The data models defined by these modules may be used directly (e.g., to define a specific TCP client or TCP server) or in conjunction with the configuration defined for higher level protocols that depend on TCP (e.g., SSH, TLS, etc.).  Examples of higher level protocol configuration designed to be used in conjunction with this configuration are in <xref target="RFC9644"/> and <xref target="RFC9645"/>.</t>
      <t>The modules focus on three different types of base TCP parameters that matter
        for TCP-based applications: First, the modules cover fundamental configuration of a
        TCP client or TCP server application, such as addresses and port numbers. Second, a
        reusable grouping enables modification of application-specific parameters for TCP
        connections, such as use of TCP keepalives. And third, client configuration for
        traversing proxies is included as well. In each case, the modules have a very narrow
        scope and focus on a minimum set of required parameters.</t>
      <t>Please be advised that while this document presents support for some TCP
        proxy techniques, there are other TCP proxy techniques that are not part
        of this document but could be added by augmenting the YANG module.</t>
      <section anchor="collective-effort">
        <name>Relation to Other RFCs</name>
        <t>This document presents three YANG modules <xref target="RFC7950"/>
            that are part of a collection of RFCs that work together
            to ultimately support the configuration of both the clients
            and servers of both the Network Configuration Protocol (NETCONF) <xref target="RFC6241"/> and
            RESTCONF <xref target="RFC8040"/>.</t>
        <t> The dependency relationship between the primary YANG groupings
            defined in the various RFCs is presented in the below diagram.
            In some cases, a document may define secondary groupings that
            introduce dependencies not illustrated in the diagram.
            The labels in the diagram are shorthand names for the defining
            RFCs.  The citation references for shorthand names are provided below
            the diagram.</t>
        <t>Please note that the arrows in the diagram point from referencer
            to referenced.  For example, the "crypto-types" RFC does not
            have any dependencies, whilst the "keystore" RFC depends on the
            "crypto-types" RFC.</t>
        <artwork><![CDATA[
                               crypto-types
                                 ^      ^
                                /        \
                               /          \
                      truststore         keystore
                       ^     ^             ^  ^
                       |     +---------+   |  |
                       |               |   |  |
                       |      +------------+  |
tcp-client-server      |     /         |      |
   ^    ^        ssh-client-server     |      |
   |    |           ^            tls-client-server
   |    |           |              ^     ^        http-client-server
   |    |           |              |     |                 ^
   |    |           |        +-----+     +---------+       |
   |    |           |        |                     |       |
   |    +-----------|--------|--------------+      |       |
   |                |        |              |      |       |
   +-----------+    |        |              |      |       |
               |    |        |              |      |       |
               |    |        |              |      |       |
            netconf-client-server       restconf-client-server

]]></artwork>

          <table align="left">
          <name>Label in Diagram to RFC Mapping</name>
          <tbody>
            <tr>
              <th>Label in Diagram</th>
              <th>Reference</th>
            </tr>
            <tr>
              <td>crypto-types</td>
              <td>
                <xref target="RFC9640"/></td>
            </tr>
            <tr>
              <td>truststore</td>
              <td>
                <xref target="RFC9641"/></td>
            </tr>
            <tr>
              <td>keystore</td>
              <td>
                <xref target="RFC9642"/></td>
            </tr>
            <tr>
              <td>tcp-client-server</td>
              <td>
                RFC 9643</td>
            </tr>
            <tr>
              <td>ssh-client-server</td>
              <td>
                <xref target="RFC9644"/></td>
            </tr>
            <tr>
              <td>tls-client-server</td>
              <td>
                <xref target="RFC9645"/></td>
            </tr>
            <tr>
              <td>http-client-server</td>
              <td>
                <xref target="I-D.ietf-netconf-http-client-server"/></td>
            </tr>
            <tr>
              <td>netconf-client-server</td>
              <td>
                <xref target="I-D.ietf-netconf-netconf-client-server"/></td>
            </tr>
            <tr>
              <td>restconf-client-server</td>
              <td>
                <xref target="I-D.ietf-netconf-restconf-client-server"/></td>
            </tr>
          </tbody>
        </table>
      </section>
      <section>
        <name>Specification Language</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
    NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
      </section>
      <section>
        <name>Adherence to the NMDA</name>
        <t>This document is compliant with the Network Management Datastore
          Architecture (NMDA) <xref target="RFC8342"/>. It does not define
          any protocol accessible nodes that are "config false".</t>
      </section>
      <section>
	<name>Conventions</name>
	<t>  Various examples in this document use the XML
  <xref target="W3C.REC-xml-20081126"/> encoding. Other encodings, such as JSON <xref target="RFC8259"/>,
  could alternatively be used.
	</t>
      </section>
    </section>
    <section anchor="tcp-common-model">
      <name>The "ietf-tcp-common" Module</name>
      <t>This section defines a YANG 1.1 module called
        "ietf-tcp-common".  A high-level overview of the module is provided in
        <xref target="common-overview"/>. Examples illustrating the module's use
        are provided in <xref target="common-examples"/> ("Example Usage"). The YANG
        module itself is defined in <xref target="common-yang-module"/>.</t>
      <section anchor="common-overview">
        <name>Data Model Overview</name>
        <t>This section provides an overview of the "ietf-tcp-common" module
          in terms of its features and groupings.</t>
        <section toc="exclude">
          <name>Model Scope</name>
          <t>This document presents a common "grouping" statement for basic TCP connection
            parameters that matter to applications. It is "common" in that this grouping
            is used by both the "ietf-tcp-client" and "ietf-tcp-server" modules.  In some
            TCP stacks, such parameters can also directly be set by an application using
            system calls, such as the sockets API. The base YANG data model in this document
            focuses on modeling TCP keepalives. This base model can be extended as needed.</t>
        </section>
        <section anchor="common-features" toc="exclude">
          <name>Features</name>
          <t>The following diagram lists all the "feature" statements
            defined in the "ietf-tcp-common" module:</t>
          <sourcecode type="yangtree"><![CDATA[
Features:
  +-- keepalives-supported
]]></sourcecode>
            <t>The diagram above uses syntax that is similar to but not
              defined in <xref target="RFC8340"/>.</t>
        </section>
        <section toc="exclude">
          <name>Groupings</name>
          <t>The "ietf-tcp-common" module defines the following "grouping" statement:</t>
          <ul spacing="compact">
            <li>tcp-common-grouping</li>
          </ul>
          <t>This grouping is presented in the following subsection.</t>
          <section anchor="tcp-common-grouping">
            <name>The "tcp-common-grouping" Grouping</name>
            <t>The following tree diagram <xref target="RFC8340"/> illustrates the
              "tcp-common-grouping" grouping:</t>
            <sourcecode type="yangtree"><![CDATA[
  grouping tcp-common-grouping:
    +-- keepalives! {keepalives-supported}?
       +-- idle-time?        uint16
       +-- max-probes?       uint16
       +-- probe-interval?   uint16
]]></sourcecode>
            <t>Comments:</t>
            <ul>
              <li>The "keepalives" node is a "presence" container so that the mandatory descendant nodes
                 do not imply that keepalives must be configured.</li>
              <li>The "idle-time", "max-probes", and "probe-interval" nodes have the
                common meanings.  Please see the YANG module in <xref target="common-yang-module"/>
                for details.</li>
            </ul>
          </section>
        </section>
        <section toc="exclude">
          <name>Protocol-Accessible Nodes</name>
          <t>The "ietf-tcp-common" module defines only "grouping" statements that are used by
            other modules to instantiate protocol-accessible nodes.  Thus, this module, when
            implemented, does not itself define any protocol-accessible nodes.</t>
        </section>
        <section toc="exclude">
          <name>Guidelines for Configuring TCP Keepalives</name>
          <t>Network stacks may include keepalives in their TCP implementations,
          although this practice is not universally implemented. If keepalives are
            included, <xref target="RFC9293"/> mandates that the application <bcp14>MUST</bcp14> be
            able to turn them on or off for each TCP connection and that they <bcp14>MUST</bcp14>
            default to off.</t>
          <t>Keepalive mechanisms exist in many protocols. Depending on the protocol
            stack, TCP keepalives may only be one out of several alternatives.  Which
            mechanism(s) to use depends on the use case and application requirements. If
            keepalives are needed by an application, it is <bcp14>RECOMMENDED</bcp14> that the
            liveness check happens only at the protocol layers that are meaningful
            to the application.</t>
          <t>A TCP keepalive mechanism <bcp14>SHOULD</bcp14> only be invoked in server applications
            that might otherwise hang indefinitely and consume resources unnecessarily
            if a client crashes or aborts a connection during a network failure <xref target="RFC9293"/>.
            TCP keepalives may consume significant resources both in the network and
            in endpoints (e.g., battery power).  In addition, frequent keepalives
            risk network congestion. The higher the frequency of keepalives, the
            higher the overhead.</t>
          <t>
            Given the cost of keepalives, parameters have to be configured carefully:
          </t>
          <ul spacing="normal">
            <li>The default idle interval (leaf "idle-time") is two hours, i.e.,
                7200 seconds <xref target="RFC9293"/>.  A lower value <bcp14>MAY</bcp14> be
                configured, but idle intervals <bcp14>SHOULD NOT</bcp14> be smaller than 15
                seconds. Longer idle intervals <bcp14>SHOULD</bcp14> be used when possible.</li>
            <li>The maximum number of sequential keepalive probes that can fail
                (leaf "max-probes") trades off responsiveness and robustness against
                packet loss. ACK segments that contain no data are not reliably
                transmitted by TCP. Consequently, if a keepalive mechanism is
                implemented, it <bcp14>MUST NOT</bcp14> interpret failure to respond to any
                specific probe as a dead connection <xref target="RFC9293"/>. 
                Typically, a single-digit number should suffice.</li>
            <li>TCP implementations may include a parameter for the number of
                seconds between TCP keepalive probes (leaf "probe-interval"). In
                order to avoid congestion, the time interval between probes <bcp14>MUST NOT</bcp14>
                be smaller than one second. Significantly longer intervals <bcp14>SHOULD</bcp14> be
                used. It is important to note that keepalive probes (or replies)
                can get dropped due to network congestion. Sending further probe
                messages into a congested path after a short interval, without
                backing off timers, could cause harm and result in a congestion
                collapse.  Therefore, it is essential to pick a large, conservative
                value for this interval.</li>
          </ul>
        </section>
      </section>
      <section anchor="common-examples">
        <name>Example Usage</name>
        <t>This section presents an example showing the "tcp-common-grouping" grouping
        populated with some data.</t>
        <sourcecode type="xml"><![CDATA[
<!-- The outermost element below doesn't exist in the data model. -->
<!--  It simulates if the "grouping" were a "container" instead.  -->

<tcp-common xmlns="urn:ietf:params:xml:ns:yang:ietf-tcp-common">
  <keepalives>
    <idle-time>7200</idle-time>
    <max-probes>9</max-probes>
    <probe-interval>75</probe-interval>
  </keepalives>
</tcp-common>
]]></sourcecode>
      </section>
      <section anchor="common-yang-module">
        <name>YANG Module</name>
        <t>The "ietf-tcp-common" YANG module references <xref target="RFC6991"/>
        and <xref target="RFC9293"/>.</t>
        <sourcecode name="ietf-tcp-common@2024-10-10.yang" type="yang" markers="true"><![CDATA[
module ietf-tcp-common {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-tcp-common";
  prefix tcpcmn;

  organization
    "IETF NETCONF (Network Configuration) Working Group and the
     IETF TCP Maintenance and Minor Extensions (TCPM) Working Group";

  contact
    "WG Web:   https://datatracker.ietf.org/wg/netconf
               https://datatracker.ietf.org/wg/tcpm
     WG List:  NETCONF WG list <mailto:netconf@ietf.org>
               TCPM WG list <mailto:tcpm@ietf.org>
     Authors:  Kent Watsen <mailto:kent+ietf@watsen.net>
               Michael Scharf
               <mailto:michael.scharf@hs-esslingen.de>";

  description
    "This module define a reusable 'grouping' that is common
     to both TCP clients and TCP servers.  This grouping statement
     is used by both the 'ietf-tcp-client' and 'ietf-tcp-server'
     modules.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL',
     'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED',
     'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this document
     are to be interpreted as described in BCP 14 (RFC 2119)
     (RFC 8174) when, and only when, they appear in all
     capitals, as shown here.
     
     Copyright (c) 2024 IETF Trust and the persons identified
     as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 9643
     (https://www.rfc-editor.org/info/rfc9643); see the RFC
     itself for full legal notices.";

  revision 2024-10-10 {
    description
      "Initial version.";
    reference
      "RFC 9643: YANG Groupings for TCP Clients and TCP Servers";
  }

  // Features

  feature keepalives-supported {
    description
      "Indicates that keepalives are supported.";
  }

  // Groupings

  grouping tcp-common-grouping {
    description
      "A reusable grouping for configuring TCP parameters common
       to TCP connections as well as the operating system as a
       whole.";
    container keepalives {
      if-feature "keepalives-supported";
      presence "Indicates that keepalives are enabled, aligning to
                the requirement in Section 3.8.4 of RFC 9293 that 
                states keepalives are off by default.";
      description
        "Configures the keepalive policy to proactively test the
         aliveness of the TCP peer.  An unresponsive TCP peer is
         dropped after approximately (idle-time + max-probes *
         probe-interval) seconds.  Further guidance can be found
         in Section 2.1.5 of RFC 9643.";
      reference
        "RFC 9293: Transmission Control Protocol (TCP)";
      leaf idle-time {
        type uint16 {
          range "1..max";
        }
        units "seconds";
        default "7200";
        description
          "Sets the amount of time after which a TCP-level probe
           message will be sent to test the aliveness of the TCP
           peer if no data has been received from the TCP peer.
           Two hours (7200 seconds) is a safe value, per Section
           3.8.4 of RFC 9293.";
        reference
          "RFC 9293: Transmission Control Protocol (TCP)";
      }
      leaf max-probes {
        type uint16 {
          range "1..max";
        }
        default "9";
        description
          "Sets the maximum number of sequential keepalive probes
           that can fail to obtain a response from the TCP peer
           before assuming the TCP peer is no longer alive.";
      }
      leaf probe-interval {
        type uint16 {
          range "1..max";
        }
        units "seconds";
        default "75";
        description
          "Sets the time interval between failed probes.  The 
           interval SHOULD be significantly longer than one second
           in order to avoid harm on a congested link.";
      }
    } // container keepalives
  } // grouping tcp-common-grouping

}
]]></sourcecode>
      </section>
    </section>
    <section anchor="tcp-client-model">
      <name>The "ietf-tcp-client" Module</name>
      <t>This section defines a YANG 1.1 module called
        "ietf-tcp-client".  A high-level overview of the module is provided in
        <xref target="client-overview"/>. Examples illustrating the module's use
        are provided in <xref target="client-examples"/> ("Example Usage"). The YANG
        module itself is defined in <xref target="client-yang-module"/>.</t>
      <section anchor="client-overview">
        <name>Data Model Overview</name>
        <t>This section provides an overview of the "ietf-tcp-client" module
          in terms of its features and groupings.</t>
        <section anchor="features" toc="exclude">
          <name>Features</name>
          <t>The following diagram lists all the "feature" statements
            defined in the "ietf-tcp-client" module:</t>
          <sourcecode type="yangtree"><![CDATA[
Features:
  +-- local-binding-supported
  +-- tcp-client-keepalives
  +-- proxy-connect
      +-- socks4-supported {proxy-connect}?
      +-- socks4a-supported {proxy-connect}?
      +-- socks5-supported {proxy-connect}?
          +-- socks5-gss-api {socks5-supported}?
          +-- socks5-username-password {socks5-supported}?
]]></sourcecode>
          <t>Comments:</t>
          <ul>
            <li>The "local-binding-supported" feature indicates that
                the server supports configuring local bindings (i.e.,
            the local address and local port) for TCP clients.</li>	    
            <li>The "tcp-client-keepalives" feature indicates that
                TCP keepalive parameters are configurable for
                TCP clients on the server implementing this feature.</li>
            <li>The "proxy-connect" feature indicates the TCP client
                supports connecting through TCP proxies.</li>
            <li>The "socks4-supported" feature indicates the
                TCP client supports Socks4-based proxies.</li>
            <li>The "socks4a-supported" feature indicates the
                TCP client supports Socks4a-based proxies.  The difference
                between Socks4 and Socks4a is that Socks4a enables the
                "remote-address" to be specified using a hostname, in
                addition to an IP address.</li>
            <li>The "socks5-supported" feature indicates the
                TCP client supports Socks5-based proxies.</li>
            <li>The "socks5-gss-api" feature indicates that
                the server, when acting as a TCP client, supports
                authenticating to a SOCKS Version 5 proxy server
                using Generic Security Service Application Program Interface (GSS-API) credentials.</li>
            <li>The "socks5-username-password" feature indicates
                that the server, when acting as a TCP client,
                supports authenticating to a SOCKS Version 5
                proxy server using "username" and "password"
                credentials."</li>
          </ul>
            <t>The diagram above uses syntax that is similar to but not
              defined in <xref target="RFC8340"/>.</t>
        </section>
        <section toc="exclude">
          <name>Groupings</name>
          <t>The "ietf-tcp-client" module defines the following "grouping" statement:</t>
          <ul spacing="compact">
            <li>tcp-client-grouping</li>
          </ul>
          <t>This grouping is presented in the following subsection.</t>
          <section anchor="tcp-client-grouping">
            <name>The "tcp-client-grouping" Grouping</name>
            <t>The following tree diagram <xref target="RFC8340"/> illustrates the
              "tcp-client-grouping" grouping:</t>
            <sourcecode type="yangtree"><![CDATA[
  grouping tcp-client-grouping:
    +-- remote-address                inet:host
    +-- remote-port?                  inet:port-number
    +-- local-address?                inet:ip-address
    |       {local-binding-supported}?
    +-- local-port?                   inet:port-number
    |       {local-binding-supported}?
    +-- proxy-server! {proxy-connect}?
    |  +-- (proxy-type)
    |     +--:(socks4) {socks4-supported}?
    |     |  +-- socks4-parameters
    |     |     +-- remote-address    inet:ip-address
    |     |     +-- remote-port?      inet:port-number
    |     +--:(socks4a) {socks4a-supported}?
    |     |  +-- socks4a-parameters
    |     |     +-- remote-address    inet:host
    |     |     +-- remote-port?      inet:port-number
    |     +--:(socks5) {socks5-supported}?
    |        +-- socks5-parameters
    |           +-- remote-address               inet:host
    |           +-- remote-port?                 inet:port-number
    |           +-- authentication-parameters!
    |              +-- (auth-type)
    |                 +--:(gss-api) {socks5-gss-api}?
    |                 |  +-- gss-api
    |                 +--:(username-password)
    |                          {socks5-username-password}?
    |                    +-- username-password
    |                       +-- username                string
    |                       +---u ct:password-grouping
    +---u tcpcmn:tcp-common-grouping
]]></sourcecode>
            <t>Comments:</t>
            <ul>
              <li>The "remote-address" node, which is mandatory, may be configured as
              an IPv4 address, an IPv6 address, or a hostname.</li>
	      <li>The "remote-port" leaf is defined with neither a "default" nor a "mandatory" statement.  YANG modules using this grouping <bcp14>SHOULD</bcp14> refine the grouping
with a "default" statement, when the port number is well-known (e.g., a port number allocated by IANA), or with a
"mandatory" statement, if a port number needs to always be configured.   The <bcp14>SHOULD</bcp14> can be ignored when the port number is neither well-known nor mandatory to configure, such as might be the case when this grouping is used by another grouping.</li>
              <li>The "local-address" node, which is enabled by the "local-binding-supported"
                feature (<xref target="features"/>), may be configured as
                an IPv4 address, an IPv6 address, or a wildcard value.</li>
              <li>The "local-port" node, which is enabled by the "local-binding-supported"
                feature (<xref target="features"/>), is not mandatory. Its default
                value is "0", indicating that the operating system can pick an
                arbitrary port number.</li>
              <li>The "proxy-server" node is enabled by a "feature" statement and, for
                servers that enable it, is a "presence" container so that the descendant
                "mandatory true" choice node does not imply that the proxy-server node
                must be configured.  The proxy-server node uses a "choice" statement
                to allow one of several types of proxies to be configured.  The choices
                presented in this document include Socks4, Socks4a, and Socks5, each
                enabled by a YANG feature (see <xref target="features"/>).  Other proxy
                types may be added by future work.</li>
              <li>This grouping uses the "password-grouping" grouping discussed in
                <xref target="RFC9640"/>.</li>
              <li>This grouping uses the "tcp-common-grouping" grouping discussed in
                <xref target="tcp-common-grouping"/>.</li>
            </ul>
          </section>
        </section>
        <section toc="exclude">
          <name>Protocol-Accessible Nodes</name>
          <t>The "ietf-tcp-client" module defines only "grouping" statements that are used by
          other modules to instantiate protocol-accessible nodes.  Thus, this module, when
          implemented, does not itself define any protocol-accessible nodes.</t>
        </section>
      </section>
      <section anchor="client-examples">
        <name>Example Usage</name>
        <t>This section presents two examples showing the "tcp-client-grouping" grouping
          populated with some data.  This example shows a TCP client configured to
        not connect via a proxy:</t>
        <sourcecode type="xml"><![CDATA[
<!-- The outermost element below doesn't exist in the data model. -->
<!--  It simulates if the "grouping" were a "container" instead.  -->

<tcp-client xmlns="urn:ietf:params:xml:ns:yang:ietf-tcp-client">
  <remote-address>www.example.com</remote-address>
  <remote-port>8443</remote-port>
  <local-address>192.0.2.2</local-address>
  <local-port>12345</local-port>
  <keepalives>
    <idle-time>7200</idle-time>
    <max-probes>9</max-probes>
    <probe-interval>75</probe-interval>
  </keepalives>
</tcp-client>
]]></sourcecode>
        <t>This example shows a TCP client configured to connect via a proxy.</t>
        <sourcecode type="xml"><![CDATA[
<!-- The outermost element below doesn't exist in the data model. -->
<!--  It simulates if the "grouping" were a "container" instead.  -->

<tcp-client xmlns="urn:ietf:params:xml:ns:yang:ietf-tcp-client">
  <remote-address>www.example.com</remote-address>
  <remote-port>8443</remote-port>
  <local-address>192.0.2.2</local-address>
  <local-port>12345</local-port>
  <proxy-server>
    <socks5-parameters>
      <remote-address>proxy.example.com</remote-address>
      <remote-port>1080</remote-port>
      <authentication-parameters>
        <username-password>
          <username>foobar</username>
          <cleartext-password>secret</cleartext-password>
        </username-password>
      </authentication-parameters>
    </socks5-parameters>
  </proxy-server>
  <keepalives>
    <idle-time>7200</idle-time>
    <max-probes>9</max-probes>
    <probe-interval>75</probe-interval>
  </keepalives>
</tcp-client>
]]></sourcecode>
      </section>
      <section anchor="client-yang-module">
        <name>YANG Module</name>
        <t>The "ietf-tcp-client" YANG module references <xref target="SOCKS"/>, <xref target="SOCKS_4A"/>, <xref target="RFC1928"/>, 
        <xref target="RFC1929"/>, <xref target="RFC2743"/>, <xref target="RFC6991"/>,
        <xref target="RFC9293"/>, and <xref target="RFC9640"/>.</t>
        <sourcecode name="ietf-tcp-client@2024-10-10.yang" type="yang" markers="true"><![CDATA[
module ietf-tcp-client {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-tcp-client";
  prefix tcpc;

  import ietf-inet-types {
    prefix inet;
    reference
      "RFC 6991: Common YANG Data Types";
  }

  import ietf-crypto-types {
    prefix ct;
    reference
      "RFC 9640: YANG Data Types and Groupings for Cryptography";
  }

  import ietf-tcp-common {
    prefix tcpcmn;
    reference
      "RFC 9643: YANG Groupings for TCP Clients and TCP Servers";
  }

  organization
    "IETF NETCONF (Network Configuration) Working Group and the
     IETF TCP Maintenance and Minor Extensions (TCPM) Working Group";

  contact
    "WG Web:   https://datatracker.ietf.org/wg/netconf
               https://datatracker.ietf.org/wg/tcpm
     WG List:  NETCONF WG list <mailto:netconf@ietf.org>
               TCPM WG list <mailto:tcpm@ietf.org>
     Authors:  Kent Watsen <mailto:kent+ietf@watsen.net>
               Michael Scharf
               <mailto:michael.scharf@hs-esslingen.de>";

  description
    "This module defines reusable groupings for TCP clients that
     can be used as a basis for specific TCP client instances.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 
     'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED',
     'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this document
     are to be interpreted as described in BCP 14 (RFC 2119)
     (RFC 8174) when, and only when, they appear in all
     capitals, as shown here. 
     
     Copyright (c) 2024 IETF Trust and the persons identified
     as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 9643
     (https://www.rfc-editor.org/info/rfc9643); see the RFC
     itself for full legal notices.";

  revision 2024-10-10 {
    description
      "Initial version.";
    reference
      "RFC 9643: YANG Groupings for TCP Clients and TCP Servers";
  }

  // Features

  feature local-binding-supported {
    description
      "Indicates that the server supports configuring local
       bindings (i.e., the local address and local port) for
       TCP clients.";
  }

  feature tcp-client-keepalives {
    description
      "TCP keepalive parameters are configurable for
       TCP clients on the server implementing this feature.";
    reference
      "RFC 9293: Transmission Control Protocol (TCP)";
  }

  feature proxy-connect {
    description
      "Indicates the TCP client supports connecting through
       TCP proxies.";
  }

  feature socks4-supported {
    if-feature "proxy-connect";
    description
      "Indicates the TCP client supports Socks4-based proxies.";
    reference
      "SOCKS Proceedings: 1992 Usenix Security Symposium";
  }

  feature socks4a-supported {
    if-feature "proxy-connect";
    description
      "Indicates the TCP client supports Socks4a-based proxies.";
    reference
      "OpenSSH message:
         SOCKS 4A: A Simple Extension to SOCKS 4 Protocol
         <https://www.openssh.com/txt/socks4a.protocol>";
  }

  feature socks5-supported {
    if-feature "proxy-connect";
    description
      "Indicates the TCP client supports Socks5-based proxies.";
    reference
      "RFC 1928: SOCKS Protocol Version 5";
  }

  feature socks5-gss-api {
    if-feature "socks5-supported";
    description
      "Indicates that the server, when acting as a TCP client,
       supports authenticating to a SOCKS Version 5 proxy server
       using GSS-API credentials.";
    reference
      "RFC 1928: SOCKS Protocol Version 5";
  }

  feature socks5-username-password {
    if-feature "socks5-supported";
    description
      "Indicates that the server, when acting as a TCP client,
       supports authenticating to a SOCKS Version 5 proxy server
       using 'username' and 'password' credentials.";
    reference
      "RFC 1928: SOCKS Protocol Version 5";
  }

  // Groupings

  grouping tcp-client-grouping {
    description
      "A reusable grouping for configuring a TCP client.

       Note that this grouping uses fairly typical descendant
       node names such that a stack of 'uses' statements will
       have name conflicts.  It is intended that the consuming
       data model will resolve the issue (e.g., by wrapping
       the 'uses' statement in a container called
       'tcp-client-parameters').  This model purposely does
       not do this itself so as to provide maximum flexibility
       to consuming models.";

    leaf remote-address {
      type inet:host;
      mandatory true;
      description
        "The IP address or hostname of the remote peer to
         establish a connection with.  If a domain name is
         configured, then the DNS resolution should happen on
         each connection attempt.  If the DNS resolution
         results in multiple IP addresses, the IP addresses
         are tried according to local preference order until
         a connection has been established or until all IP
         addresses have failed.";
    }
    leaf remote-port {
      type inet:port-number;
      description
        "The port number of the remote TCP server.";
    }
    leaf local-address {
      if-feature "local-binding-supported";
      type inet:ip-address;
      description
        "The local IP address/interface to bind to for when
         connecting to the remote peer.  INADDR_ANY ('0.0.0.0') or
         INADDR6_ANY ('0:0:0:0:0:0:0:0' a.k.a. '::') MAY be used to
         explicitly indicate the implicit default, which the server
         can bind to any IPv4 or IPv6 address.";
    }
    leaf local-port {
      if-feature "local-binding-supported";
      type inet:port-number;
      default "0";
      description
        "The local IP port number to bind to for when connecting
         to the remote peer.  The port number '0', which is the
         default value, indicates that any available local port
         number may be used.";
    }
    container proxy-server {
      if-feature "proxy-connect";
      presence "Indicates that a proxy connection has been 
                configured. Present so that the mandatory 
                descendant nodes do not imply that this node 
                must be configured.";
      choice proxy-type {
        mandatory true;
        description
          "Selects a proxy connection protocol.";
        case socks4 {
          if-feature "socks4-supported";
          container socks4-parameters {
            leaf remote-address {
              type inet:ip-address;
              mandatory true;
              description
                "The IP address of the proxy server.";
            }
            leaf remote-port {
              type inet:port-number;
              default "1080";
              description
                "The IP port number for the proxy server.";
            }
            description
              "Parameters for connecting to a TCP-based proxy
               server using the SOCKS4 protocol.";
            reference
              "SOCKS Proceedings: 1992 Usenix Security Symposium";
          }
        }
        case socks4a {
          if-feature "socks4a-supported";
          container socks4a-parameters {
            leaf remote-address {
              type inet:host;
              mandatory true;
              description
                "The IP address or hostname of the proxy server.";
            }
            leaf remote-port {
              type inet:port-number;
              default "1080";
              description
                "The IP port number for the proxy server.";
            }
            description
              "Parameters for connecting to a TCP-based proxy
               server using the SOCKS4a protocol.";
            reference
              "SOCKS Proceedings:
                 1992 Usenix Security Symposium
               OpenSSH message:
                 SOCKS 4A: A Simple Extension to SOCKS 4 Protocol
                 <https://www.openssh.com/txt/socks4a.protocol>";
          }
        }
        case socks5 {
          if-feature "socks5-supported";
          container socks5-parameters {
            leaf remote-address {
              type inet:host;
              mandatory true;
              description
                "The IP address or hostname of the proxy server.";
            }
            leaf remote-port {
              type inet:port-number;
              default "1080";
              description
                "The IP port number for the proxy server.";
            }
            container authentication-parameters {
              presence "Indicates that an authentication mechanism
                        has been configured.  Present so that the
                        mandatory descendant nodes do not imply that
                        this node must be configured.";
              description
                "A container for SOCKS Version 5 authentication
                 mechanisms.

                 A complete list of methods is defined at:
                 <https://www.iana.org/assignments/socks-methods>.";
              reference
                "RFC 1928: SOCKS Protocol Version 5";
              choice auth-type {
                mandatory true;
                description
                  "A choice amongst supported SOCKS Version 5
                   authentication mechanisms.";
                case gss-api {
                  if-feature "socks5-gss-api";
                  container gss-api {
                    description
                      "Contains GSS-API configuration.  Defines
                       as an empty container to enable specific
                       GSS-API configuration to be augmented in
                       by future modules.";
                    reference
                      "RFC 1928: SOCKS Protocol Version 5
                       RFC 2743: Generic Security Service
                                 Application Program Interface
                                 Version 2, Update 1";
                  }
                }
                case username-password {
                  if-feature "socks5-username-password";
                  container username-password {
                    leaf username {
                      type string;
                      mandatory true;
                      description
                        "The 'username' value to use for client
                         identification.";
                    }
                    uses ct:password-grouping {
                      description
                        "The password to be used for client
                         authentication.";
                    }
                    description
                      "Contains username/password configuration.";
                    reference
                      "RFC 1929: Username/Password Authentication
                                 for SOCKS V5";
                  }
                }
              }
            }
            description
              "Parameters for connecting to a TCP-based proxy server
               using the SOCKS5 protocol.";
            reference
              "RFC 1928: SOCKS Protocol Version 5";
          }
        }
      }
      description
        "Proxy server settings.";
    }

    uses tcpcmn:tcp-common-grouping {
      refine "keepalives" {
        if-feature "tcp-client-keepalives";
        description
          "An 'if-feature' statement so that implementations
           can choose to support TCP client keepalives.";
      }
    }
  }
}
]]></sourcecode>
      </section>
    </section>
    <section anchor="tcp-server-model">
      <name>The "ietf-tcp-server" Module</name>
      <t>This section defines a YANG 1.1 module called
        "ietf-tcp-server".  A high-level overview of the module is provided in
        <xref target="server-overview"/>. Examples illustrating the module's use
        are provided in <xref target="server-examples"/> ("Example Usage"). The YANG
        module itself is defined in <xref target="server-yang-module"/>.</t>
      <section anchor="server-overview">
        <name>Data Model Overview</name>
        <t>This section provides an overview of the "ietf-tcp-server" module
          in terms of its features and groupings.</t>
        <section toc="exclude">
          <name>Features</name>
          <t>The following diagram lists all the "feature" statements
            defined in the "ietf-tcp-server" module:</t>
          <sourcecode type="yangtree"><![CDATA[
Features:
  +-- tcp-server-keepalives
]]></sourcecode>
            <t>The diagram above uses syntax that is similar to but not
              defined in <xref target="RFC8340"/>.</t>
        </section>
        <section toc="exclude">
          <name>Groupings</name>
          <t>The "ietf-tcp-server" module defines the following "grouping" statement:</t>
          <ul spacing="compact">
            <li>tcp-server-grouping</li>
          </ul>
          <t>This grouping is presented in the following subsection.</t>
          <section anchor="tcp-server-grouping">
            <name>The "tcp-server-grouping" Grouping</name>
            <t>The following tree diagram <xref target="RFC8340"/> illustrates the
              "tcp-server-grouping" grouping:</t>
            <sourcecode type="yangtree"><![CDATA[
  grouping tcp-server-grouping:
    +-- local-bind* [local-address]
    |  +-- local-address   inet:ip-address
    |  +-- local-port?     inet:port-number
    +---u tcpcmn:tcp-common-grouping
]]></sourcecode>
            <t>Comments:</t>
            <ul>
              <li>The "local-address" node, which is mandatory, may be configured as
                an IPv4 address, an IPv6 address, or a wildcard value.</li>
              <li>The "local-port" leaf is defined with neither a "default" nor a "mandatory"
statement.  YANG modules using this grouping <bcp14>SHOULD</bcp14> refine the 
grouping with a "default" statement, when the port number is well-known (e.g., a port number allocated by IANA), or with a "mandatory" statement,	if a port number needs to always be configured.   The <bcp14>SHOULD</bcp14> can be ignored when the port number is neither well-known nor mandatory to configure, such as might be the case when this grouping is used by another grouping.</li>
              <li>This grouping uses the "tcp-common-grouping" grouping discussed in
                <xref target="tcp-common-grouping"/>.</li>
            </ul>
          </section>
        </section>
        <section toc="exclude">
          <name>Protocol-Accessible Nodes</name>
          <t>The "ietf-tcp-server" module defines only "grouping" statements that are used by
            other modules to instantiate protocol-accessible nodes.  Thus, this module, when
            implemented, does not itself define any protocol-accessible nodes.</t>
        </section>
      </section>
      <section anchor="server-examples">
        <name>Example Usage</name>
        <t>This section presents an example showing the "tcp-server-grouping" grouping
        populated with some data.</t>
        <sourcecode type="xml"><![CDATA[
<!-- The outermost element below doesn't exist in the data model. -->
<!--  It simulates if the "grouping" were a "container" instead.  -->

<tcp-server xmlns="urn:ietf:params:xml:ns:yang:ietf-tcp-server">
  <local-bind>
    <local-address>192.0.2.2</local-address>
    <local-port>49152</local-port>
  </local-bind>
  <keepalives>
    <idle-time>7200</idle-time>
    <max-probes>9</max-probes>
    <probe-interval>75</probe-interval>
  </keepalives>
</tcp-server>
]]></sourcecode>
      </section>
      <section anchor="server-yang-module">
        <name>YANG Module</name>
        <t>The "ietf-tcp-server" YANG module references <xref target="RFC6991"/>
           and <xref target="RFC9293"/>.</t>
        <sourcecode name="ietf-tcp-server@2024-10-10.yang" type="yang" markers="true"><![CDATA[
module ietf-tcp-server {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-tcp-server";
  prefix tcps;

  import ietf-inet-types {
    prefix inet;
    reference
      "RFC 6991: Common YANG Data Types";
  }

  import ietf-tcp-common {
    prefix tcpcmn;
    reference
      "RFC 9643: YANG Groupings for TCP Clients and TCP Servers";
  }

  organization
    "IETF NETCONF (Network Configuration) Working Group and the
     IETF TCP Maintenance and Minor Extensions (TCPM) Working Group";

  contact
    "WG Web:   https://datatracker.ietf.org/wg/netconf
               https://datatracker.ietf.org/wg/tcpm
     WG List:  NETCONF WG list <mailto:netconf@ietf.org>
               TCPM WG list <mailto:tcpm@ietf.org>
     Authors:  Kent Watsen <mailto:kent+ietf@watsen.net>
               Michael Scharf
               <mailto:michael.scharf@hs-esslingen.de>";

  description
    "This module defines reusable groupings for TCP servers that
     can be used as a basis for specific TCP server instances.
     
     Copyright (c) 2024 IETF Trust and the persons identified
     as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 9643
     (https://www.rfc-editor.org/info/rfc9643); see the RFC
     itself for full legal notices.";

  revision 2024-10-10 {
    description
      "Initial version.";
    reference
      "RFC 9643: YANG Groupings for TCP Clients and TCP Servers";
  }

  // Features

  feature tcp-server-keepalives {
    description
      "TCP keepalive parameters are configurable for
       TCP servers on the server implementing this feature.";
    reference
      "RFC 9293: Transmission Control Protocol (TCP)";
  }

  // Groupings

  grouping tcp-server-grouping {
    description
      "A reusable grouping for configuring a TCP server.

       Note that this grouping uses fairly typical descendant
       node names such that a stack of 'uses' statements will
       have name conflicts.  It is intended that the consuming
       data model will resolve the issue (e.g., by wrapping
       the 'uses' statement in a container called
       'tcp-server-parameters').  This model purposely does
       not do this itself so as to provide maximum flexibility
       to consuming models.";
    list local-bind {
      key "local-address";
      min-elements 1;
      description
        "A list of bind (listen) points for this server
         instance.  A server instance may have multiple
         bind points to support, e.g., the same port in
         different address families or different ports
         in the same address family.";
      leaf local-address {
        type inet:ip-address;
        description
          "The local IP address to listen on for incoming
           TCP client connections.  To configure listening
           on all IPv4 addresses, the value must be '0.0.0.0'
           (INADDR_ANY).  To configure listening on all IPv6
           addresses, the value must be '::' (INADDR6_ANY).";
      }
      leaf local-port {
        type inet:port-number;
        description
          "The local port number to listen on for incoming TCP
           client connections.";
      }
    }
    uses tcpcmn:tcp-common-grouping {
      refine "keepalives" {
        if-feature "tcp-server-keepalives";
        description
          "An 'if-feature' statement so that implementations
           can choose to support TCP server keepalives.";
      }
    }
  }
}
]]></sourcecode>
      </section>
    </section>
    <section>
      <name>Security Considerations</name>
      <t>The three YANG modules in this document define groupings and will
        not be deployed as standalone modules. Their security implications
        may be context-dependent based on their use in other modules.  The
        designers of modules that import these groupings must conduct their
        own analysis of the security considerations.</t>
	<section>
        <name>Considerations for the "ietf-tcp-common" YANG Module</name>
        <t>This section is modeled after the template defined in <xref section="3.7.1" sectionFormat="of" target="RFC8407"/>.</t>
        <t>The "ietf-tcp-common" YANG module defines "grouping" statements
          that are designed to be accessed via YANG-based management
          protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
          <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g.,
   Secure Shell (SSH) <xref target="RFC4252"/>, TLS <xref target="RFC8446"/>, and QUIC <xref target="RFC9000"/>) and
   mandatory-to-implement mutual authentication.</t>
        <t>The Network Configuration Access Control Model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          preconfigured subset of all available protocol operations and
          content.</t>
        <t>Please be aware that this YANG module uses groupings from
          other YANG modules that define nodes that may be considered
          sensitive or vulnerable in network environments.  Please
          review the security considerations for dependent YANG modules
          for information as to which nodes may be considered sensitive
          or vulnerable in network environments.</t>
        <t>None of the readable data nodes defined in this YANG module are
          considered sensitive or vulnerable in network environments.
          The NACM "default-deny-all" extension has not been set for
          any data nodes defined in this module.</t>
        <t>None of the writable data nodes defined in this YANG module are
          considered sensitive or vulnerable in network environments.
          The NACM "default-deny-write" extension has not been set for
          any data nodes defined in this module.</t>
        <t>This module does not define any RPCs, actions, or notifications,
          and thus, the security considerations for such are not provided here.</t>
      </section>
      <section>
        <name>Considerations for the "ietf-tcp-client" YANG Module</name>
        <t>This section is modeled after the template defined in <xref section="3.7.1" sectionFormat="of" target="RFC8407"/>.</t>
        <t>The "ietf-tcp-client" YANG module defines "grouping" statements
          that are designed to be accessed via YANG-based management
          protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
          <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g.,
   Secure Shell (SSH) <xref target="RFC4252"/>, TLS <xref target="RFC8446"/>, and QUIC <xref target="RFC9000"/>) and
   mandatory-to-implement mutual authentication.</t>
        <t>The Network Configuration Access Control Model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          preconfigured subset of all available protocol operations and
          content.</t>
        <t>Please be aware that this YANG module uses groupings from
          other YANG modules that define nodes that may be considered
          sensitive or vulnerable in network environments.  Please
          review the security considerations for dependent YANG modules
          for information as to which nodes may be considered sensitive
          or vulnerable in network environments.</t>
        <t>One readable data node defined in this YANG module may be considered
          sensitive or vulnerable in some network environments. This
          node is as follows:
        </t>
        <ul spacing="normal">
          <li>
            <t>The "proxy-server/socks5-parameters/authentication-parameters/username-password/password" node:
            </t>
            <ul empty="true">
              <li>The "password" node defined in the "tcp-client-grouping"
                  grouping is defined using the "password-grouping" grouping
                  presented in <xref target="RFC9640"/>.
                  This grouping enables both cleartext and encrypted passwords
                  to be configured.  As the referenced document states, configuration
                  of cleartext passwords is <bcp14>NOT RECOMMENDED</bcp14>.  However, in the
                  case cleartext values are configured, this node is additionally
                  sensitive to read operations such that, in normal use cases,
                  it should never be returned to a client.  For this reason, the
                  NACM "default-deny-all" extension has been applied to it.</li>
            </ul>
          </li>
        </ul>
        <t>None of the writable data nodes defined in this YANG module are
          considered sensitive or vulnerable in network environments.
          The NACM "default-deny-write" extension has not been set for
          any data nodes defined in this module.</t>
        <t>This module does not define any RPCs, actions, or notifications,
          and thus, the security considerations for such are not provided here.</t>
        <t>Implementations are <bcp14>RECOMMENDED</bcp14> to implement the "local-binding-supported"
          feature for cryptographically secure protocols so as to enable more
          granular ingress/egress firewall rule bases.  It is <bcp14>NOT RECOMMENDED</bcp14> to
          implement this feature for unsecure protocols, as per <xref target="RFC6056"/>.</t>
      </section>
      <section>
        <name>Considerations for the "ietf-tcp-server" YANG Module</name>
        <t>This section is modeled after the template defined in <xref section="3.7.1" sectionFormat="of" target="RFC8407"/>.</t>
        <t>The "ietf-tcp-server" YANG module defines "grouping" statements
          that are designed to be accessed via YANG-based management
          protocols, such as NETCONF <xref target="RFC6241"/> and RESTCONF
          <xref target="RFC8040"/>.  Both of these protocols have
          mandatory-to-implement secure transport layers (e.g.,
   Secure Shell (SSH) <xref target="RFC4252"/>, TLS <xref target="RFC8446"/>, and QUIC <xref target="RFC9000"/>) and
   mandatory-to-implement mutual authentication.</t>
        <t>The Network Configuration Access Control Model (NACM) <xref target="RFC8341"/>
          provides the means to restrict access for particular users to a
          preconfigured subset of all available protocol operations and
          content.</t>
        <t>Please be aware that this YANG module uses groupings from
          other YANG modules that define nodes that may be considered
          sensitive or vulnerable in network environments.  Please
          review the security considerations for dependent YANG modules
          for information as to which nodes may be considered sensitive
          or vulnerable in network environments.</t>
        <t>None of the readable data nodes defined in this YANG module are
          considered sensitive or vulnerable in network environments.
          The NACM "default-deny-all" extension has not been set for
          any data nodes defined in this module.</t>
        <t>None of the writable data nodes defined in this YANG module are
          considered sensitive or vulnerable in network environments.
          The NACM "default-deny-write" extension has not been set for
          any data nodes defined in this module.</t>
        <t>This module does not define any RPCs, actions, or notifications,
          and thus, the security considerations for such are not provided here.</t>
      </section>
    </section>
    <section>
      <name>IANA Considerations</name>
      <section>
        <name>The IETF XML Registry</name>
        <t>IANA has registered the following URI in the "ns" registry of
  the "IETF XML Registry" <xref target="RFC3688"/>.</t>
<dl newline="false" spacing="compact">
   <dt>URI:</dt> <dd>urn:ietf:params:xml:ns:yang:ietf-tcp-common</dd>
   <dt>Registrant Contact:</dt> <dd>The IESG</dd>
   <dt>XML:</dt> <dd>N/A; the requested URI is an XML namespace.</dd>
</dl>

<dl newline="false" spacing="compact">
   <dt>URI:</dt> <dd>urn:ietf:params:xml:ns:yang:ietf-tcp-client</dd>
   <dt>Registrant Contact:</dt> <dd>The IESG</dd>
   <dt>XML:</dt> <dd>N/A; the requested URI is an XML namespace.</dd>
</dl>

<dl newline="false" spacing="compact">
   <dt>URI:</dt> <dd>urn:ietf:params:xml:ns:yang:ietf-tcp-server</dd>
   <dt>Registrant Contact:</dt> <dd>The IESG</dd>
   <dt>XML:</dt> <dd>N/A; the requested URI is an XML namespace.</dd>
</dl>
      </section>
      <section>
        <name>The YANG Module Names Registry</name>
        <t>IANA has registered the following three YANG modules in the "YANG Module Names"
        registry <xref target="RFC6020"/>. </t>
<dl newline="false" spacing="compact">
   <dt>Name:</dt>         <dd>ietf-tcp-common</dd>
   <dt>Namespace:</dt>    <dd>urn:ietf:params:xml:ns:yang:ietf-tcp-common</dd>
   <dt>Prefix:</dt>       <dd>tcpcmn</dd>
   <dt>Reference:</dt>    <dd>RFC 9643</dd>
</dl>
<dl newline="false" spacing="compact">
   <dt>Name:</dt>         <dd>ietf-tcp-client</dd>
   <dt>Namespace:</dt>    <dd>urn:ietf:params:xml:ns:yang:ietf-tcp-client</dd>
   <dt>Prefix:</dt>       <dd>tcpc</dd>
   <dt>Reference:</dt>    <dd>RFC 9643</dd>
</dl>
<dl newline="false" spacing="compact">
   <dt>Name:</dt>         <dd>ietf-tcp-server</dd>
   <dt>Namespace:</dt>    <dd>urn:ietf:params:xml:ns:yang:ietf-tcp-server</dd>
   <dt>Prefix:</dt>       <dd>tcps</dd>
   <dt>Reference:</dt>    <dd>RFC 9643</dd>
</dl>
      </section>
    </section>
  </middle>
  <back>

<displayreference target="I-D.ietf-netconf-http-client-server"
to="HTTP-CLIENT-SERVER"/>
<displayreference target="I-D.ietf-netconf-netconf-client-server"
to="NETCONF-CLIENT-SERVER"/>
<displayreference target="I-D.ietf-netconf-restconf-client-server"
to="RESTCONF-CLIENT-SERVER"/>

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>

	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4252.xml"/>	
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6020.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6991.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7950.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8341.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9000.xml"/>	
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9293.xml"/>

	<reference anchor="RFC9640" target="https://www.rfc-editor.org/info/rfc9640">
	  <front>
	    <title>YANG Data Types and Groupings for Cryptography</title>
	    <author initials="K." surname="Watsen" fullname="Kent Watsen">
	      <organization>Watsen Networks</organization>
	    </author>
	    <date month="October" year="2024"/>
	  </front>
	  <seriesInfo name="RFC" value="9640"/>
	  <seriesInfo name="DOI" value="10.17487/RFC9640"/>
	</reference>

      </references>
      <references>
        <name>Informative References</name>

	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1928.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1929.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2743.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3688.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6056.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6241.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8040.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml"/>	
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8340.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8342.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8407.xml"/>
	<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml"/>	
	<reference anchor="RFC9641" target="https://www.rfc-editor.org/info/rfc9641">
	  <front>
	    <title>A YANG Data Model for a Truststore</title>
	    <author initials="K." surname="Watsen" fullname="Kent Watsen">
	      <organization>Watsen Networks</organization>
	    </author>
	    <date month="October" year="2024"/>
	  </front>
	  <seriesInfo name="RFC" value="9641"/>
	  <seriesInfo name="DOI" value="10.17487/RFC9641"/>
	</reference>

	<reference anchor="RFC9642" target="https://www.rfc-editor.org/info/rfc9642">
	  <front>
	    <title>A YANG Data Model for a Keystore</title>
	    <author initials="K." surname="Watsen" fullname="Kent Watsen">
	      <organization>Watsen Networks</organization>
	    </author>
	    <date month="October" year="2024"/>
	  </front>
	  <seriesInfo name="RFC" value="9642"/>
	  <seriesInfo name="DOI" value="10.17487/RFC9642"/>
	</reference>

	
	<reference anchor="RFC9644" target="https://www.rfc-editor.org/info/rfc9644">
	  <front>
	    <title>YANG Groupings for SSH Clients and SSH Servers</title>
	    <author initials="K." surname="Watsen" fullname="Kent Watsen">
	      <organization>Watsen Networks</organization>
	    </author>
	    <date month="October" year="2024"/>
	  </front>
	  <seriesInfo name="RFC" value="9644"/>
	  <seriesInfo name="DOI" value="10.17487/RFC9644"/>
	</reference>

	<reference anchor="RFC9645" target="https://www.rfc-editor.org/info/rfc9645">
	  <front>
	    <title>YANG Groupings for TLS Clients and TLS Servers</title>
	    <author initials="K." surname="Watsen" fullname="Kent Watsen">
	      <organization>Watsen Networks</organization>
	    </author>
	    <date month="October" year="2024"/>
	  </front>
	  <seriesInfo name="RFC" value="9645"/>
	  <seriesInfo name="DOI" value="10.17487/RFC9645"/>
	</reference>

<xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-netconf-http-client-server"/>

<xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-netconf-netconf-client-server"/>

<xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-netconf-restconf-client-server"/>

        <reference anchor="SOCKS_4A" target="https://www.openssh.com/txt/socks4a.protocol">
          <front>
            <title>SOCKS 4A: A Simple Extension to SOCKS 4 Protocol</title>
            <author fullname="Ying-Da Lee" surname="Lee" initials="Y."/>
          </front>
        </reference>

	<reference anchor="SOCKS" target="https://www.usenix.org/legacy/publications/library/proceedings/sec92/full_papers/koblas.pdf">
	  <front>
	    <title>SOCKS</title>
	    <author fullname="David Koblas" surname="Koblas" initials="D."/>
	    <author fullname="Michelle R. Koblas" surname="Koblas" initials="M."/>
	    <date month="September" year="1992"/>
	  </front>
	  <refcontent>USENIX UNIX Security Symposium III</refcontent>
	</reference>

<reference anchor="W3C.REC-xml-20081126"                                        
target="https://www.w3.org/TR/2008/REC-xml-20081126/">
  <front>
    <title>Extensible Markup Language (XML) 1.0
    (Fifth Edition)</title>
    <author initials="T." surname="Bray" fullname="Tim Bray"/>
    <author initials="J." surname="Paoli" fullname="Jean Paoli"/>
    <author initials="C.M." surname="Sperberg-McQueen" fullname="C. M.
Sperberg-McQueen"/>
    <author initials="E." surname="Maler" fullname="Eve Maler"/>
    <author initials="F." surname="Yergeau" fullname="François Yergeau"/>
    <date month="November" year="2008"/>
  </front>
  <seriesInfo name="World Wide Web Consortium
                    Recommendation" value="REC-xml-20081126"/>
</reference>	

      </references>
    </references>
    <section numbered="false">
      <name>Acknowledgements</name>
      <t>The authors would like to thank the following for lively discussions
        on list and in the halls (ordered by first name):
        <contact fullname="Éric Vyncke"/>,
        <contact fullname="Joe Clarke"/>,
        <contact fullname="Jürgen Schönwälder"/>,
        <contact fullname="Ladislav Lhotka"/>,
        <contact fullname="Mallory Knodel"/>,
        <contact fullname="Martin Duke"/>,
        <contact fullname="Michael Tüxen"/>,
        <contact fullname="Mohamed Boucadair"/>,
        <contact fullname="Nancy Cam-Winget"/>,
        <contact fullname="Nick Hancock"/>,
        <contact fullname="Per Andersson"/>,
        <contact fullname="Rob Wilton"/>,
        <contact fullname="Roman Danyliw"/>,
        <contact fullname="Tom Petch"/>, and
        <contact fullname="Wim Henderickx"/>.
      </t>
    </section>
  </back>
</rfc>
