<?xml version="1.0" encoding="UTF-8"?>

<!-- [CS] updated by Chris 09/27/22 -->

<!-- draft submitted in xml v3 -->

<!DOCTYPE rfc [
 <!ENTITY nbsp    "&#160;">
 <!ENTITY zwsp   "&#8203;">
 <!ENTITY nbhy   "&#8209;">
 <!ENTITY wj     "&#8288;">
]> 

<!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.14 (Ruby 2.5.1) -->

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-sacm-coswid-22" number="9393" submissionType="IETF" category="std"
consensus="true" tocInclude="true" sortRefs="true" symRefs="true" updates="" obsoletes=""
xml:lang="en" version="3">

  <!-- xml2rfc v2v3 conversion 2.46.0 -->
  <front>
    <title abbrev="CoSWID">Concise Software Identification Tags</title>
    <seriesInfo name="RFC" value="9393"/>
    <author initials="H." surname="Birkholz" fullname="Henk Birkholz">
      <organization abbrev="Fraunhofer SIT">Fraunhofer SIT</organization>
      <address>
        <postal>
          <street>Rheinstrasse 75</street>
          <city>Darmstadt</city>
          <code>64295</code>
          <country>Germany</country>
        </postal>
        <email>henk.birkholz@sit.fraunhofer.de</email>
      </address>
    </author>
    <author initials="J." surname="Fitzgerald-McKay" fullname="Jessica Fitzgerald-McKay">
      <organization>National Security Agency</organization>
      <address>
        <postal>
          <street>9800 Savage Road</street>
          <city>Ft. Meade</city>
          <code>20755</code>
          <region>Maryland</region>
          <country>United States of America</country>
        </postal>
        <email>jmfitz2@cyber.nsa.gov</email>
      </address>
    </author>
    <author initials="C." surname="Schmidt" fullname="Charles Schmidt">
      <organization>The MITRE Corporation</organization>
      <address>
        <postal>
          <street>202 Burlington Road</street>
          <city>Bedford</city>
          <region>Massachusetts</region>
          <code>01730</code>
          <country>United States of America</country>
        </postal>
        <email>cmschmidt@mitre.org</email>
      </address>
    </author>
    <author initials="D." surname="Waltermire" fullname="David Waltermire">
      <organization abbrev="NIST">National Institute of Standards and Technology</organization>
      <address>
        <postal>
          <street>100 Bureau Drive</street>
          <city>Gaithersburg</city>
          <region>Maryland</region>
          <code>20877</code>
          <country>United States of America</country>
        </postal>
        <email>david.waltermire@nist.gov</email>
      </address>
    </author>
    <date year="2023" month="June"/>

    <area>sec</area>
    <workgroup>sacm</workgroup>

    <abstract>
      <t>ISO/IEC 19770-2:2015 Software Identification (SWID) tags provide an extensible XML-based structure to identify and describe individual software components, patches, and installation bundles. SWID tag representations can be too large for devices with network and storage constraints. This document defines a concise representation of SWID tags: Concise SWID (CoSWID) tags. CoSWID supports a set of semantics and features that are similar to those for SWID tags, as well as new semantics that allow CoSWIDs to describe additional types of information, all in a more memory-efficient format.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction">
      <name>Introduction</name>
      <t>SWID tags, as defined in ISO-19770-2:2015 <xref target="SWID"/>, provide a standardized
XML-based record format that identifies and describes a specific release of
software, a patch, or an installation bundle, which are referred to as software components in this document. Different software components, and even different releases of a
particular software component, each have a different SWID tag record associated
with them. SWID tags are meant to be flexible and able to express a broad set of metadata
about a software component.</t>
      <t>SWID tags are used to support a number of processes, including but not limited to:</t>
      <ul spacing="normal">
        <li>Software Inventory Management, representing a part of a Software Asset Management process <xref target="SAM"/>,
which requires an accurate list of discernible deployed software
components.</li>
        <li>Vulnerability Assessment, which requires a semantic link between standardized
vulnerability descriptions and software components installed on IT assets <xref target="X.1520"/>.</li>
        <li>Remote Attestation, which requires a link between Reference Integrity Manifests (RIMs) and Attester-produced event logs that complement attestation evidence <xref target="RFC9334"/>.</li>
      </ul>
      <t>While there are very few required fields in SWID tags, there are many optional
fields that support different uses. A
SWID tag consisting of only required fields might be a few hundred bytes in
size; however, a tag containing many of the optional fields can be many orders of
magnitude larger. Thus, real-world instances of SWID tags can be fairly large, and the communication of
SWID tags in usage scenarios, such as those described earlier, can cause a large
amount of data to be transported. This can be larger than acceptable for
constrained devices and networks. Concise SWID (CoSWID) tags significantly reduce the amount of
data transported as compared to a typical SWID tag
through the use of the Concise
Binary Object Representation (CBOR) <xref target="RFC8949"/>.</t>
      <t>Size comparisons between XML SWID and CoSWID mainly depend on domain-specific applications and the complexity of attributes used in instances.
While the values stored in CoSWID are often unchanged and therefore not reduced in size compared to an XML SWID, the scaffolding that the CoSWID encoding represents is significantly smaller by taking up 10 percent or less in size.
This effect is visible in representation sizes, which in early experiments benefited from a 50 percent to 85 percent reduction in generic usage scenarios.
Additional size reduction is enabled with respect to the memory footprint of XML parsing/validation.</t>
      <t>In a CoSWID, the human-readable labels of SWID data items are replaced with
more concise integer labels (indices). This approach allows SWID and CoSWID to share a common implicit information model, with CoSWID providing an alternate data model <xref target="RFC3444"/>. While SWID and CoSWID are intended to share the same implicit information model, this specification does not define this information model or a mapping between the two data formats. While an attempt to align SWID and CoSWID tags has been made here, future revisions of ISO/IEC 19770-2:2015 or this specification might cause this implicit information model to diverge, since these specifications are maintained by different standards groups.</t>
      <t>The use of CBOR to express SWID information in CoSWID tags allows both CoSWID and SWID tags to be part of an
enterprise security solution for a wider range of endpoints and environments.</t>
      <section anchor="intro-lifecycle">
        <name>The SWID and CoSWID Tag Lifecycle</name>
        <t>In addition to defining the format of a SWID tag record, ISO/IEC 19770-2:2015
defines requirements concerning the SWID tag lifecycle. Specifically, when a
software component is installed on an endpoint, that software component's SWID tag is also
installed. Likewise, when the software component is uninstalled or replaced, the SWID tag
is deleted or replaced, as appropriate. As a result, ISO/IEC 19770-2:2015 describes
a system wherein there is a correspondence between the set of installed software
components on an endpoint and the presence of the corresponding SWID tags
for these components on that endpoint. CoSWIDs share the same lifecycle requirements
as a SWID tag.</t>
        <t>The SWID specification and supporting guidance provided in NIST Internal Report (NISTIR) 8060 ("Guidelines for the Creation of Interoperable Software
Identification (SWID) Tags") <xref target="SWID-GUIDANCE"/> define four types of SWID tags: primary, patch, corpus, and supplemental. The following text is paraphrased from these sources.</t>
     <dl newline="false" spacing="normal">
          <dt>Primary Tag:</dt><dd>A SWID or CoSWID tag that identifies and describes an installed software component on an endpoint. A primary tag is intended to be installed on an endpoint along with the corresponding software component.</dd>
          <dt>Patch Tag:</dt><dd>A SWID or CoSWID tag that identifies and describes an installed patch that has made incremental changes to a software component installed on an endpoint. A patch tag is intended to be installed on an endpoint along with the corresponding software component patch.</dd>
          <dt>Corpus Tag:</dt><dd>A SWID or CoSWID tag that identifies and describes an installable software component in its pre-installation state. A corpus tag can be used to represent metadata about an installation package or installer for a software component, a software update, or a patch.</dd>
          <dt>Supplemental Tag:</dt><dd>A SWID or CoSWID tag that allows additional information to be associated with a referenced SWID tag. This allows tools and users to record their own metadata about a software component without modifying CoSWID primary or patch tags created by a software provider.</dd>
     </dl>
        <t>The type of a tag is determined by specific data elements, which are discussed in <xref target="semantics-tag-type"/>. <xref target="semantics-tag-type"/> also provides normative language for CoSWID semantics that implement this lifecycle. The following information helps to explain how these semantics apply to the use of a CoSWID tag.</t>
            <t>Corpus, primary, and patch tags have similar functions in that they describe the existence and/or presence of different types of software components (e.g., software installers, software installations, software patches) and, potentially, different states of these software components. Supplemental tags have the same structure as other tags but are used to provide information not contained in the referenced corpus, primary, and patch tags. All four tag types come into play at various points in the software lifecycle and support software management processes that depend on the ability to accurately determine where each software component is in its lifecycle.</t>
        <figure anchor="fig-lifecycle">
          <name>Use of Tag Types in the Software Lifecycle</name>
          <artwork><![CDATA[
                                  +------------+
                                  v            |
Software      Software        Software     Software      Software
Deployment -> Installation -> Patching  -> Upgrading  -> Removal

Corpus        Primary         Primary      xPrimary      xPrimary
Supplemental  Supplemental    Supplemental xSupplemental xSupplemental
                              Patch        xPatch
                                           Primary
                                           Supplemental
]]></artwork>
        </figure>
            <t><xref target="fig-lifecycle"/> illustrates the steps in the software lifecycle and the relationships among those lifecycle events supported by the four types of SWID and CoSWID tags. A detailed description of the four tag types is provided in <xref target="model-concise-swid-tag"/>. The figure identifies the types of tags that are used in each lifecycle event.</t>
        <t>There are many ways in which software tags might be managed for the host the software is installed on. For example, software tags could be made available on the host or to an external software manager when storage is limited on the host.</t>
        <t>In these cases, the host or external software manager is responsible for management of the tags, including deployment and removal of the tags as indicated by the above lifecycle. Tags are deployed, and previously deployed tags are typically removed (indicated by an "x" prefix) at each lifecycle stage as follows:</t>
        <ul empty="true">
          <li>
            <dl newline="false" spacing="normal">
              <dt>Software Deployment:</dt><dd>Before the software component is installed (i.e., pre-installation), and while the product is being deployed, a corpus tag provides information about the installation files and distribution media (e.g., CD/DVD, distribution package).</dd>
	    </dl>
	  </li>
	</ul>
            <t>Corpus tags are not actually deployed on the target system but are intended to support deployment procedures and their dependencies at install time, such as to verify the installation media.</t>
        <ul empty="true">
          <li>
            <dl newline="false" spacing="normal">
              <dt>Software Installation:</dt><dd>A primary tag will be installed with the software component (or subsequently created) to uniquely identify and describe the software component. Supplemental tags are created to augment primary tags with additional site-specific or extended information. While not illustrated in the figure, patch tags can also be installed during software installation to provide information about software fixes deployed along with the base software installation.</dd>
              <dt>Software Patching:</dt><dd>When a patch is applied to the software component, a new patch tag is provided, supplying details about the patch and its dependencies. While not illustrated in the figure, a corpus tag can also provide information about the patch installer and patching dependencies that need to be installed before the patch.</dd>
              <dt>Software Upgrading:</dt><dd><t>As a software component is upgraded to a new version, new primary and supplemental tags replace existing tags, enabling timely and accurate tracking of updates to software inventory. While not illustrated in the figure, a corpus tag can also provide information about the upgrade installer and dependencies that need to be installed before the upgrade.</t>
       <aside><t>Note: In the context of software tagging, software patching and updating differ in an important way. When installing a patch, a set of file modifications are made to pre-installed software; these modifications do not alter the version number or the descriptive metadata of an installed software component. An update can also make a set of file modifications; in that case, the version number or  the descriptive metadata of an installed software component is changed.</t></aside>
</dd>
              <dt>Software Removal:</dt><dd>Upon removal of the software component, relevant SWID tags are removed. This removal event can trigger timely updates to software inventory reflecting the removal of the product and any associated patch or supplemental tags.</dd>
	    </dl>
          </li>
        </ul>
        <t>As illustrated in the figure, supplemental tags can be associated with any corpus, primary, or patch tag to provide additional metadata about an installer, installed software, or installed patch, respectively.</t>
        <t>Understanding the use of CoSWIDs in the software lifecycle provides a basis for understanding the information provided in a CoSWID and the associated semantics of this information. Each different SWID and CoSWID tag type provides different sets of
information. For example, a "corpus tag" is used to
describe a software component's installation image on an installation medium, while a
"patch tag" is meant to describe a patch that modifies some other software component.</t>
      </section>
      <section anchor="concise-swid-format">
        <name>Concise SWID Format</name>
        <t>This document defines the CoSWID tag format, which is based on CBOR. CBOR-based CoSWID tags offer a more concise representation of SWID information as compared to the XML-based SWID tag representation in ISO-19770-2:2015. The structure of a CoSWID is described via the Concise
Data Definition Language (CDDL) <xref target="RFC8610"/>. The resulting CoSWID data
definition is aligned with the information able to be expressed with the XML Schema definition of ISO-19770-2:2015
<xref target="SWID"/>. This alignment allows both SWID and CoSWID tags to represent a common set of software component information and allows CoSWID tags to support the same uses as a SWID tag.</t>
        <t>The vocabulary (i.e., the CDDL names of the types and members used in
the CoSWID CDDL specification) is mapped to more concise labels represented as
small integer values (indices). The names used in the CDDL specification and the mapping to
the CBOR representation using integer indices are based on the vocabulary of the
XML attribute and element names defined in ISO/IEC 19770-2:2015.</t>
      </section>
      <section anchor="requirements-notation">
        <name>Requirements Notation</name>
       <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
       "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>",
       "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>",
       "<bcp14>SHOULD NOT</bcp14>",
       "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
       "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document
       are to be interpreted as described in BCP&nbsp;14
       <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only
       when, they appear in all capitals, as shown here.</t>
      </section>
    </section>
    <section anchor="data-def">
      <name>Concise SWID Data Definition</name>
      <t>The following describes the general rules and processes for encoding data using CDDL representation. Prior familiarity with CBOR and CDDL concepts will be helpful in understanding this CoSWID specification.</t>
      <t>This section describes the conventions by which a CoSWID is represented in the CDDL structure. The CamelCase notation <xref target="CamelCase"/> used in the XML Schema definition is changed to a hyphen-separated
notation <xref target="KebabCase"/> (e.g., "ResourceCollection" is named "resource-collection") in the CoSWID CDDL specification.
This deviation from the original notation used in the XML representation reduces ambiguity when referencing
certain attributes in corresponding textual descriptions. An attribute referred to by its name in CamelCase
notation explicitly relates to XML SWID tags; an attribute referred to by its name in
KebabCase notation explicitly relates to CBOR CoSWID tags. This approach simplifies the
composition of further work that will reference both XML SWID and CBOR CoSWID documents.</t>
      <t>In most cases, mapping attribute names between SWID and CoSWID can be done automatically by converting between CamelCase and KebabCase attribute names. However, some CoSWID CDDL attribute names show greater variation relative to their corresponding SWID XML Schema attributes. This is done when the change improves clarity in the CoSWID specification. For example, the "name" and "version" SWID fields correspond to the "software-name" and "software-version" CoSWID fields, respectively. As such, it is not always possible to mechanically translate between corresponding attribute names in the two formats. In such cases, a manual mapping will need to be used.  XPath expressions <xref target="W3C.REC-xpath20-20101214"/> need to use SWID names; see <xref target="uri-scheme-swidpath"/>.</t>
      <t>The 57 human-readable text labels of the CDDL-based CoSWID vocabulary are mapped to integer indices via a block of rules at the bottom of the definition. This allows a more concise integer-based form to be stored or transported, as compared to the less efficient text-based form of the original vocabulary.</t>
      <t>Through the use of CDDL-based integer labels, CoSWID allows for future expansion in subsequent revisions of this specification and through extensions (see <xref target="model-extension"/>). New constructs can be associated with a new integer index. A deprecated construct can be replaced by a new construct with a new integer index. An implementation can use these integer indices to identify the construct to parse. The "CoSWID Items" registry, defined in <xref target="iana-coswid-items"/>, is used to ensure that new constructs are assigned a unique index value. This approach avoids the need to have an explicit CoSWID version.</t>
      <t>In a number of places, the value encoding admits both integer values and text strings.
The integer values are defined in a registry specific to the kind of value; the text values are not intended for interchange and are exclusively meant for private use as defined in <xref target="iana-private-use"/>. Encoders <bcp14>SHOULD NOT</bcp14> use string values based on the names registered in the registry, as these values are less concise than their index value equivalent; a decoder <bcp14>MUST</bcp14>, however, be prepared to accept text strings that are not specified in this document (and ignore the construct if a string is unknown).
In the rest of this document, we call this an "integer label with text escape".</t>
      <t>The root of the CDDL specification provided by this document is the
rule <tt>coswid</tt> (as defined in <xref target="tagged"/>):</t>

      <sourcecode type="cddl" name="coswid-exposition.cddl">
start = coswid
</sourcecode>
      <t>In CBOR, an array is encoded using bytes that identify the array, and the array's length or stop point (see <xref target="RFC8949"/>). To make items that support one or more values, the following CDDL notation is used.</t>
      <sourcecode type="cddl" name="coswid-exposition.cddl">
_name_ = (_label_ =&gt; _data_ / [ 2* _data_ ])
</sourcecode>
      <t>The CDDL rule above allows either a single data item or an array of two or more data values to be provided. When a singleton data value is provided, the CBOR markers for the array, array length, and stop point are not needed, saving bytes. When two or more data values are provided, these values are encoded as an array. This modeling pattern is used frequently in the CoSWID CDDL specification to allow for more efficient encoding of singleton values.</t>
      <t>Usage of this construct can be simplified using</t>
      <sourcecode type="cddl" name="coswid-exposition.cddl">
one-or-more&lt;T&gt; = T / [ 2* T ]
</sourcecode>

<t>simplifying the above example to</t>
      <sourcecode type="cddl" name="coswid-exposition.cddl">
_name_ = (_label_ =&gt; one-or-more&lt;_data_&gt;)
</sourcecode>
      <t>The following subsections describe the different parts of the CoSWID model.</t>
      <section anchor="character-encoding">
        <name>Character Encoding</name>
        <t>The CDDL "text" type is represented in CBOR as a major type 3, which represents a string of Unicode characters that are encoded as UTF-8 <xref target="RFC3629"/> (see <xref section="3.1" sectionFormat="of" target="RFC8949"/>).
Thus, both SWID and CoSWID use UTF-8 for the encoding of characters in text strings.</t>

        <t>To ensure that UTF-8 character strings are able to be encoded/decoded and exchanged interoperably, text strings in CoSWID <bcp14>MUST</bcp14> be encoded in a way that is consistent with the Net-Unicode definition provided in <xref target="RFC5198"/>.</t>
        <t>All names registered with IANA according to the requirements in <xref target="iana-value-registries"/> also <bcp14>MUST</bcp14> be valid according to the XML Schema NMTOKEN data type (see <xref target="W3C.REC-xmlschema-2-20041028"/>, Section 3.3.4) to ensure compatibility with the SWID specification where these names are used.</t>
      </section>
      <section anchor="model-extension">
        <name>Concise SWID Extensions</name>
        <t>The CoSWID specification contains two features that are not included in the SWID specification on which it is based. These features are:</t>
        <ul spacing="normal">
          <li>The explicit definition of types for some attributes in the ISO-19770-2:2015 XML representation that are typically represented by
the any-attribute item in the SWID model. These are
covered in <xref target="model-global-attributes"/>.</li>
          <li>The inclusion of extension points in the CoSWID specification using CDDL sockets (see <xref section="3.9" sectionFormat="of" target="RFC8610"/>). The use of CDDL sockets allows for well-formed extensions to be defined in supplementary CDDL descriptions that support additional uses of CoSWID tags that go beyond the original scope of ISO-19770-2:2015 tags.</li>
        </ul>
        <t>The following CDDL sockets (extension points) are defined in this document; they allow the addition of new information structures to their respective CDDL groups.</t>
        <table anchor="tbl-model-extension-group-sockets">
          <name>CoSWID CDDL Group Extension Points</name>
          <thead>
            <tr>
              <th align="left">Map Name</th>
              <th align="left">CDDL Socket</th>
              <th align="left">Defined in</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">concise-swid-tag</td>
              <td align="left">$$coswid-extension</td>
              <td align="left">
                <xref target="model-concise-swid-tag"/></td>
            </tr>
            <tr>
              <td align="left">entity-entry</td>
              <td align="left">$$entity-extension</td>
              <td align="left">
                <xref target="model-entity"/></td>
            </tr>
            <tr>
              <td align="left">link-entry</td>
              <td align="left">$$link-extension</td>
              <td align="left">
                <xref target="model-link"/></td>
            </tr>
            <tr>
              <td align="left">software-meta-entry</td>
              <td align="left">$$software-meta-extension</td>
              <td align="left">
                <xref target="model-software-meta"/></td>
            </tr>
            <tr>
              <td align="left">resource-collection</td>
              <td align="left">$$resource-collection-extension</td>
              <td align="left">
                <xref target="model-resource-collection"/></td>
            </tr>
            <tr>
              <td align="left">file-entry</td>
              <td align="left">$$file-extension</td>
              <td align="left">
                <xref target="model-resource-collection"/></td>
            </tr>
            <tr>
              <td align="left">directory-entry</td>
              <td align="left">$$directory-extension</td>
              <td align="left">
                <xref target="model-resource-collection"/></td>
            </tr>
            <tr>
              <td align="left">process-entry</td>
              <td align="left">$$process-extension</td>
              <td align="left">
                <xref target="model-resource-collection"/></td>
            </tr>
            <tr>
              <td align="left">resource-entry</td>
              <td align="left">$$resource-extension</td>
              <td align="left">
                <xref target="model-resource-collection"/></td>
            </tr>
            <tr>
              <td align="left">payload-entry</td>
              <td align="left">$$payload-extension</td>
              <td align="left">
                <xref target="model-payload"/></td>
            </tr>
            <tr>
              <td align="left">evidence-entry</td>
              <td align="left">$$evidence-extension</td>
              <td align="left">
                <xref target="model-evidence"/></td>
            </tr>
          </tbody>
        </table>
        <t>The "CoSWID Items" registry, defined in <xref target="iana-coswid-items"/>, provides a registration mechanism allowing new items, and their associated index values, to be added to the CoSWID model through the use of the CDDL sockets described in the table above. This registration mechanism provides for well-known index values for data items in CoSWID extensions, allowing these index values to be recognized by implementations supporting a given extension.</t>
        <t>The following additional CDDL sockets are defined in this document to allow for adding new values to corresponding type choices (i.e., to represent enumerations) via custom CDDL specifications.</t>
        <table anchor="tbl-model-extension-enum-sockets">
          <name>CoSWID CDDL Enumeration Extension Points</name>
          <thead>
            <tr>
              <th align="left">Enumeration Name</th>
              <th align="left">CDDL Socket</th>
              <th align="left">Defined in</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">version-scheme</td>
              <td align="left">$version-scheme</td>
              <td align="left">
                <xref target="indexed-version-scheme"/></td>
            </tr>
            <tr>
              <td align="left">role</td>
              <td align="left">$role</td>
              <td align="left">
                <xref target="indexed-entity-role"/></td>
            </tr>
            <tr>
              <td align="left">ownership</td>
              <td align="left">$ownership</td>
              <td align="left">
                <xref target="indexed-link-ownership"/></td>
            </tr>
            <tr>
              <td align="left">rel</td>
              <td align="left">$rel</td>
              <td align="left">
                <xref target="indexed-link-rel"/></td>
            </tr>
            <tr>
              <td align="left">use</td>
              <td align="left">$use</td>
              <td align="left">
                <xref target="indexed-link-use"/></td>
            </tr>
          </tbody>
        </table>
        <t>A number of IANA registries for CoSWID values are also defined in <xref target="iana-value-registries"/>; these registries allow new values to be registered with IANA for the enumerations above. This registration mechanism supports the definition of new well-known index values and names for new enumeration values used by CoSWID, which can also be used by other software tagging specifications. This registration mechanism allows new standardized enumerated values to be shared between multiple tagging specifications (and associated implementations) over time.</t>
      </section>
      <section anchor="model-concise-swid-tag">
        <name>The concise-swid-tag Map</name>
        <t>The CDDL specification for the root concise-swid-tag map is as follows. This rule and its constraints <bcp14>MUST</bcp14> be followed when creating or validating a CoSWID tag:</t>
        <sourcecode type="cddl" name="coswid-exposition.cddl">
concise-swid-tag = {
  tag-id =&gt; text / bstr .size 16,
  tag-version =&gt; integer,
  ? corpus =&gt; bool,
  ? patch =&gt; bool,
  ? supplemental =&gt; bool,
  software-name =&gt; text,
  ? software-version =&gt; text,
  ? version-scheme =&gt; $version-scheme,
  ? media =&gt; text,
  ? software-meta =&gt; one-or-more&lt;software-meta-entry&gt;,
  entity =&gt; one-or-more&lt;entity-entry&gt;,
  ? link =&gt; one-or-more&lt;link-entry&gt;,
  ? payload-or-evidence,
  * $$coswid-extension,
  global-attributes,
}

payload-or-evidence //= ( payload =&gt; payload-entry )
payload-or-evidence //= ( evidence =&gt; evidence-entry )

tag-id = 0
software-name = 1
entity = 2
evidence = 3
link = 4
software-meta = 5
payload = 6
corpus = 8
patch = 9
media = 10
supplemental = 11
tag-version = 12
software-version = 13
version-scheme = 14

$version-scheme /= multipartnumeric
$version-scheme /= multipartnumeric-suffix
$version-scheme /= alphanumeric
$version-scheme /= decimal
$version-scheme /= semver
$version-scheme /= int / text
multipartnumeric = 1
multipartnumeric-suffix = 2
alphanumeric = 3
decimal = 4
semver = 16384
</sourcecode>
        <t>The following list describes each member of the concise-swid-tag root map.</t>
        <dl newline="false" spacing="normal">
          <dt>global-attributes:</dt><dd>A list of items, including an optional language definition to support the
processing of text-string values and an unbounded set of any-attribute items. Described in <xref target="model-global-attributes"/>.</dd>
          <dt>tag-id (index 0):</dt><dd>A 16-byte binary string, or a textual identifier, uniquely referencing a software component. The tag
identifier <bcp14>MUST</bcp14> be globally unique. Failure to ensure global uniqueness can create ambiguity in tag use, since the tag-id serves as the global key for matching and lookups. If represented as a 16-byte binary string, the identifier <bcp14>MUST</bcp14> be a valid Universally Unique Identifier (UUID) as defined by <xref target="RFC4122"/>. There are no strict guidelines on
how the identifier is structured, but examples include a 16-byte Globally Unique Identifier (GUID) (e.g.,
class 4 UUID) <xref target="RFC4122"/>, or a DNS domain name followed by a "/" and a text string, where the domain name serves to ensure uniqueness across organizations.
A textual tag-id value <bcp14>MUST NOT</bcp14> contain a sequence of two underscores ("__"). This is because a sequence of two underscores is used to separate the TAG_CREATOR_REGID value and UNIQUE_ID value in a Software Identifier and a sequence of two underscores in a tag-id value could create ambiguity when parsing this identifier. See <xref target="sec-swima"/>.</dd>
          <dt>software-name (index 1):</dt><dd>A textual item that provides the software component's name. This name is likely the same name that would appear in a package management tool. This item maps to '/SoftwareIdentity/@name' in <xref target="SWID"/>.</dd>
          <dt>entity (index 2):</dt><dd>Provides information about one or more organizations responsible for producing the CoSWID tag, and producing or releasing the software component referenced by this
CoSWID tag. Described in <xref target="model-entity"/>.</dd>
          <dt>evidence (index 3):</dt><dd>Can be used to record the results of a software discovery process used to identify untagged software on an endpoint or to represent indicators for why software is believed to be installed on the endpoint. In either case, a CoSWID tag can be created by the tool performing an analysis of the software components installed on the endpoint. This item is mutually exclusive to payload, as evidence is always generated on the target device ad hoc. Described in <xref target="model-evidence"/>.</dd>
          <dt>link (index 4):</dt><dd>Provides a means to establish relationship arcs between the tag and another item. A given link can be used to establish the relationship between tags or to reference another resource that is related to the
CoSWID tag, e.g.,
vulnerability database association, Resource-Oriented Lightweight Information Exchange (ROLIE) Feed <xref target="RFC8322"/>, Manufacturer Usage Description (MUD) resource <xref target="RFC8520"/>, software download location, etc.).
This is modeled after the HTML "link" element.  Described in <xref target="model-link"/>.</dd>
          <dt>software-meta (index 5):</dt><dd>An open-ended map of key/value data pairs.
A number of predefined keys can be used within this item providing for
common usage and semantics across the industry.  The use of this map allows any additional
attribute to be included in the tag. It is expected that industry groups will use a common set of attribute names to allow for interoperability within their communities. Described in <xref target="model-software-meta"/>. This item maps to '/SoftwareIdentity/Meta' in <xref target="SWID"/>.</dd>
          <dt>payload (index 6):</dt><dd>Represents a collection of software artifacts (described by child items) that compose the target software. For example, these artifacts could be the files included with an installer for a corpus tag or installed on an endpoint when the software component
is installed for a primary or patch tag. The artifacts listed in a payload may be a superset of the software artifacts that are actually installed. Based on user selections at install time,
an installation might not include every artifact that could be created or executed on the
endpoint when the software component is installed or run. This item is mutually exclusive to evidence, as payload can only be provided by an external entity. Described in <xref target="model-payload"/>.</dd>
          <dt>corpus (index 8):</dt><dd>A boolean value that indicates if the tag identifies and describes an installable software component in its pre-installation state. Installable software includes an installation package or installer for a software component, a software update, or a patch. If the CoSWID tag represents installable software, the corpus item <bcp14>MUST</bcp14> be set to "true". If not provided, the default value <bcp14>MUST</bcp14> be considered "false".</dd>
          <dt>patch (index 9):</dt><dd>A boolean value that indicates if the tag identifies and describes an installed patch that has made incremental changes to a software component installed on an endpoint. If a CoSWID tag is for a patch, the patch item <bcp14>MUST</bcp14> be set to "true". If not provided, the default value <bcp14>MUST</bcp14> be considered "false". A patch item's value <bcp14>MUST NOT</bcp14> be set to "true" if the installation of the associated software package changes the version of a software component.</dd>
          <dt>media (index 10):</dt><dd>A text value that provides a hint to the tag consumer to understand what target platform this tag
applies to. This item <bcp14>MUST</bcp14> be formatted as a
query as defined by the W3C "Media Queries Level 3" Recommendation (see <xref target="W3C.REC-mediaqueries-3-20220405"/>). Support for media queries is included here for interoperability with <xref target="SWID"/>, which does not provide any further requirements for media query use. Thus, this specification does not clarify how a media query is to be used for a CoSWID.</dd>
          <dt>supplemental (index 11):</dt><dd>A boolean value that indicates if the tag is providing additional information to be associated with another referenced SWID or CoSWID tag. This allows tools and users to record their own metadata about a software component without modifying SWID primary or patch tags created by a software provider. If a CoSWID tag is a supplemental tag, the supplemental item <bcp14>MUST</bcp14> be set to "true". If not provided, the default value <bcp14>MUST</bcp14> be considered "false".</dd>
          <dt>tag-version (index 12):</dt><dd>An integer value that indicates the specific release revision of the tag. Typically, the initial value of this field is set to 0 and the value is increased for subsequent tags produced for the same software component release. This value allows a CoSWID tag producer to correct an incorrect tag previously released without indicating a change to the underlying software component the tag represents. For example, the tag-version could be changed to add new metadata, to correct a broken link, to add a missing payload entry, etc. When producing a revised tag, the new tag-version value <bcp14>MUST</bcp14> be greater than the old tag-version value.</dd>
          <dt>software-version (index 13):</dt><dd>A textual value representing the specific release or development version of the software component. This item maps to '/SoftwareIdentity/@version' in <xref target="SWID"/>.</dd>
          <dt>version-scheme (index 14):</dt><dd>An integer or textual value representing the versioning scheme used for the software-version item, as an integer label with text escape. For the "Version Scheme" values, see <xref target="indexed-version-scheme"/>.
If an integer value is used, it <bcp14>MUST</bcp14> be an index value in the range -256 to 65535. Integer values in the range -256 to -1 are reserved for testing and use in closed environments (see <xref target="iana-private-use"/>). Integer values in the range 0 to 65535 correspond to registered entries in the IANA "Software ID Version Scheme Values" registry (see <xref target="iana-version-scheme"/>).</dd>
          <dt>$$coswid-extension:</dt><dd>A CDDL socket that is used to add new information structures to the concise-swid-tag root map. See <xref target="model-extension"/>.</dd>
	</dl>
      </section>
      <section anchor="concise-swid-tag-co-constraints">
        <name>concise-swid-tag Co-constraints</name>
        <t>The following co-constraints apply to the information provided in the concise-swid-tag group.</t>
        <ul spacing="normal">
          <li>The patch and supplemental items <bcp14>MUST NOT</bcp14> both be set to "true".</li>
          <li>If the patch item is set to "true", the tag <bcp14>MUST</bcp14> contain at least one link item (see <xref target="model-link"/>) with both the rel item value of "patches" and an href item specifying an association with the software that was patched. Without at least one link item, the target of the patch cannot be identified and the patch tag cannot be applied without external context.</li>
          <li>If all of the corpus, patch, and supplemental items are "false" or if the corpus item is set to "true", then a software-version item <bcp14>MUST</bcp14> be included with a value set to the version of the software component.</li>
        </ul>
      </section>
      <section anchor="model-global-attributes">
        <name>The global-attributes Group</name>
        <t>The global-attributes group provides a list of items, including an optional
language definition to support the processing of text-string values, and an
unbounded set of any-attribute items allowing for additional items to be
provided as a general point of extension in the model.</t>
        <t>The CDDL for the global-attributes group follows:</t>
        <sourcecode type="cddl" name="coswid-exposition.cddl">
global-attributes = (
  ? lang =&gt; text,
  * any-attribute,
)

any-attribute = (
  label =&gt; one-or-more&lt;text&gt; / one-or-more&lt;int&gt;
)

label = text / int
</sourcecode>
        <t>The following list describes each child item of this group.</t>
         <dl newline="false" spacing="normal">
          <dt>lang (index 15):</dt><dd>A textual language tag that
conforms with the IANA "Language Subtag Registry" <xref target="RFC5646"/>. The context of the specified language applies to all sibling and descendant textual values, unless a descendant object has defined a different language tag. Thus, a new context is established when a descendant object redefines a new language tag. All textual values within a given context <bcp14>MUST</bcp14> be considered expressed in the specified language.</dd>
          <dt>any-attribute:</dt><dd>A sub-group that provides a means to include arbitrary information
via label/index ("key") value pairs. Labels can be either a single integer or text string. Values can be a single integer, a text string, or an array of integers or text strings.</dd>
	 </dl>
      </section>
      <section anchor="model-entity">
        <name>The entity-entry Map</name>
        <t>The CDDL for the entity-entry map follows:</t>
        <sourcecode type="cddl" name="coswid-exposition.cddl">
entity-entry = {
  entity-name =&gt; text,
  ? reg-id =&gt; any-uri,
  role =&gt; one-or-more&lt;$role&gt;,
  ? thumbprint =&gt; hash-entry,
  * $$entity-extension,
  global-attributes,
}

entity-name = 31
reg-id = 32
role = 33
thumbprint = 34

$role /= tag-creator
$role /= software-creator
$role /= aggregator
$role /= distributor
$role /= licensor
$role /= maintainer
$role /= int / text
tag-creator=1
software-creator=2
aggregator=3
distributor=4
licensor=5
maintainer=6
</sourcecode>
        <t>The following list describes each child item of this group.</t>
         <dl newline="false" spacing="normal">
          <dt>global-attributes:</dt><dd>The global-attributes group as described in <xref target="model-global-attributes"/>.</dd>
          <dt>entity-name (index 31):</dt><dd>The textual name of the organizational entity claiming the roles specified by the role item for the CoSWID tag. This item maps to '/SoftwareIdentity/Entity/@name' in <xref target="SWID"/>.</dd>
          <dt>reg-id (index 32):</dt><dd>Registration ID. This value is intended to uniquely identify a naming authority in a
given scope (e.g., global, organization, vendor, customer, administrative domain,
etc.) for the referenced entity. The value of a
registration ID <bcp14>MUST</bcp14> be a URI as defined in <xref target="RFC3986"/>; it is not intended to be dereferenced. The scope will usually be the scope of an organization.</dd>
            <dt>role (index 33):</dt><dd><t>An integer or textual value (integer label with text escape; see <xref target="data-def"/>) representing the relationship(s) between the entity and this tag or the referenced software component. If an integer value is used, it <bcp14>MUST</bcp14> be an index value in the range -256 to 255. Integer values in the range -256 to -1 are reserved for testing and use in closed environments (see <xref target="iana-private-use"/>). Integer values in the range 0 to 255 correspond to registered entries in the IANA "Software ID Entity Role Values" registry (see <xref target="iana-entity-role"/>).</t>
      <t>The following additional requirements exist for the use of the role item:</t>
            <ul spacing="normal">
              <li>An entity item <bcp14>MUST</bcp14> be provided with the role of "tag-creator" for every CoSWID tag. This indicates the organization that created the CoSWID tag.</li>
              <li>An entity item <bcp14>SHOULD</bcp14> be provided with the role of "software-creator" for every CoSWID tag, if this information is known to the tag creator. This indicates the organization that created the referenced software component.</li>
            </ul>
	  </dd>
	  </dl>
     <dl newline="false" spacing="normal">
          <dt>thumbprint (index 34):</dt><dd>Value that provides a hash (i.e., the thumbprint) of the signing entity's public key certificate. This item provides an indicator of which entity signed the CoSWID tag, which will typically be the tag creator.  See <xref target="model-hash-entry"/> for more details on the use of the hash-entry data structure.</dd>
          <dt>$$entity-extension:</dt><dd>A CDDL socket that can be used to extend the entity-entry group model. See <xref target="model-extension"/>.</dd>
     </dl>
      </section>
      <section anchor="model-link">
        <name>The link-entry Map</name>
        <t>The CDDL for the link-entry map follows:</t>
        <sourcecode type="cddl" name="coswid-exposition.cddl">
link-entry = {
  ? artifact =&gt; text,
  href =&gt; any-uri,
  ? media =&gt; text,
  ? ownership =&gt; $ownership,
  rel =&gt; $rel,
  ? media-type =&gt; text,
  ? use =&gt; $use,
  * $$link-extension,
  global-attributes,
}

media = 10
artifact = 37
href = 38
ownership = 39
rel = 40
media-type = 41
use = 42

$ownership /= shared
$ownership /= private
$ownership /= abandon
$ownership /= int / text
abandon=1
private=2
shared=3

$rel /= ancestor
$rel /= component
$rel /= feature
$rel /= installationmedia
$rel /= packageinstaller
$rel /= parent
$rel /= patches
$rel /= requires
$rel /= see-also
$rel /= supersedes
$rel /= supplemental
$rel /= -256..65536 / text
ancestor=1
component=2
feature=3
installationmedia=4
packageinstaller=5
parent=6
patches=7
requires=8
see-also=9
supersedes=10
supplemental=11

$use /= optional
$use /= required
$use /= recommended
$use /= int / text
optional=1
required=2
recommended=3
</sourcecode>
        <t>The following list describes each member of this map.</t>
         <dl newline="false" spacing="normal">
          <dt>global-attributes:</dt><dd>The global-attributes group as described in <xref target="model-global-attributes"/>.</dd>
          <dt>media (index 10):</dt><dd>A value that provides a hint to the consumer of the link so that the consumer understands what target platform the link is applicable to. This item represents a
query as defined by the W3C "Media Queries Level 3" Recommendation (see <xref target="W3C.REC-mediaqueries-3-20220405"/>). As highlighted in the definition of the media item provided in <xref target="model-concise-swid-tag"/>, support for media queries is included here for interoperability with <xref target="SWID"/>, which does not provide any further requirements for media query use. Thus, this specification does not clarify how a media query is to be used for a CoSWID.</dd>
          <dt>artifact (index 37):</dt><dd>To be used with rel="installationmedia". This item's value provides the absolute filesystem path to the installer executable or script that can be run to launch the referenced installation.  Links with the same artifact name <bcp14>MUST</bcp14> be considered mirrors of each other, allowing the installation media to be acquired from any of the described sources.</dd>
            <dt>href (index 38):</dt><dd><t>A URI-reference <xref target="RFC3986"/> for the referenced resource. The href item's value can be, but is not limited to, the following (which is a slightly modified excerpt from <xref target="SWID"/>):
            </t>
            <ul spacing="normal">
              <li>If no URI scheme is provided, then the URI-reference is a relative reference to the base URI of the CoSWID tag, i.e., the URI under which the CoSWID tag was provided -- for example, "./folder/supplemental.coswid".</li>
              <li>This item can be a physical resource location with any acceptable URI scheme (e.g., &lt;file://&gt;, &lt;http://&gt;, &lt;https://&gt;, &lt;ftp://&gt;).</li>
              <li>A URI-like expression with "swid:" as the scheme refers to another SWID or CoSWID by the referenced tag's tag-id. This
expression needs to be resolved in the context of the endpoint by software
that can look up other SWID or CoSWID tags. For example, "swid:2df9de35-0aff-4a86-ace6-f7dddd1ade4c" references the tag with the tag-id value "2df9de35-0aff-4a86-ace6-f7dddd1ade4c". See <xref target="uri-scheme-swid"/> for guidance on the "swid" expressions.</li>
              <li>This item can be a URI-like expression with "swidpath:" as the scheme, which refers to another software tag via an
XPath query <xref target="W3C.REC-xpath20-20101214"/> that matches items in that tag (<xref target="uri-scheme-swidpath"/>). This scheme is provided for compatibility with <xref target="SWID"/>. This specification does not define how to resolve an XPath query in the context of CBOR. See <xref target="uri-scheme-swidpath"/> for guidance on the "swidpath" expressions.</li>
            </ul>
          </dd>
          <dt>ownership (index 39):</dt><dd>An integer or textual value (integer label with text escape; see <xref target="data-def"/>). See <xref target="indexed-link-ownership"/> for the list of values available for this item. This item is used when the href item references another software component to indicate the degree of ownership between the software component referenced by the CoSWID tag and the software component referenced by the link. If an integer value is used, it <bcp14>MUST</bcp14> be an index value in the range -256 to 255. Integer values in the range -256 to -1 are reserved for testing and use in closed environments (see <xref target="iana-private-use"/>). Integer values in the range 0 to 255 correspond to registered entries in the "Software ID Link Ownership Values" registry.</dd>
          <dt>rel (index 40):</dt><dd>An integer or textual value (integer label with text escape; see <xref target="data-def"/>). See <xref target="indexed-link-rel"/> for the list of values available for this item. This item identifies the relationship between this CoSWID and the target resource identified by the href item. If an integer value is used, it <bcp14>MUST</bcp14> be an index value in the range -256 to 65535. Integer values in the range -256 to -1 are reserved for testing and use in closed environments (see <xref target="iana-private-use"/>). Integer values in the range 0 to 65535 correspond to registered entries in the IANA "Software ID Link Relationship Values" registry (see <xref target="iana-link-rel"/>). If a string value is used, it <bcp14>MUST</bcp14> be either a private use name as defined in <xref target="iana-private-use"/> or a "Relation Name" from the IANA "Link Relation Types" registry (see <eref target="https://www.iana.org/assignments/link-relations/" brackets="angle"/>) as defined by <xref target="RFC8288"/>. When a string value defined in the IANA "Software ID Link Relationship Values" registry matches a Relation Name defined in the IANA "Link Relation Types" registry, the index value in the IANA "Software ID Link Relationship Values" registry <bcp14>MUST</bcp14> be used instead, as this relationship has a specialized meaning in the context of a CoSWID tag. String values correspond to registered entries in the "Software ID Link Relationship Values" registry.</dd>
          <dt>media-type (index 41):</dt><dd>Supplies the resource consumer with a hint regarding what type of resource to expect. A link can point to arbitrary resources on the endpoint, local network, or Internet using the href item. (This is a <em>hint</em>: there
is no obligation for the server hosting the target of the URI to use the
indicated media type when the URI is dereferenced.)
Media types are identified by referencing a "Name" from the IANA "Media Types" registry (see <eref target="https://www.iana.org/assignments/media-types/" brackets="angle"/>). This item maps to '/SoftwareIdentity/Link/@type' in <xref target="SWID"/>.</dd>
          <dt>use (index 42):</dt><dd>An integer or textual value (integer label with text escape; see <xref target="data-def"/>). See <xref target="indexed-link-use"/> for the list of values available for this item. This item is used to determine if the referenced software component has to be installed before installing the software component identified by the CoSWID tag. If an integer value is used, it <bcp14>MUST</bcp14> be an index value in the range -256 to 255. Integer values in the range -256 to -1 are reserved for testing and use in closed environments (see <xref target="iana-private-use"/>). Integer values in the range 0 to 255 correspond to registered entries in the IANA "Software ID Link Use Values" registry (see <xref target="iana-link-use"/>). If a string value is used, it <bcp14>MUST</bcp14> be a private use name as defined in <xref target="iana-private-use"/>. String values correspond to registered entries in the "Software ID Link Use Values" registry.</dd>
          <dt>$$link-extension:</dt><dd>A CDDL socket that can be used to extend the link-entry map model. See <xref target="model-extension"/>.</dd>
	 </dl>
      </section>
      <section anchor="model-software-meta">
        <name>The software-meta-entry Map</name>
        <t>The CDDL for the software-meta-entry map follows:</t>
        <sourcecode type="cddl" name="coswid-exposition.cddl">
software-meta-entry = {
  ? activation-status =&gt; text,
  ? channel-type =&gt; text,
  ? colloquial-version =&gt; text,
  ? description =&gt; text,
  ? edition =&gt; text,
  ? entitlement-data-required =&gt; bool,
  ? entitlement-key =&gt; text,
  ? generator =&gt; text / bstr .size 16,
  ? persistent-id =&gt; text,
  ? product =&gt; text,
  ? product-family =&gt; text,
  ? revision =&gt; text,
  ? summary =&gt; text,
  ? unspsc-code =&gt; text,
  ? unspsc-version =&gt; text,
  * $$software-meta-extension,
  global-attributes,
}

activation-status = 43
channel-type = 44
colloquial-version = 45
description = 46
edition = 47
entitlement-data-required = 48
entitlement-key = 49
generator = 50
persistent-id = 51
product = 52
product-family = 53
revision = 54
summary = 55
unspsc-code = 56
unspsc-version = 57
</sourcecode>
        <t>The following list describes each child item of this group.</t>
        <dl newline="false" spacing="normal">
          <dt>global-attributes:</dt><dd>The global-attributes group as described in <xref target="model-global-attributes"/>.</dd>
          <dt>activation-status (index 43):</dt><dd>A textual value that identifies how the software component has been activated, which might relate to specific terms and conditions for its use (e.g., trial, serialized, licensed, unlicensed, etc.) and relate to an entitlement.  This attribute is typically used in supplemental tags, as it contains information that might be selected during a specific install.</dd>
          <dt>channel-type (index 44):</dt><dd>A textual value that identifies which sales, licensing, or marketing channel the software component has been targeted for (e.g., volume, retail, original equipment manufacturer (OEM), academic, etc.). This attribute is typically used in supplemental tags, as it contains information that might be selected during a specific install.</dd>
          <dt>colloquial-version (index 45):</dt><dd>A textual value for the software component's informal or colloquial version. Examples may include a year value, a major version number, or a similar value used to identify a group of specific software component releases that are part of the same release/support cycle. This version can be the same through multiple releases of a software component, while the software-version specified in the concise-swid-tag group is much more specific and will change for each software component release. This version is intended to be used for string comparison (byte by byte) only and is not intended to be used to determine if a specific value is earlier or later in a sequence.</dd>
          <dt>description (index 46):</dt><dd>A textual value that provides a detailed description of the software component. This value <bcp14>MAY</bcp14> be multiple paragraphs separated by CR LF characters as described by <xref target="RFC5198"/>.</dd>
          <dt>edition (index 47):</dt><dd>A textual value indicating that the software component represents a functional variation of the code base used to support multiple software components. For example, this item can be used to differentiate enterprise, standard, or professional variants of a software component.</dd>
          <dt>entitlement-data-required (index 48):</dt><dd>A boolean value that can be used to determine if accompanying proof of entitlement is needed when a software license reconciliation process is performed.</dd>
          <dt>entitlement-key (index 49):</dt><dd>A vendor-specific textual key that can be used to identify and establish a relationship to an entitlement. Examples of an entitlement-key might include a serial number, product key, or license key. For values that relate to a given software component install (e.g., license key), a supplemental tag will typically contain this information. In other cases, where a general-purpose key can be provided that applies to all possible installs of the software component on different endpoints, a primary tag will typically contain this information.
Since CoSWID tags are not intended to contain confidential information, tag authors are advised not to record unprotected, private software license keys in this field.</dd>
          <dt>generator (index 50):</dt><dd>The name (or tag-id) of the software component that created the CoSWID tag. If the generating software component has a SWID or CoSWID tag, then the tag-id for the generating software component <bcp14>SHOULD</bcp14> be provided.</dd>
          <dt>persistent-id (index 51):</dt><dd>A globally unique identifier used to identify a set of software components that are related. Software components sharing the same persistent-id can be different versions. This item can be used to relate software components, released at different points in time or through different release channels, that may not be able to be related through the use of the link item.</dd>
          <dt>product (index 52):</dt><dd>A basic name for the software component that can be common across multiple tagged software components (e.g., Apache HTTP daemon (HTTPD)).</dd>
          <dt>product-family (index 53):</dt><dd>A textual value indicating the software components' overall product family.  This should be used when multiple related software components form a larger capability that is installed on multiple different endpoints. For example, some software families may consist of a server, a client, and shared service components that are part of a larger capability. Email systems, enterprise applications, backup services, web conferencing, and similar capabilities are examples of families. The use of this item is not intended to represent groups of software that are bundled or installed together. The persistent-id or link items <bcp14>SHOULD</bcp14> be used to relate bundled software components.</dd>
          <dt>revision (index 54):</dt><dd>A string value indicating an informal or colloquial release version of the software. This value can provide a different version value as compared to the software-version specified in the concise-swid-tag group. This is useful when one or more releases need to have an informal version label that differs from the specific exact version value specified by software-version. Examples can include SP1, RC1, Beta, etc.</dd>
          <dt>summary (index 55):</dt><dd>A short description of the software component. This <bcp14>MUST</bcp14> be a single sentence suitable for display in a user interface.</dd>
          <dt>unspsc-code (index 56):</dt><dd>An 8-digit United Nations Standard Products and Services Code (UNSPSC) classification code for the software component as defined by the UNSPSC <xref target="UNSPSC"/>.</dd>
          <dt>unspsc-version (index 57):</dt><dd>The UNSPSC version used to define the unspsc-code value.</dd>
          <dt>$$software-meta-extension:</dt><dd>A CDDL socket that can be used to extend the software-meta-entry group model. See <xref target="model-extension"/>.</dd>
	</dl>
      </section>
      <section anchor="the-resource-collection-definition">
        <name>The Resource Collection Definition</name>
        <section anchor="model-hash-entry">
          <name>The hash-entry Array</name>
          <t>CoSWID adds explicit support for the representation of hash entries using algorithms that are
registered in the IANA "Named Information Hash Algorithm Registry" <xref target="IANA.named-information"/>. This array is used by both the hash (index 7) and thumbprint (index 34) values. This is the equivalent of the namespace qualified "hash" attribute in <xref target="SWID"/>.</t>
          <sourcecode type="cddl" name="coswid-exposition.cddl">
hash-entry = [
  hash-alg-id: int,
  hash-value: bytes,
]
</sourcecode>
          <t>The number used as a value for hash-alg-id is an integer-based hash algorithm identifier whose value <bcp14>MUST</bcp14> refer to an ID in the IANA "Named Information Hash Algorithm Registry" <xref target="IANA.named-information"/> with a Status of "current" (at the time the generator software was built or later); other hash algorithms <bcp14>MUST NOT</bcp14> be used. If the hash-alg-id is not known, then the integer value "0" <bcp14>MUST</bcp14> be used. This allows for conversion from ISO SWID tags <xref target="SWID"/>, which do not allow an algorithm to be identified for this field.</t>
          <t>The hash-value <bcp14>MUST</bcp14> represent the raw hash value as a byte string (as opposed to, for example, base64 encoded) generated from the representation of the resource using the hash algorithm indicated by hash-alg-id.</t>
        </section>
        <section anchor="model-resource-collection">
          <name>The resource-collection Group</name>
          <t>The resource-collection group provides a list of items used in both evidence (created by a software discovery process) and
payload (installed in an endpoint) content of a CoSWID tag document to
structure and differentiate the content of specific CoSWID tag types. Potential
content includes directories, files, processes, or resources.</t>
          <t>The CDDL for the resource-collection group follows:</t>
          <sourcecode type="cddl" name="coswid-exposition.cddl">
path-elements-group = ( ? directory =&gt; one-or-more&lt;directory-entry&gt;,
                        ? file =&gt; one-or-more&lt;file-entry&gt;,
                      )

resource-collection = (
  path-elements-group,
  ? process =&gt; one-or-more&lt;process-entry&gt;,
  ? resource =&gt; one-or-more&lt;resource-entry&gt;,
  * $$resource-collection-extension,
)

filesystem-item = (
  ? key =&gt; bool,
  ? location =&gt; text,
  fs-name =&gt; text,
  ? root =&gt; text,
)

file-entry = {
  filesystem-item,
  ? size =&gt; uint,
  ? file-version =&gt; text,
  ? hash =&gt; hash-entry,
  * $$file-extension,
  global-attributes,
}

directory-entry = {
  filesystem-item,
  ? path-elements =&gt; { path-elements-group },
  * $$directory-extension,
  global-attributes,
}

process-entry = {
  process-name =&gt; text,
  ? pid =&gt; integer,
  * $$process-extension,
  global-attributes,
}

resource-entry = {
  type =&gt; text,
  * $$resource-extension,
  global-attributes,
}

hash = 7
directory = 16
file = 17
process = 18
resource = 19
size = 20
file-version = 21
key = 22
location = 23
fs-name = 24
root = 25
path-elements = 26
process-name = 27
pid = 28
type = 29
</sourcecode>
          <t>The following list describes each member of the groups and maps illustrated above.</t>
           <dl newline="false" spacing="normal">
            <dt>filesystem-item:</dt><dd>A list of common items used for representing the filesystem root, relative location, name, and significance of a file or directory item.</dd>
            <dt>global-attributes:</dt><dd>The global-attributes group as described in <xref target="model-global-attributes"/>.</dd>
            <dt>hash (index 7):</dt><dd>Value that provides a hash of a file. This item provides an integrity measurement with respect to a specific file. See <xref target="model-hash-entry"/> for more details on the use of the hash-entry data structure.</dd>
            <dt>directory (index 16):</dt><dd>Item that allows child directory and file items to be defined within a directory hierarchy for the software component.</dd>
            <dt>file (index 17):</dt><dd>Item that allows details about a file to be provided for the software component.</dd>
            <dt>process (index 18):</dt><dd>Item that allows details to be provided about the runtime behavior of the software component, such as information that will appear in a process listing on an endpoint.</dd>
            <dt>resource (index 19):</dt><dd>Item that can be used to provide details about an artifact or capability expected to be found on an endpoint or evidence collected related to the software component. This can be used to represent concepts not addressed directly by the directory, file, or process items. Examples include registry keys, bound ports, etc. The equivalent construct in <xref target="SWID"/> is currently underspecified. As a result, this item might be further defined through extensions in the future.</dd>
            <dt>size (index 20):</dt><dd>The file's size in bytes.</dd>
            <dt>file-version (index 21):</dt><dd>The file's version as reported by querying information on the file from the operating system (if available). This item maps to '/SoftwareIdentity/(Payload|Evidence)/File/@version' in <xref target="SWID"/>.</dd>
            <dt>key (index 22):</dt><dd>A boolean value indicating if a file or directory is significant or required for the software component to execute or function properly. These are files or directories that can be used to affirmatively determine if the software component is installed on an endpoint.</dd>
            <dt>location (index 23):</dt><dd>The filesystem path where a file is expected to be located when installed or copied. The location <bcp14>MUST</bcp14> be either an absolute path, a path relative to the path value included in the parent directory item (preferred), or a path relative to the location of the CoSWID tag if no parent is defined. The location <bcp14>MUST NOT</bcp14> include a file's name, which is provided by the fs-name item.</dd>
            <dt>fs-name (index 24):</dt><dd>The name of the directory or file without any path information. This aligns with a file "name" in <xref target="SWID"/>. This item maps to '/SoftwareIdentity/(Payload|Evidence)/(File|Directory)/@name' in <xref target="SWID"/>.</dd>
            <dt>root (index 25):</dt><dd>A host-specific name for the root of the filesystem. The location item is considered relative to this location if specified. If not provided, the value provided by the location item is expected to be relative to its parent or the location of the CoSWID tag if no parent is provided.</dd>
            <dt>path-elements (index 26):</dt><dd>Group that allows a hierarchy of directory and file items to be defined in payload or evidence items. This is a construction within the CDDL definition of CoSWID to support shared syntax and does not appear in <xref target="SWID"/>.</dd>
            <dt>process-name (index 27):</dt><dd>The software component's process name as it will appear in an endpoint's process list. This aligns with a process "name" in <xref target="SWID"/>. This item maps to '/SoftwareIdentity/(Payload|Evidence)/Process/@name' in <xref target="SWID"/>.</dd>
            <dt>pid (index 28):</dt><dd>The process ID identified for a running instance of the software component in the endpoint's process list. This is used as part of the evidence item.</dd>
            <dt>type (index 29):</dt><dd>A human-readable string indicating the type of resource.</dd>
            <dt>$$resource-collection-extension:</dt><dd>A CDDL socket that can be used to extend the resource-collection group model. This can be used to add new specialized types of resources. See <xref target="model-extension"/>.</dd>
            <dt>$$file-extension:</dt><dd>A CDDL socket that can be used to extend the file-entry group model. See <xref target="model-extension"/>.</dd>
            <dt>$$directory-extension:</dt><dd>A CDDL socket that can be used to extend the directory-entry group model. See <xref target="model-extension"/>.</dd>
            <dt>$$process-extension:</dt><dd>A CDDL socket that can be used to extend the process-entry group model. See <xref target="model-extension"/>.</dd>
            <dt>$$resource-extension:</dt><dd>A CDDL socket that can be used to extend the resource-entry group model. See <xref target="model-extension"/>.</dd>
	   </dl>
        </section>
        <section anchor="model-payload">
          <name>The payload-entry Map</name>
          <t>The CDDL for the payload-entry map follows:</t>
          <sourcecode type="cddl" name="coswid-exposition.cddl">
payload-entry = {
  resource-collection,
  * $$payload-extension,
  global-attributes,
}
</sourcecode>
          <t>The following list describes each child item of this group.</t>
           <dl newline="false" spacing="normal">
            <dt>global-attributes:</dt><dd>The global-attributes group as described in <xref target="model-global-attributes"/>.</dd>
            <dt>resource-collection:</dt><dd>The resource-collection group as described in <xref target="model-resource-collection"/>.</dd>
            <dt>$$payload-extension:</dt><dd>A CDDL socket that can be used to extend the payload-entry group model. See <xref target="model-extension"/>.</dd>
	   </dl>
        </section>
        <section anchor="model-evidence">
          <name>The evidence-entry Map</name>
          <t>The CDDL for the evidence-entry map follows:</t>
          <sourcecode type="cddl" name="coswid-exposition.cddl">
evidence-entry = {
  resource-collection,
  ? date =&gt; integer-time,
  ? device-id =&gt; text,
  ? location =&gt; text,
  * $$evidence-extension,
  global-attributes,
}

date = 35
device-id = 36
</sourcecode>
          <t>The following list describes each child item of this group.</t>
           <dl newline="false" spacing="normal">
            <dt>global-attributes:</dt><dd>The global-attributes group as described in <xref target="model-global-attributes"/>.</dd>
            <dt>resource-collection:</dt><dd>The resource-collection group as described in <xref target="model-resource-collection"/>.</dd>
            <dt>location (index 23):</dt><dd>The filesystem path of the location of the CoSWID tag generated as evidence. This path is always an absolute file path (unlike the value of a location item found within a filesystem-item as described
in <xref target="model-resource-collection"/>, which can be either a relative path or an absolute path).</dd>
            <dt>date (index 35):</dt><dd>The date and time the information was collected pertaining to the evidence item in epoch-based date/time format as specified in <xref section="3.4.2" sectionFormat="of" target="RFC8949"/>.</dd>
            <dt>device-id (index 36):</dt><dd>The endpoint's string identifier from which the evidence was collected.</dd>
            <dt>$$evidence-extension:</dt><dd> A CDDL socket that can be used to extend the evidence-entry group model. See <xref target="model-extension"/>.</dd>
	   </dl>
        </section>
      </section>
      <section anchor="full-cddl-specification">
        <name>Full CDDL Specification</name>
        <t>In order to create a valid CoSWID document, the structure of the corresponding CBOR message <bcp14>MUST</bcp14>
adhere to the following CDDL specification.</t>
        <sourcecode type="cddl" name="concise-swid-tag.cddl" markers="true">
concise-swid-tag = {
  tag-id =&gt; text / bstr .size 16,
  tag-version =&gt; integer,
  ? corpus =&gt; bool,
  ? patch =&gt; bool,
  ? supplemental =&gt; bool,
  software-name =&gt; text,
  ? software-version =&gt; text,
  ? version-scheme =&gt; $version-scheme,
  ? media =&gt; text,
  ? software-meta =&gt; one-or-more&lt;software-meta-entry&gt;,
  entity =&gt; one-or-more&lt;entity-entry&gt;,
  ? link =&gt; one-or-more&lt;link-entry&gt;,
  ? payload-or-evidence,
  * $$coswid-extension,
  global-attributes,
}

payload-or-evidence //= ( payload =&gt; payload-entry )
payload-or-evidence //= ( evidence =&gt; evidence-entry )

any-uri = uri
label = text / int

$version-scheme /= multipartnumeric
$version-scheme /= multipartnumeric-suffix
$version-scheme /= alphanumeric
$version-scheme /= decimal
$version-scheme /= semver
$version-scheme /= int / text

any-attribute = (
  label =&gt; one-or-more&lt;text&gt; / one-or-more&lt;int&gt;
)

one-or-more&lt;T&gt; = T / [ 2* T ]

global-attributes = (
  ? lang =&gt; text,
  * any-attribute,
)

hash-entry = [
  hash-alg-id: int,
  hash-value: bytes,
]

entity-entry = {
  entity-name =&gt; text,
  ? reg-id =&gt; any-uri,
  role =&gt; one-or-more&lt;$role&gt;,
  ? thumbprint =&gt; hash-entry,
  * $$entity-extension,
  global-attributes,
}

$role /= tag-creator
$role /= software-creator
$role /= aggregator
$role /= distributor
$role /= licensor
$role /= maintainer
$role /= int / text

link-entry = {
  ? artifact =&gt; text,
  href =&gt; any-uri,
  ? media =&gt; text,
  ? ownership =&gt; $ownership,
  rel =&gt; $rel,
  ? media-type =&gt; text,
  ? use =&gt; $use,
  * $$link-extension,
  global-attributes,
}

$ownership /= shared
$ownership /= private
$ownership /= abandon
$ownership /= int / text

$rel /= ancestor
$rel /= component
$rel /= feature
$rel /= installationmedia
$rel /= packageinstaller
$rel /= parent
$rel /= patches
$rel /= requires
$rel /= see-also
$rel /= supersedes
$rel /= supplemental
$rel /= -256..65536 / text

$use /= optional
$use /= required
$use /= recommended
$use /= int / text

software-meta-entry = {
  ? activation-status =&gt; text,
  ? channel-type =&gt; text,
  ? colloquial-version =&gt; text,
  ? description =&gt; text,
  ? edition =&gt; text,
  ? entitlement-data-required =&gt; bool,
  ? entitlement-key =&gt; text,
  ? generator =&gt; text / bstr .size 16,
  ? persistent-id =&gt; text,
  ? product =&gt; text,
  ? product-family =&gt; text,
  ? revision =&gt; text,
  ? summary =&gt; text,
  ? unspsc-code =&gt; text,
  ? unspsc-version =&gt; text,
  * $$software-meta-extension,
  global-attributes,
}

path-elements-group = ( ? directory =&gt; one-or-more&lt;directory-entry&gt;,
                        ? file =&gt; one-or-more&lt;file-entry&gt;,
                      )

resource-collection = (
  path-elements-group,
  ? process =&gt; one-or-more&lt;process-entry&gt;,
  ? resource =&gt; one-or-more&lt;resource-entry&gt;,
  * $$resource-collection-extension,
)

file-entry = {
  filesystem-item,
  ? size =&gt; uint,
  ? file-version =&gt; text,
  ? hash =&gt; hash-entry,
  * $$file-extension,
  global-attributes,
}

directory-entry = {
  filesystem-item,
  ? path-elements =&gt; { path-elements-group },
  * $$directory-extension,
  global-attributes,
}

process-entry = {
  process-name =&gt; text,
  ? pid =&gt; integer,
  * $$process-extension,
  global-attributes,
}

resource-entry = {
  type =&gt; text,
  * $$resource-extension,
  global-attributes,
}

filesystem-item = (
  ? key =&gt; bool,
  ? location =&gt; text,
  fs-name =&gt; text,
  ? root =&gt; text,
)

payload-entry = {
  resource-collection,
  * $$payload-extension,
  global-attributes,
}

evidence-entry = {
  resource-collection,
  ? date =&gt; integer-time,
  ? device-id =&gt; text,
  ? location =&gt; text,
  * $$evidence-extension,
  global-attributes,
}

integer-time = #6.1(int)

; "global map member" integer indices
tag-id = 0
software-name = 1
entity = 2
evidence = 3
link = 4
software-meta = 5
payload = 6
hash = 7
corpus = 8
patch = 9
media = 10
supplemental = 11
tag-version = 12
software-version = 13
version-scheme = 14
lang = 15
directory = 16
file = 17
process = 18
resource = 19
size = 20
file-version = 21
key = 22
location = 23
fs-name = 24
root = 25
path-elements = 26
process-name = 27
pid = 28
type = 29
entity-name = 31
reg-id = 32
role = 33
thumbprint = 34
date = 35
device-id = 36
artifact = 37
href = 38
ownership = 39
rel = 40
media-type = 41
use = 42
activation-status = 43
channel-type = 44
colloquial-version = 45
description = 46
edition = 47
entitlement-data-required = 48
entitlement-key = 49
generator = 50
persistent-id = 51
product = 52
product-family = 53
revision = 54
summary = 55
unspsc-code = 56
unspsc-version = 57

; "version-scheme" integer indices
multipartnumeric = 1
multipartnumeric-suffix = 2
alphanumeric = 3
decimal = 4
semver = 16384

; "role" integer indices
tag-creator=1
software-creator=2
aggregator=3
distributor=4
licensor=5
maintainer=6

; "ownership" integer indices
abandon=1
private=2
shared=3

; "rel" integer indices
ancestor=1
component=2
feature=3
installationmedia=4
packageinstaller=5
parent=6
patches=7
requires=8
see-also=9
supersedes=10
; supplemental=11 ; already defined

; "use" integer indices
optional=1
required=2
recommended=3
</sourcecode>
      </section>
    </section>
    <section anchor="semantics-tag-type">
      <name>Determining the Type of CoSWID</name>
      <t>The operational model for SWID and CoSWID tags was introduced in <xref target="intro-lifecycle"/>, which described four different CoSWID tag types. The following additional rules apply to the use of CoSWID tags to ensure that created tags properly identify the tag type.</t>
      <t>The first matching rule <bcp14>MUST</bcp14> determine the type of the CoSWID tag.</t>
      <dl newline="false" spacing="normal">
        <dt>Primary Tag:</dt><dd>A CoSWID tag <bcp14>MUST</bcp14> be considered a primary tag if the corpus, patch, and supplemental items are "false".</dd>
        <dt>Supplemental Tag:</dt><dd>A CoSWID tag <bcp14>MUST</bcp14> be considered a supplemental tag if the supplemental item is set to "true".</dd>
        <dt>Corpus Tag:</dt><dd>A CoSWID tag <bcp14>MUST</bcp14> be considered a corpus tag if the corpus item is "true".</dd>
        <dt>Patch Tag:</dt><dd>A CoSWID tag <bcp14>MUST</bcp14> be considered a patch tag if the patch item is "true".</dd>
      </dl>
      <aside><t>Note: It is possible for some or all of the corpus, patch, and supplemental items to simultaneously have values set as "true". The rules above provide a means to determine the tag's type in such a case. For example, a SWID or CoSWID tag for a patch installer might have both corpus and patch items set to "true". In such a case, the tag is a "corpus tag". The tag installed by this installer would have only the patch item set to "true", making the installed tag type a "patch tag".</t></aside>
    </section>
    <section anchor="coswid-indexed-label-values">
      <name>CoSWID Indexed Label Values</name>
      <t>This section defines multiple kinds of indexed label values that are maintained in several IANA registries. See <xref target="iana"/> for details.
These values are represented as positive integers.  In each registry, the value 0 is marked as Reserved.</t>
      <section anchor="indexed-version-scheme">
        <name>Version Scheme</name>
        <t>The following table contains a set of values for use in the concise-swid-tag group's version-scheme item. The "Index" value indicates the value to use as the version-scheme item's value. Strings in the "Version Scheme Name" column provide human-readable text for the value and match the version schemes defined in the ISO/IEC 19770-2:2015 specification <xref target="SWID"/>. The "Definition" column describes the syntax of allowed values for each entry.</t>

        <table anchor="tbl-indexed-version-scheme-values">
          <name>Version Scheme Values</name>
          <thead>
            <tr>
              <th align="left">Index</th>
              <th align="left">Version Scheme Name</th>
              <th align="left">Definition</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">1</td>
              <td align="left">multipartnumeric</td>
              <td align="left">Numbers separated by dots, where the numbers are interpreted as decimal integers (e.g., 1.2.3, 1.2.3.4.5.6.7, 1.4.5, 1.21)</td>
            </tr>
            <tr>
              <td align="left">2</td>
              <td align="left">multipartnumeric+suffix</td>
              <td align="left">Numbers separated by dots, where the numbers are interpreted as decimal integers with an additional textual suffix (e.g., 1.2.3a)</td>
            </tr>
            <tr>
              <td align="left">3</td>
              <td align="left">alphanumeric</td>
              <td align="left">Strictly a string, no interpretation as number</td>
            </tr>
            <tr>
              <td align="left">4</td>
              <td align="left">decimal</td>
              <td align="left">A single decimal floating-point number</td>
            </tr>
            <tr>
              <td align="left">16384</td>
              <td align="left">semver</td>
              <td align="left">A semantic version as defined by <xref target="SWID"/>. Also see the <xref target="SEMVER"/> specification for more information</td>
            </tr>
          </tbody>
        </table>
        <t>"multipartnumeric" and the numbers part of "multipartnumeric+suffix" are interpreted as a sequence of numbers and are sorted in lexicographical order by these numbers (i.e., not by the digits in the numbers) and then the textual suffix (for "multipartnumeric+suffix").  "alphanumeric" strings are sorted lexicographically as character strings.  "decimal" version numbers are interpreted as single floating-point numbers (e.g., 1.25 is less than 1.3).</t>
        <t>The values above are registered in the IANA "Software ID Version Scheme Values" registry, defined in <xref target="iana-version-scheme"/>. Additional entries will likely be registered over time in this registry.</t>
        <t>A CoSWID producer that is aware of the version scheme that has been used to select the version value <bcp14>SHOULD</bcp14> include the optional version-scheme item to avoid semantic ambiguity.
If the CoSWID producer does not have this information, it <bcp14>SHOULD</bcp14> omit the version-scheme item.
The following heuristics can be used by a CoSWID consumer, based on the version schemes' partially overlapping value spaces:</t>
        <ul spacing="normal">
          <li>"decimal" and "multipartnumeric" partially overlap in their value space when a value matches a decimal number. When a corresponding software-version item's value falls within this overlapping value space, it is expected that the "decimal" version scheme is used.</li>
          <li>"multipartnumeric" and "semver" partially overlap in their value space when a "multipartnumeric" value matches the semantic versioning syntax. When a corresponding software-version item's value falls within this overlapping value space, it is expected that the "semver" version scheme is used.</li>
          <li>"alphanumeric" and other version schemes might overlap in their value space. When a corresponding software-version item's value falls within this overlapping value space, it is expected that the other version scheme is used and "alphanumeric" is not used.</li>
        </ul>
        <t>Note that these heuristics are imperfect and can guess wrong, which is the reason the version-scheme item <bcp14>SHOULD</bcp14> be included by the producer.</t>
      </section>
      <section anchor="indexed-entity-role">
        <name>Entity Role Values</name>
        <t>The following table indicates the index value to use for the entity-entry group's role item (see <xref target="model-entity"/>). These values match the entity roles defined in the ISO/IEC 19770-2:2015 specification <xref target="SWID"/>. The "Index" value indicates the value to use as the role item's value. Items in the "Role Name" column provide human-readable text for the value. The "Definition" column describes the semantic meaning of each entry.</t>

        <table anchor="tbl-indexed-entity-role-values">
          <name>Entity Role Values</name>
          <thead>
            <tr>
              <th align="left">Index</th>
              <th align="left">Role Name</th>
              <th align="left">Definition</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">1</td>
              <td align="left">tagCreator</td>
              <td align="left">The person or organization that created the containing SWID or CoSWID tag.</td>
            </tr>
            <tr>
              <td align="left">2</td>
              <td align="left">softwareCreator</td>
              <td align="left">The person or organization entity that created the software component.</td>
            </tr>
            <tr>
              <td align="left">3</td>
              <td align="left">aggregator</td>
              <td align="left">From <xref target="SWID"/>, "An organization or system that encapsulates software from their own and/or other organizations into a different distribution process (as in the case of virtualization), or as a completed system to accomplish a specific task (as in the case of a value added reseller)."</td>
            </tr>
            <tr>
              <td align="left">4</td>
              <td align="left">distributor</td>
              <td align="left">From <xref target="SWID"/>, "An entity that furthers the marketing, selling and/or distribution of software from the original place of manufacture to the ultimate user without modifying the software, its packaging or its labelling."</td>
            </tr>
            <tr>
              <td align="left">5</td>
              <td align="left">licensor</td>
              <td align="left">From <xref target="SAM"/>, as a "software licensor", a "person or organization who owns or holds the rights to issue a software license for a specific software [component]."</td>
            </tr>
            <tr>
              <td align="left">6</td>
              <td align="left">maintainer</td>
              <td align="left">The person or organization that is responsible for coordinating and making updates to the source code for the software component. This <bcp14>SHOULD</bcp14> be used when the "maintainer" is a different person or organization than the original "softwareCreator".</td>
            </tr>
          </tbody>
        </table>

	<t>The values above are registered in the IANA "Software ID Entity Role Values" registry, defined in <xref target="iana-entity-role"/>. Additional values will likely be registered over time.</t>
      </section>
      <section anchor="indexed-link-ownership">
        <name>Link Ownership Values</name>
        <t>The following table indicates the index value to use for the link-entry group's ownership item (see <xref target="model-link"/>). These values match the link ownership values defined in the ISO/IEC 19770-2:2015 specification <xref target="SWID"/>. The "Index" value indicates the value to use as the link-entry group ownership item's value. Items in the "Ownership Type" column provide human-readable text for the value. The "Definition" column describes the semantic meaning of each entry.</t>
        <table anchor="tbl-indexed-link-ownership-values">
          <name>Link Ownership Values</name>
          <thead>
            <tr>
              <th align="left">Index</th>
              <th align="left">Ownership Type</th>
              <th align="left">Definition</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">1</td>
              <td align="left">abandon</td>
              <td align="left">If the software component referenced by the CoSWID tag is uninstalled, then the referenced software <bcp14>SHOULD NOT</bcp14> be uninstalled.</td>
            </tr>
            <tr>
              <td align="left">2</td>
              <td align="left">private</td>
              <td align="left">If the software component referenced by the CoSWID tag is uninstalled, then the referenced software <bcp14>SHOULD</bcp14> be uninstalled as well.</td>
            </tr>
            <tr>
              <td align="left">3</td>
              <td align="left">shared</td>
              <td align="left">If the software component referenced by the CoSWID tag is uninstalled, then the referenced software <bcp14>SHOULD</bcp14> be uninstalled if no other components are sharing the software.</td>
            </tr>
          </tbody>
        </table>
        <t>The values above are registered in the IANA "Software ID Link Ownership Values" registry, defined in <xref target="iana-link-ownership"/>. Additional values will likely be registered over time.</t>
      </section>
      <section anchor="indexed-link-rel">
        <name>Link Rel Values</name>
        <t>The following table indicates the index value to use for the link-entry group's rel item (see <xref target="model-link"/>). These values match the link rel values defined in the ISO/IEC 19770-2:2015 specification <xref target="SWID"/>. The "Index" value indicates the value to use as the link-entry group ownership item's value. Items in the "Relationship Type" column provide human-readable text for the value. The "Definition" column describes the semantic meaning of each entry.</t>
        <table anchor="tbl-indexed-link-rel-values">
          <name>Link Relationship Values</name>
          <thead>
            <tr>
              <th align="left">Index</th>
              <th align="left">Relationship Type</th>
              <th align="left">Definition</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">1</td>
              <td align="left">ancestor</td>
              <td align="left">The link references a software tag for a previous release of this software. This can be useful to define an upgrade path.</td>
            </tr>
            <tr>
              <td align="left">2</td>
              <td align="left">component</td>
              <td align="left">The link references a software tag for a separate component of this software.</td>
            </tr>
            <tr>
              <td align="left">3</td>
              <td align="left">feature</td>
              <td align="left">The link references a configurable feature of this software that can be enabled or disabled without changing the installed files.</td>
            </tr>
            <tr>
              <td align="left">4</td>
              <td align="left">installationmedia</td>
              <td align="left">The link references the installation package that can be used to install this software.</td>
            </tr>
            <tr>
              <td align="left">5</td>
              <td align="left">packageinstaller</td>
              <td align="left">The link references the installation software needed to install this software.</td>
            </tr>
            <tr>
              <td align="left">6</td>
              <td align="left">parent</td>
              <td align="left">The link references a software tag that is the parent of the referencing tag. This relationship can be used when multiple software components are part of a software bundle, where the "parent" is the software tag for the bundle and each child is a "component". In such a case, each child component can provide a "parent" link relationship to the bundle's software tag, and the bundle can provide a "component" link relationship to each child software component.</td>
            </tr>
            <tr>
              <td align="left">7</td>
              <td align="left">patches</td>
              <td align="left">The link references a software tag that the referencing software patches. Typically only used for patch tags (see <xref target="intro-lifecycle"/>).</td>
            </tr>
            <tr>
              <td align="left">8</td>
              <td align="left">requires</td>
              <td align="left">The link references a prerequisite for installing this software. A patch tag (see <xref target="intro-lifecycle"/>) can use this to represent base software or another patch that needs to be installed first.</td>
            </tr>
            <tr>
              <td align="left">9</td>
              <td align="left">see-also</td>
              <td align="left">The link references other software that may be of interest that relates to this software.</td>
            </tr>
            <tr>
              <td align="left">10</td>
              <td align="left">supersedes</td>
              <td align="left">The link references other software (e.g., an older software version) that this software replaces. A patch tag (see <xref target="intro-lifecycle"/>) can use this to represent another patch that this patch incorporates or replaces.</td>
            </tr>
            <tr>
              <td align="left">11</td>
              <td align="left">supplemental</td>
              <td align="left">The link references a software tag that the referencing tag supplements. Used on supplemental tags (see <xref target="intro-lifecycle"/>).</td>
            </tr>
          </tbody>
        </table>
        <t>The values above are registered in the IANA "Software ID Link Relationship Values" registry, defined in <xref target="iana-link-rel"/>. Additional values will likely be registered over time.</t>
      </section>
      <section anchor="indexed-link-use">
        <name>Link Use Values</name>
        <t>The following table indicates the index value to use for the link-entry group's use item (see <xref target="model-link"/>). These values match the link use values defined in the ISO/IEC 19770-2:2015 specification <xref target="SWID"/>. The "Index" value indicates the value to use as the link-entry group use item's value. Items in the "Use Type" column provide human-readable text for the value. The "Definition" column describes the semantic meaning of each entry.</t>

        <table anchor="tbl-indexed-link-use-values">
          <name>Link Use Values</name>
          <thead>
            <tr>
              <th align="left">Index</th>
              <th align="left">Use Type</th>
              <th align="left">Definition</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">1</td>
              <td align="left">optional</td>
              <td align="left">From <xref target="SWID"/>, "Not absolutely required; the [Link]'d software is installed only when specified."</td>
            </tr>
            <tr>
              <td align="left">2</td>
              <td align="left">required</td>
              <td align="left">From <xref target="SWID"/>, "The [Link]'d software is absolutely required for an operation software installation."</td>
            </tr>
            <tr>
              <td align="left">3</td>
              <td align="left">recommended</td>
              <td align="left">From <xref target="SWID"/>, "Not absolutely required; the [Link]'d software is installed unless specified otherwise."</td>
            </tr>
          </tbody>
        </table>
        <t>The values above are registered in the IANA "Software ID Link Use Values" registry, defined in <xref target="iana-link-use"/>. Additional values will likely be registered over time.</t>
      </section>
    </section>
    <section anchor="uri-schemes">
      <name>"swid" and "swidpath" Expressions</name>
      <t>This specification defines the following scheme names for use in CoSWID and to provide interoperability with scheme names used in <xref target="SWID"/>.
Because both the "swid" and "swidpath" scheme names are to be interpreted within a local (rather than a global) context, neither of these are technically URI scheme names as defined in <xref target="RFC3986"/>.
For this reason, the "swid" and "swidpath" scheme names are registered with IANA as provisional, rather than permanent, scheme names.
However, registering these scheme names as provisional ensures that the scheme names are reserved and that they are properly defined going forward.</t>
      <t>The swid and swidpath expressions conform to all rules for URI syntax.
All uses of these expressions encountered within a CoSWID are to be interpreted as described in this section.</t>
      <section anchor="uri-scheme-swid">
        <name>"swid" Expressions</name>
        <t>Expressions specifying the "swid" scheme are used to reference a software tag by its tag-id. A tag-id referenced in this way can be used to identify the tag resource in the context of where it is referenced from. For example, when a tag is installed on a given device, that tag can reference related tags on the same device using expressions with this scheme.</t>
        <t>For expressions that use the "swid" scheme, the scheme-specific part <bcp14>MUST</bcp14> consist of a referenced software tag's tag-id. This tag-id <bcp14>MUST</bcp14> be URI encoded according to <xref section="2.1" sectionFormat="of" target="RFC3986"/>.</t>
        <t>The following expression is a valid example:</t>
        <artwork><![CDATA[
swid:2df9de35-0aff-4a86-ace6-f7dddd1ade4c
]]></artwork>
      </section>
      <section anchor="uri-scheme-swidpath">
        <name>"swidpath" Expressions</name>
        <t>Expressions specifying the "swidpath" scheme are used to filter tags out of a base collection, so that matching tags are included in the identified tag collection.
The XPath expression <xref target="W3C.REC-xpath20-20101214"/> references the data that must be found in a given software tag out of the base collection for that tag to be considered a matching tag.
Tags to be evaluated (the base collection) include all tags in the context of where the "swidpath" expression is referenced from.
For example, when a tag is installed on a given device, that tag can reference related tags on the same device using an expression with this scheme.</t>
        <t>For URIs that use the "swidpath" scheme, the following requirements apply:</t>
        <ul spacing="normal">
          <li>The scheme-specific part <bcp14>MUST</bcp14> be an XPath expression as defined by <xref target="W3C.REC-xpath20-20101214"/>. The included XPath expression will be URI encoded according to <xref section="2.1" sectionFormat="of" target="RFC3986"/>.</li>
          <li>This XPath is evaluated over SWID tags, or CoSWID tags transformed into SWID tags, found on a system. A given tag <bcp14>MUST</bcp14> be considered a match if the XPath evaluation result value has an effective boolean value of "true" according to <xref target="W3C.REC-xpath20-20101214"/>, Section 2.4.3.</li>
        </ul>
</section>
    </section>
    <section anchor="iana">
      <name>IANA Considerations</name>
      <t>This document has a number of IANA considerations, as described in
the following subsections. In summary, six new registries are established by this document, with initial entries provided for each registry. New values for five other registries are also defined.</t>
      <section anchor="iana-coswid-items">
        <name>CoSWID Items Registry</name>
        <t>This document defines a new registry titled
"CoSWID Items". This registry uses integer values as index values in CBOR maps. Future registrations for this registry are to be made based on <xref target="RFC8126"/> as follows:</t>
        <table anchor="tbl-iana-coswid-items-reg-procedures">
          <name>CoSWID Items Registration Procedures</name>
          <thead>
            <tr>
              <th align="left">Range</th>
              <th align="left">Registration Procedures</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">0-32767</td>
              <td align="left">Standards Action with Expert Review</td>
            </tr>
            <tr>
              <td align="left">32768-4294967295</td>
              <td align="left">Specification Required</td>
            </tr>
          </tbody>
        </table>
        <t>All negative values are reserved for private use.</t>
        <t>Initial registrations for the "CoSWID Items" registry
are provided below. Assignments consist of an integer index value, the item name, and a reference to the defining specification.</t>
        <table anchor="tbl-iana-coswid-items-values">
          <name>CoSWID Items Initial Registrations</name>
          <thead>
            <tr>
              <th align="left">Index</th>
              <th align="left">Item Name</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">0</td>
              <td align="left">tag-id</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">1</td>
              <td align="left">software-name</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">2</td>
              <td align="left">entity</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">3</td>
              <td align="left">evidence</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">4</td>
              <td align="left">link</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">5</td>
              <td align="left">software-meta</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">6</td>
              <td align="left">payload</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">7</td>
              <td align="left">hash</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">8</td>
              <td align="left">corpus</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">9</td>
              <td align="left">patch</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">10</td>
              <td align="left">media</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">11</td>
              <td align="left">supplemental</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">12</td>
              <td align="left">tag-version</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">13</td>
              <td align="left">software-version</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">14</td>
              <td align="left">version-scheme</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">15</td>
              <td align="left">lang</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">16</td>
              <td align="left">directory</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">17</td>
              <td align="left">file</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">18</td>
              <td align="left">process</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">19</td>
              <td align="left">resource</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">20</td>
              <td align="left">size</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">21</td>
              <td align="left">file-version</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">22</td>
              <td align="left">key</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">23</td>
              <td align="left">location</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">24</td>
              <td align="left">fs-name</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">25</td>
              <td align="left">root</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">26</td>
              <td align="left">path-elements</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">27</td>
              <td align="left">process-name</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">28</td>
              <td align="left">pid</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">29</td>
              <td align="left">type</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">30</td>
              <td align="left">Unassigned</td>
              <td align="left">&nbsp;</td>
            </tr>
            <tr>
              <td align="left">31</td>
              <td align="left">entity-name</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">32</td>
              <td align="left">reg-id</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">33</td>
              <td align="left">role</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">34</td>
              <td align="left">thumbprint</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">35</td>
              <td align="left">date</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">36</td>
              <td align="left">device-id</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">37</td>
              <td align="left">artifact</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">38</td>
              <td align="left">href</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">39</td>
              <td align="left">ownership</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">40</td>
              <td align="left">rel</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">41</td>
              <td align="left">media-type</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">42</td>
              <td align="left">use</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">43</td>
              <td align="left">activation-status</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">44</td>
              <td align="left">channel-type</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">45</td>
              <td align="left">colloquial-version</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">46</td>
              <td align="left">description</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">47</td>
              <td align="left">edition</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">48</td>
              <td align="left">entitlement-data-required</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">49</td>
              <td align="left">entitlement-key</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">50</td>
              <td align="left">generator</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">51</td>
              <td align="left">persistent-id</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">52</td>
              <td align="left">product</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">53</td>
              <td align="left">product-family</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">54</td>
              <td align="left">revision</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">55</td>
              <td align="left">summary</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">56</td>
              <td align="left">unspsc-code</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">57</td>
              <td align="left">unspsc-version</td>
              <td align="left">RFC 9393</td>
            </tr>
            <tr>
              <td align="left">58-4294967295</td>
              <td align="left">Unassigned</td>
              <td align="left">&nbsp;</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="iana-value-registries">
        <name>Registries for Software ID Values</name>
        <t>The following IANA registries provide a mechanism for new values to be added over time to common enumerations used by SWID and CoSWID. While neither the CoSWID specification nor the SWID specification is subordinate to the other and will evolve as their respective standards group chooses, there is value in supporting alignment between the two standards. Shared use of common code points, as spelled out in these registries, will facilitate this alignment -- hence the intent for shared use of these registries and the decision to use "swidsoftware-id" (rather than "swid" or "coswid") in registry names.</t>
        <section anchor="iana-registration-procedures">
          <name>Registration Procedures</name>
          <t>The following registries allow for the registration of index values and names. New registrations will be permitted through either a Standards Action with Expert Review policy or a Specification Required policy <xref target="RFC8126"/>.</t>
          <t>The following registries also reserve the integer-based index values in the range of -1 to -256 for private use as defined by <xref section="4.1" sectionFormat="of" target="RFC8126"/>. This allows values -1 to -24 to be expressed as a single uint8_t in CBOR and values -25 to -256 to be expressed using an additional uint8_t in CBOR.</t>
        </section>
        <section anchor="iana-private-use">
          <name>Private Use of Index and Name Values</name>
          <t>The integer-based index values in the private use range (-1 to -256) are intended for testing purposes and closed environments; values in other ranges <bcp14>SHOULD NOT</bcp14> be assigned for testing.</t>
          <t>For names that correspond to private use index values, an Internationalized Domain Name prefix <bcp14>MUST</bcp14> be used to prevent name conflicts using the form</t>
          <artwork><![CDATA[
domainprefix/name
]]></artwork>
          <t>where both "domainprefix" and "name" <bcp14>MUST</bcp14> each be either a Non-Reserved LDH (NR-LDH) label or a U-label as defined by <xref target="RFC5890"/>, and "name" also <bcp14>MUST</bcp14> be a unique name within the namespace defined by the "domainprefix". ("LDH" is an abbreviation for "letters, digits, hyphen".) Using a prefix in this way allows for a name to be used in the private use range. This is consistent with the guidance in <xref target="RFC6648"/>.</t>
        </section>
        <section anchor="iana-review-criteria">
          <name>Expert Review Criteria</name>
          <t>Designated experts <bcp14>MUST</bcp14> ensure that new registration requests meet the following additional criteria:</t>
          <ul spacing="normal">
            <li>The requesting specification <bcp14>MUST</bcp14> provide a clear semantic definition for the new entry. This definition <bcp14>MUST</bcp14> clearly differentiate the requested entry from other previously registered entries.</li>
            <li>The requesting specification <bcp14>MUST</bcp14> describe the intended use of the entry, including any co-constraints that exist between (1)&nbsp;the use of the entry's index value or name and (2)&nbsp;other values defined within the SWID/CoSWID model.</li>
            <li>Index values and names outside the private use space <bcp14>MUST NOT</bcp14> be used without registration. This is considered "squatting" and <bcp14>MUST</bcp14> be avoided. Designated experts <bcp14>MUST</bcp14> ensure that reviewed specifications register all appropriate index values and names.</li>
            <li>Standards Track documents <bcp14>MAY</bcp14> include entries registered in the range reserved for entries under the Specification Required policy. This can occur when a Standards Track document provides further guidance on the use of index values and names that are in common use but were not registered with IANA. This situation <bcp14>SHOULD</bcp14> be avoided.</li>
            <li>All registered names <bcp14>MUST</bcp14> be valid according to the XML Schema NMTOKEN data type (see <xref target="W3C.REC-xmlschema-2-20041028"/>, Section 3.3.4). This ensures that registered names are compatible with the SWID format <xref target="SWID"/> where they are used.</li>
            <li>Registration of vanity names <bcp14>SHOULD</bcp14> be discouraged. The requesting specification <bcp14>MUST</bcp14> provide a description of how a requested name will allow for use by multiple stakeholders.</li>
          </ul>
        </section>
        <section anchor="iana-version-scheme">
          <name>Software ID Version Scheme Values Registry</name>
          <t>This document establishes a new registry titled
"Software ID Version Scheme Values". This registry provides index values for use as version-scheme item values in this document and Version Scheme Names for use in <xref target="SWID"/>.</t>
          <t>This registry uses the registration procedures defined in <xref target="iana-registration-procedures"/>, with the following associated ranges:</t>
          <table anchor="tbl-iana-version-scheme-reg-procedures">
            <name>Software ID Version Scheme Registration Procedures</name>
            <thead>
              <tr>
                <th align="left">Range</th>
                <th align="left">Registration Procedures</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">0-16383</td>
                <td align="left">Standards Action with Expert Review</td>
              </tr>
              <tr>
                <td align="left">16384-65535</td>
                <td align="left">Specification Required</td>
              </tr>
            </tbody>
          </table>
          <t>Assignments <bcp14>MUST</bcp14> consist of an integer index value, the Version Scheme Name, and a reference to the defining specification.</t>
          <t>Initial registrations for the "Software ID Version Scheme Values" registry
are provided below and are derived from the textual Version Scheme Names
defined in <xref target="SWID"/>.</t>
          <table anchor="tbl-iana-version-scheme-values">
            <name>Software ID Version Scheme Initial Registrations</name>
            <thead>
              <tr>
                <th align="left">Index</th>
                <th align="left">Version Scheme Name</th>
                <th align="left">Reference</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">0</td>
                <td align="left">Reserved</td>
                <td align="left">&nbsp;</td>
              </tr>
              <tr>
                <td align="left">1</td>
                <td align="left">multipartnumeric</td>
                <td align="left">RFC 9393, <xref target="indexed-version-scheme"/></td>
              </tr>
              <tr>
                <td align="left">2</td>
                <td align="left">multipartnumeric+suffix</td>
                <td align="left">RFC 9393, <xref target="indexed-version-scheme"/></td>
              </tr>
              <tr>
                <td align="left">3</td>
                <td align="left">alphanumeric</td>
                <td align="left">RFC 9393, <xref target="indexed-version-scheme"/></td>
              </tr>
              <tr>
                <td align="left">4</td>
                <td align="left">decimal</td>
                <td align="left">RFC 9393, <xref target="indexed-version-scheme"/></td>
              </tr>
              <tr>
                <td align="left">5-16383</td>
                <td align="left">Unassigned</td>
                <td align="left">&nbsp;</td>
              </tr>
              <tr>
                <td align="left">16384</td>
                <td align="left">semver</td>
                <td align="left">RFC 9393, <xref target="indexed-version-scheme"/></td>
              </tr>
              <tr>
                <td align="left">16385-65535</td>
                <td align="left">Unassigned</td>
                <td align="left">&nbsp;</td>
              </tr>
            </tbody>
          </table>
          <t>Registrations <bcp14>MUST</bcp14> conform to the expert review criteria defined in <xref target="iana-review-criteria"/>.</t>
          <t>Designated experts <bcp14>MUST</bcp14> also ensure that newly requested entries define a value space for the corresponding software-version item that is unique from other previously registered entries.</t>

<aside><t> Note: The initial registrations violate this requirement but are included for backwards compatibility with <xref target="SWID"/>. See also <xref target="indexed-version-scheme"/>.</t></aside>
        </section>
        <section anchor="iana-entity-role">
          <name>Software ID Entity Role Values Registry</name>
          <t>This document establishes a new registry titled
"Software ID Entity Role Values". This registry provides index values for use as entity-entry role item values in this document and entity role names for use in <xref target="SWID"/>.</t>
          <t>This registry uses the registration procedures defined in <xref target="iana-registration-procedures"/>, with the following associated ranges:</t>
          <table anchor="tbl-iana-entity-role-reg-procedures">
            <name>Software ID Entity Role Registration Procedures</name>
            <thead>
              <tr>
                <th align="left">Range</th>
                <th align="left">Registration Procedures</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">0-127</td>
                <td align="left">Standards Action with Expert Review</td>
              </tr>
              <tr>
                <td align="left">128-255</td>
                <td align="left">Specification Required</td>
              </tr>
            </tbody>
          </table>
          <t>Assignments consist of an integer index value, a role name, and a reference to the defining specification.</t>
          <t>Initial registrations for the "Software ID Entity Role Values" registry
are provided below and are derived from the textual entity role names
defined in <xref target="SWID"/>.</t>
          <table anchor="tbl-iana-entity-role-values">
            <name>Software ID Entity Role Initial Registrations</name>
            <thead>
              <tr>
                <th align="left">Index</th>
                <th align="left">Role Name</th>
                <th align="left">Reference</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">0</td>
                <td align="left">Reserved</td>
                <td align="left">&nbsp;</td>
              </tr>
              <tr>
                <td align="left">1</td>
                <td align="left">tagCreator</td>
                <td align="left">RFC 9393, <xref target="indexed-entity-role"/></td>
              </tr>
              <tr>
                <td align="left">2</td>
                <td align="left">softwareCreator</td>
                <td align="left">RFC 9393, <xref target="indexed-entity-role"/></td>
              </tr>
              <tr>
                <td align="left">3</td>
                <td align="left">aggregator</td>
                <td align="left">RFC 9393, <xref target="indexed-entity-role"/></td>
              </tr>
              <tr>
                <td align="left">4</td>
                <td align="left">distributor</td>
                <td align="left">RFC 9393, <xref target="indexed-entity-role"/></td>
              </tr>
              <tr>
                <td align="left">5</td>
                <td align="left">licensor</td>
                <td align="left">RFC 9393, <xref target="indexed-entity-role"/></td>
              </tr>
              <tr>
                <td align="left">6</td>
                <td align="left">maintainer</td>
                <td align="left">RFC 9393, <xref target="indexed-entity-role"/></td>
              </tr>
              <tr>
                <td align="left">7-255</td>
                <td align="left">Unassigned</td>
                <td align="left">&nbsp;</td>
              </tr>
            </tbody>
          </table>
          <t>Registrations <bcp14>MUST</bcp14> conform to the expert review criteria defined in <xref target="iana-review-criteria"/>.</t>
        </section>
        <section anchor="iana-link-ownership">
          <name>Software ID Link Ownership Values Registry</name>
          <t>This document establishes a new registry titled
"Software ID Link Ownership Values". This registry provides index values for use as link-entry ownership item values in this document and link ownership names for use in <xref target="SWID"/>.</t>
          <t>This registry uses the registration procedures defined in <xref target="iana-registration-procedures"/>, with the following associated ranges:</t>
          <table anchor="tbl-iana-link-ownership-reg-procedures">
            <name>Software ID Link Ownership Registration Procedures</name>
            <thead>
              <tr>
                <th align="left">Range</th>
                <th align="left">Registration Procedures</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">0-127</td>
                <td align="left">Standards Action with Expert Review</td>
              </tr>
              <tr>
                <td align="left">128-255</td>
                <td align="left">Specification Required</td>
              </tr>
            </tbody>
          </table>
          <t>Assignments consist of an integer index value, an ownership type name, and a reference to the defining specification.</t>
          <t>Initial registrations for the "Software ID Link Ownership Values" registry
are provided below and are derived from the textual entity role names
defined in <xref target="SWID"/>.</t>
          <table anchor="tbl-iana-link-ownership-values">
            <name>Software ID Link Ownership Initial Registrations</name>
            <thead>
              <tr>
                <th align="left">Index</th>
                <th align="left">Ownership Type Name</th>
                <th align="left">Reference</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">0</td>
                <td align="left">Reserved</td>
                <td align="left">&nbsp;</td>
              </tr>
              <tr>
                <td align="left">1</td>
                <td align="left">abandon</td>
                <td align="left">RFC 9393, <xref target="indexed-link-ownership"/></td>
              </tr>
              <tr>
                <td align="left">2</td>
                <td align="left">private</td>
                <td align="left">RFC 9393, <xref target="indexed-link-ownership"/></td>
              </tr>
              <tr>
                <td align="left">3</td>
                <td align="left">shared</td>
                <td align="left">RFC 9393, <xref target="indexed-link-ownership"/></td>
              </tr>
              <tr>
                <td align="left">4-255</td>
                <td align="left">Unassigned</td>
                <td align="left">&nbsp;</td>
              </tr>
            </tbody>
          </table>
          <t>Registrations <bcp14>MUST</bcp14> conform to the expert review criteria defined in <xref target="iana-review-criteria"/>.</t>
        </section>
        <section anchor="iana-link-rel">
          <name>Software ID Link Relationship Values Registry</name>
          <t>This document establishes a new registry titled
"Software ID Link Relationship Values". This registry provides index values for use as link-entry rel item values in this document and link ownership names for use in <xref target="SWID"/>.</t>
          <t>This registry uses the registration procedures defined in <xref target="iana-registration-procedures"/>, with the following associated ranges:</t>
          <table anchor="tbl-iana-link-rel-reg-procedures">
            <name>Software ID Link Relationship Registration Procedures</name>
            <thead>
              <tr>
                <th align="left">Range</th>
                <th align="left">Registration Procedures</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">0-32767</td>
                <td align="left">Standards Action with Expert Review</td>
              </tr>
              <tr>
                <td align="left">32768-65535</td>
                <td align="left">Specification Required</td>
              </tr>
            </tbody>
          </table>
          <t>Assignments consist of an integer index value, the relationship type name, and a reference to the defining specification.</t>
          <t>Initial registrations for the "Software ID Link Relationship Values" registry are provided below and are derived from the link relationship values
defined in <xref target="SWID"/>.</t>
          <table anchor="tbl-iana-link-rel-values">
            <name>Software ID Link Relationship Initial Registrations</name>
            <thead>
              <tr>
                <th align="left">Index</th>
                <th align="left">Relationship Type Name</th>
                <th align="left">Reference</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">0</td>
                <td align="left">Reserved</td>
                <td align="left">&nbsp;</td>
              </tr>
              <tr>
                <td align="left">1</td>
                <td align="left">ancestor</td>
                <td align="left">RFC 9393, <xref target="indexed-link-rel"/></td>
              </tr>
              <tr>
                <td align="left">2</td>
                <td align="left">component</td>
                <td align="left">RFC 9393, <xref target="indexed-link-rel"/></td>
              </tr>
              <tr>
                <td align="left">3</td>
                <td align="left">feature</td>
                <td align="left">RFC 9393, <xref target="indexed-link-rel"/></td>
              </tr>
              <tr>
                <td align="left">4</td>
                <td align="left">installationmedia</td>
                <td align="left">RFC 9393, <xref target="indexed-link-rel"/></td>
              </tr>
              <tr>
                <td align="left">5</td>
                <td align="left">packageinstaller</td>
                <td align="left">RFC 9393, <xref target="indexed-link-rel"/></td>
              </tr>
              <tr>
                <td align="left">6</td>
                <td align="left">parent</td>
                <td align="left">RFC 9393, <xref target="indexed-link-rel"/></td>
              </tr>
              <tr>
                <td align="left">7</td>
                <td align="left">patches</td>
                <td align="left">RFC 9393, <xref target="indexed-link-rel"/></td>
              </tr>
              <tr>
                <td align="left">8</td>
                <td align="left">requires</td>
                <td align="left">RFC 9393, <xref target="indexed-link-rel"/></td>
              </tr>
              <tr>
                <td align="left">9</td>
                <td align="left">see-also</td>
                <td align="left">RFC 9393, <xref target="indexed-link-rel"/></td>
              </tr>
              <tr>
                <td align="left">10</td>
                <td align="left">supersedes</td>
                <td align="left">RFC 9393, <xref target="indexed-link-rel"/></td>
              </tr>
              <tr>
                <td align="left">11</td>
                <td align="left">supplemental</td>
                <td align="left">RFC 9393, <xref target="indexed-link-rel"/></td>
              </tr>
              <tr>
                <td align="left">12-65535</td>
                <td align="left">Unassigned</td>
                <td align="left">&nbsp;</td>
              </tr>
            </tbody>
          </table>
          <t>Registrations <bcp14>MUST</bcp14> conform to the expert review criteria defined in <xref target="iana-review-criteria"/>.</t>
          <t>Designated experts <bcp14>MUST</bcp14> also ensure that a newly requested entry documents the URI schemes allowed to be used in an href associated with the link relationship and the expected resolution behavior of these URI schemes. This will help to ensure that applications processing software tags are able to interoperate when resolving resources referenced by a link of a given type.</t>
        </section>
        <section anchor="iana-link-use">
          <name>Software ID Link Use Values Registry</name>
          <t>This document establishes a new registry titled
"Software ID Link Use Values". This registry provides index values for use as link-entry use item values in this document and link use names for use in <xref target="SWID"/>.</t>
          <t>This registry uses the registration procedures defined in <xref target="iana-registration-procedures"/>, with the following associated ranges:</t>
          <table anchor="tbl-iana-link-use-reg-procedures">
            <name>Software ID Link Use Registration Procedures</name>
            <thead>
              <tr>
                <th align="left">Range</th>
                <th align="left">Registration Procedures</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">0-127</td>
                <td align="left">Standards Action with Expert Review</td>
              </tr>
              <tr>
                <td align="left">128-255</td>
                <td align="left">Specification Required</td>
              </tr>
            </tbody>
          </table>
          <t>Assignments consist of an integer index value, the link use type name, and a reference to the defining specification.</t>
          <t>Initial registrations for the "Software ID Link Use Values" registry
are provided below and are derived from the link relationship values
defined in <xref target="SWID"/>.</t>
          <table anchor="tbl-iana-link-use-values">
            <name>Software ID Link Use Initial Registrations</name>
            <thead>
              <tr>
                <th align="left">Index</th>
                <th align="left">Link Use Type Name</th>
                <th align="left">Reference</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">0</td>
                <td align="left">Reserved</td>
                <td align="left">&nbsp;</td>
              </tr>
              <tr>
                <td align="left">1</td>
                <td align="left">optional</td>
                <td align="left">RFC 9393, <xref target="indexed-link-use"/></td>
              </tr>
              <tr>
                <td align="left">2</td>
                <td align="left">required</td>
                <td align="left">RFC 9393, <xref target="indexed-link-use"/></td>
              </tr>
              <tr>
                <td align="left">3</td>
                <td align="left">recommended</td>
                <td align="left">RFC 9393, <xref target="indexed-link-use"/></td>
              </tr>
              <tr>
                <td align="left">4-255</td>
                <td align="left">Unassigned</td>
                <td align="left">&nbsp;</td>
              </tr>
            </tbody>
          </table>
          <t>Registrations <bcp14>MUST</bcp14> conform to the expert review criteria defined in <xref target="iana-review-criteria"/>.</t>
        </section>
      </section>
      <section anchor="swidcbor-media-type-registration">
        <name>swid+cbor Media Type Registration</name>
        <t>IANA has added the following to the "Media Types" registry <xref target="IANA.media-types"/>.</t>
        <dl newline="false" spacing="normal">
        <dt>Type name:</dt><dd>application</dd>
        <dt>Subtype name:</dt><dd>swid+cbor</dd>
        <dt>Required parameters:</dt><dd>none</dd>
        <dt>Optional parameters:</dt><dd>none</dd>
        <dt>Encoding considerations:</dt><dd>Binary (encoded as CBOR <xref target="RFC8949"/>).
See RFC 9393 for details.</dd>
        <dt>Security considerations:</dt><dd>See <xref target="sec-sec"/> of RFC 9393.</dd>
        <dt>Interoperability considerations:</dt><dd>Applications <bcp14>MAY</bcp14> ignore any key
value pairs that they do not understand. This allows
backwards-compatible extensions to this specification.</dd>
        <dt>Published specification:</dt><dd>RFC 9393</dd>
        <dt>Applications that use this media type:</dt><dd>The type is used by software
asset management systems and vulnerability assessment systems and is used in
applications that use remote integrity verification.</dd>
        <dt>Fragment Identifier Considerations:</dt><dd> The syntax and semantics of
fragment identifiers specified for "application/swid+cbor" are as specified
for "application/cbor".  (At publication of RFC 9393, there is no
fragment identification syntax defined for "application/cbor".)</dd>
	</dl>
        <dl newline="true" spacing="normal">
        <dt>Additional information:</dt>
         <dd>
          <dl newline="false" spacing="compact">
        <dt>Magic number(s):</dt><dd>If tagged, the first five bytes in hex: da 53 57 49 44 (see <xref target="tagged"/> of RFC 9393).</dd>
        <dt>File extension(s):</dt><dd>coswid</dd>
        <dt>Macintosh file type code(s):</dt><dd>none</dd>
        <dt>Macintosh Universal Type Identifier code:</dt><dd>org.ietf.coswid
conforms to public.data.</dd>
             </dl>
           </dd>
        </dl>
        <dl newline="false" spacing="normal">
        <dt>Person &amp; email address to contact for further information:</dt><dd><br/>IESG &lt;iesg@ietf.org&gt;</dd>
        <dt>Intended usage:</dt><dd>COMMON</dd>
        <dt>Restrictions on usage:</dt><dd>none</dd>
        <dt>Author:</dt><dd>Henk Birkholz &lt;henk.birkholz@sit.fraunhofer.de&gt;</dd>
        <dt>Change controller:</dt><dd>IESG</dd>
	</dl>
      </section>
      <section anchor="coap-content-format-registration">
        <name>CoAP Content-Format Registration</name>
        <t>IANA has assigned a CoAP Content-Format ID for the CoSWID
media type in the "CoAP Content-Formats" subregistry, from the "IETF
Review or IESG Approval" space (256..999), within the "CoRE
Parameters" registry <xref target="RFC7252"/> <xref target="IANA.core-parameters"/>:</t>
        <table anchor="tbl-coap-content-formats">
          <name>CoAP Content-Format IDs</name>
          <thead>
            <tr>
              <th align="left">Content Type</th>
              <th align="left">Content Coding</th>
              <th align="left">ID</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">application/swid+cbor</td>
              <td align="left">-</td>
              <td align="left">258</td>
              <td align="left">RFC 9393</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="cbor-tag-registration">
        <name>CBOR Tag Registration</name>
        <t>IANA has allocated a tag in the "CBOR Tags" registry <xref target="IANA.cbor-tags"/>:</t>
        <table anchor="tbl-cbor-tag">
          <name>CoSWID CBOR Tag</name>
          <thead>
            <tr>
              <th align="left">Tag</th>
              <th align="left">Data Item</th>
              <th align="left">Semantics</th>
	      <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">1398229316</td>
              <td align="left">map</td>
              <td align="left">Concise Software Identifier (CoSWID)</td>
	      <td align="left">RFC 9393</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="uri-scheme-registrations">
        <name>URI Scheme Registrations</name>
        <t>The ISO 19770-2:2015 SWID specification <xref target="SWID"/> describes the use of the "swid" and "swidpath" URI schemes, which are currently in use in implementations. This document continues this use for CoSWID. The following subsections provide registrations for these schemes to ensure that a registration for these schemes exists that is suitable for use in the SWID and CoSWID specifications.</t>
        <t>URI schemes are registered within the "Uniform Resource Identifier (URI)
Schemes" registry maintained at <xref target="IANA.uri-schemes"/>.</t>

        <section anchor="swid-reg">
          <name>URI Scheme &quot;swid&quot;</name>
          <t>IANA has registered the URI scheme "swid".
This registration complies with <xref target="RFC7595"/>.</t>
          <dl newline="false">
            <dt>Scheme name:</dt>
            <dd>swid</dd>
            <dt>Status:</dt>
            <dd>Provisional</dd>
            <dt>Applications/protocols that use this scheme name:</dt>
            <dd>Applications that require Software IDs (SWIDs) or Concise
Software IDs (CoSWIDs); see <xref target="uri-scheme-swid"/> of RFC 9393.</dd>
            <dt>Contact:</dt>
            <dd>IETF Chair &lt;chair@ietf.org&gt;</dd>
            <dt>Change controller:</dt>
            <dd>IESG &lt;iesg@ietf.org&gt;</dd>
            <dt>Reference:</dt>
            <dd><xref target="uri-scheme-swid"/> of RFC 9393</dd>
          </dl>
        <aside><t>Note: This scheme has been documented by an IETF working
        group and is mentioned in an IETF Standard specification. However, as it
        describes a locally scoped, limited-purpose form of identification, it
        does not fully meet the requirements for permanent registration.</t>
        <t>As long as this specification (or any successors that
        describe this scheme) is a current IETF specification, this scheme should
        be considered to be "in use" and not considered for removal from the
        registry.</t></aside>
        </section>
        <section anchor="swidpath-reg">
          <name>URI Scheme &quot;swidpath&quot;</name>
          <t>IANA has registered the URI scheme "swidpath". This registration
complies with <xref target="RFC7595"/>.</t>
          <dl newline="false">
            <dt>Scheme name:</dt>
            <dd>swidpath</dd>
            <dt>Status:</dt>
            <dd>Provisional</dd>
            <dt>Applications/protocols that use this scheme name:</dt>
            <dd>Applications that require Software IDs (SWIDs) or Concise
Software IDs (CoSWIDs); see <xref target="uri-scheme-swidpath"/> of RFC 9393.</dd>
            <dt>Contact:</dt>
            <dd>IETF Chair &lt;chair@ietf.org&gt;</dd>
            <dt>Change controller:</dt>
            <dd>IESG &lt;iesg@ietf.org&gt;</dd>
            <dt>Reference:</dt>
            <dd><xref target="uri-scheme-swidpath"/> of RFC 9393</dd>
          </dl>
        <aside><t>Note: This scheme has been documented by an IETF working
        group and is mentioned in an IETF Standard specification. However, as it
        describes a locally scoped, limited-purpose form of identification, it
        does not fully meet the requirements for permanent registration.</t>
        <t>As long as this specification (or any successors that
        describe this scheme) is a current IETF specification, this scheme should
        be considered to be "in use" and not considered for removal from the
        registry.</t></aside>
        </section>
      </section>
      <section anchor="sec-swima">
        <name>CoSWID Model for Use in SWIMA Registration</name>
        <t>"<xref target="RFC8412" format="title"/>" <xref target="RFC8412" format="default"/> defines a standardized method for collecting an endpoint device's software inventory. A CoSWID can provide evidence of software installation that can then be used and exchanged with SWIMA. This registration adds a new entry to the IANA "Software Data Model Types" registry defined by <xref target="RFC8412"/> and <xref target="IANA.pa-tnc-parameters"/> to support CoSWID use in SWIMA as follows:</t>

	<dl newline="false" spacing="normal">
        <dt>Pen:</dt><dd>0</dd>
        <dt>Integer:</dt><dd>2</dd>
        <dt>Name:</dt><dd>Concise Software Identifier (CoSWID)</dd>
        <dt>Reference:</dt><dd>RFC 9393</dd>
        <dt>Deriving Software Identifiers:</dt>
        <dd><t>A Software Identifier generated from a CoSWID tag is expressed as a concatenation of the form used in <xref target="RFC5234"/> as follows --
      </t>
<sourcecode name="" type="abnf"><![CDATA[
TAG_CREATOR_REGID "_" "_" UNIQUE_ID
]]></sourcecode>
        <t>where TAG_CREATOR_REGID is the reg-id item value of the tag's entity item having the role value of 1 (corresponding to "tag-creator"), and the UNIQUE_ID is the same tag's tag-id item. If the tag-id item's value is expressed as a 16-byte binary string, the UNIQUE_ID <bcp14>MUST</bcp14> be represented using the UUID string representation defined in <xref target="RFC4122"/>, including the "urn:uuid:" prefix.</t>
        <t>The TAG_CREATOR_REGID and the UNIQUE_ID are connected with a double underscore (_), without any other connecting character or whitespace.</t>
      </dd>
	</dl>
      </section>
    </section>
    <section anchor="coswid-cose">
      <name>Signed CoSWID Tags</name>
      <t>SWID tags, as defined in the ISO-19770-2:2015 XML Schema, can include cryptographic signatures to protect the integrity of the SWID tag.
In general, tags are signed by the tag creator (typically, although not exclusively, the vendor of the software component that the SWID tag identifies).
Cryptographic signatures can make any modification of the tag detectable, which is especially important if the integrity of the tag is important, such as when the tag is providing RIMs for files.
The ISO-19770-2:2015 XML Schema uses XML Digital Signatures (XMLDSIG) to support cryptographic signatures.</t>
      <t>Signing CoSWID tags follows the procedures defined in CBOR Object Signing and Encryption (COSE) <xref target="RFC9052"/>. A CoSWID tag <bcp14>MUST</bcp14> be wrapped in a COSE Signature structure, either COSE_Sign1 or COSE_Sign.
In the first case, a Single Signer Data Object (COSE_Sign1) contains a single signature and <bcp14>MUST</bcp14> be signed by the tag creator. The following CDDL specification defines a restrictive subset of COSE header parameters that <bcp14>MUST</bcp14> be used in the protected header in this case.</t>
      <sourcecode type="cddl" name="sign1.cddl" markers="true">
COSE_Sign1-coswid&lt;payload&gt; = [
    protected: bstr .cbor protected-signed-coswid-header,
    unprotected: unprotected-signed-coswid-header,
    payload: bstr .cbor payload,
    signature: bstr,
]

cose-label = int / tstr
cose-values = any

protected-signed-coswid-header = {
    1 =&gt; int,                      ; algorithm identifier
    3 =&gt; "application/swid+cbor",
    * cose-label =&gt; cose-values,
}

unprotected-signed-coswid-header = {
    * cose-label =&gt; cose-values,
}
</sourcecode>
      <t>The COSE_Sign structure allows for more than one signature, one of which <bcp14>MUST</bcp14> be issued by the tag creator, to be applied to a CoSWID tag and <bcp14>MAY</bcp14> be used. The corresponding usage scenarios are domain specific and require well-specified application guidance.</t>
      <sourcecode type="cddl" name="sign.cddl" markers="true">
COSE_Sign-coswid&lt;payload&gt; = [
    protected: bstr .cbor protected-signed-coswid-header1,
    unprotected: unprotected-signed-coswid-header,
    payload: bstr .cbor payload,
    signature: [ * COSE_Signature ],
]

protected-signed-coswid-header1 = {
    3 =&gt; "application/swid+cbor",
    * cose-label =&gt; cose-values,
}

protected-signature-coswid-header = {
    1 =&gt; int,                      ; algorithm identifier
    * cose-label =&gt; cose-values,
}

unprotected-signed-coswid-header = {
    * cose-label =&gt; cose-values,
}

COSE_Signature =  [
    protected: bstr .cbor protected-signature-coswid-header,
    unprotected: unprotected-signed-coswid-header,
    signature: bstr
]
</sourcecode>
      <t>Additionally, the COSE header countersignature <bcp14>MAY</bcp14> be used as an attribute in the unprotected header map of the COSE envelope of a CoSWID <xref target="RFC9338"/>.
The application of countersigning enables second parties to provide a signature on a signature allowing for proof that a signature existed at a given time (i.e., a timestamp).</t>
      <t>A CoSWID <bcp14>MUST</bcp14> be signed, using the above mechanism, to protect the integrity of the CoSWID tag. See <xref target="sec-sec"/> ("<xref target="sec-sec" format="title"/>") for more information on why a signed CoSWID is valuable in most cases.</t>
    </section>
    <section anchor="tagged">
      <name>CBOR-Tagged CoSWID Tags</name>
      <t>This specification allows for tagged and untagged CBOR data items that are CoSWID tags.
Consequently, the CBOR tag defined by this document (<xref target="tbl-cbor-tag"/>) for CoSWID tags <bcp14>SHOULD</bcp14> be used in conjunction with CBOR data items that are CoSWID tags.
Other CBOR tags <bcp14>MUST NOT</bcp14> be used with a CBOR data item that is a CoSWID tag.
If tagged, both signed and unsigned CoSWID tags <bcp14>MUST</bcp14> use the CoSWID CBOR tag.
If a signed CoSWID is tagged, a CoSWID CBOR tag <bcp14>MUST</bcp14> be appended before the COSE envelope, whether it is a COSE_Untagged_Message or a COSE_Tagged_Message.
If an unsigned CoSWID is tagged, a CoSWID CBOR tag <bcp14>MUST</bcp14> be appended before the CBOR data item that is the CoSWID tag.</t>
      <sourcecode type="cddl" name="tags.cddl" markers="true">
coswid = unsigned-coswid / signed-coswid
unsigned-coswid = concise-swid-tag / tagged-coswid&lt;concise-swid-tag&gt;
signed-coswid1 = signed-coswid-for&lt;unsigned-coswid&gt;
signed-coswid = signed-coswid1 / tagged-coswid&lt;signed-coswid1&gt;

tagged-coswid&lt;T&gt; = #6.1398229316(T)

signed-coswid-for&lt;payload&gt; = #6.18(COSE_Sign1-coswid&lt;payload&gt;)
    / #6.98(COSE_Sign-coswid&lt;payload&gt;)
</sourcecode>
      <t>This specification allows for a CBOR-tagged CoSWID tag to reside in a COSE envelope that is also tagged with a CoSWID CBOR tag. In cases where a tag creator is not a signer (e.g., hand-offs between entities in a trusted portion of a supply chain), retaining CBOR tags attached to unsigned CoSWID tags can be of great use. Nevertheless, redundant use of tags <bcp14>SHOULD</bcp14> be avoided when possible.</t>
    </section>
    <section anchor="sec-sec">
      <name>Security Considerations</name>
      <t>The following security considerations for the use of CoSWID tags focus on:</t>
      <ul spacing="normal">
        <li>ensuring the integrity and authenticity of a CoSWID tag</li>
        <li>the application of CoSWID tags to address security challenges related to unmanaged or unpatched software</li>
        <li>reducing the potential for unintended disclosure of a device's software load</li>
      </ul>
      <t>A tag is considered "authoritative" if the CoSWID tag was created by the
software provider. An authoritative CoSWID tag contains information about a software component provided by the supplier of the software component, who is expected to be an expert in their own software. Thus, authoritative CoSWID tags can represent authoritative information about the software component. The degree to which this information can be trusted depends on the tag's chain of custody and the ability to verify a signature provided by the supplier if present in the CoSWID tag. The provisioning and validation of CoSWID tags are handled by local policy and are outside the scope of this document.</t>
      <t>A signed CoSWID tag (see <xref target="coswid-cose"/>) whose signature has been validated can be relied upon to be unchanged since the time at which it was signed. By contrast, the data contained in unsigned tags can be altered by any user or process with write access to the tag. To support signature validation, there is a need to associate the right key with the software provider or party originating the signature in a secure way. This operation is application specific and needs to be addressed by the application or a user of the application; a specific approach for this topic is out of scope for this document.</t>
      <t>When an authoritative tag is signed, the originator of the signature can be verified. A trustworthy association between the signature and the originator of the signature can be established via trust anchors. A certification path between a trust anchor and a certificate, including a public key enabling the validation of a tag signature, can realize the assessment of trustworthiness of an authoritative tag. Verifying that the software provider is the signer is a different matter. This requires verifying that the party that signed the tag is the same party given in the software-creator role of the tag's entity item. No mechanism is defined in this document to make this association; therefore, this association will need to be handled by local policy.
As always, the validity of a signature does not imply the veracity of the
signed statements: anyone can sign assertions such that the software
is from a specific software-creator or that a specific persistent-id
applies; policy needs to be applied to evaluate these statements and to determine their suitability for a specific use.</t>
      <t>Loss of control of signing credentials used to sign CoSWID tags would cast doubt on the authenticity and integrity of any CoSWID tags signed using the compromised keys. In such cases, the legitimate tag signer (namely, the software provider for an authoritative CoSWID tag) can employ uncompromised signing credentials to create a new signature on the original tag. The tag's version number would not be incremented, since the tag itself was not modified. Consumers of CoSWID tags would need to validate the tag using the new credentials and would also need to make use of revocation information available for the compromised credentials to avoid validating tags signed with them. The process for doing this is beyond the scope of this specification.</t>
      <t>The CoSWID format allows the use of hash values without an
accompanying hash algorithm identifier.
This exposes the tags to some risk of cross-algorithm attacks.
We believe that this can become a practical problem only if some
implementations allow the use of insecure hash algorithms.
Since it may not become known immediately when an algorithm becomes
insecure, this leads to a strong recommendation to only include
support for hash algorithms that are generally considered secure, and
not just marginally so.</t>
      <t>CoSWID tags are intended to contain public information about software components and, as
such, the contents of a CoSWID tag (as opposed to the set of tags that apply to the endpoint; see below) do not need to be protected against unintended disclosure on an endpoint.
Conversely, generators of CoSWID tags need to ensure that only public
information is disclosed.
The entitlement-key item is an example of information for which particular care
is required; tag authors are advised not to record unprotected,
private software license keys in this field.</t>
      <t>CoSWID tags are intended to be easily discoverable by
authorized applications and users on an endpoint in order to make it easy to determine the tagged software load. Access to the collection of an endpoint's CoSWID tags needs to be limited to authorized applications and users using an appropriate access control mechanism.</t>
      <t>Since the tag-id of a CoSWID tag can be used as a global index value, failure to ensure the tag-id's uniqueness can cause collisions or ambiguity in CoSWID tags that are retrieved or processed using this identifier. CoSWID is designed to not require a registry of identifiers. As a result, CoSWID requires the tag creator to employ a method of generating a unique tag identifier. Specific methods of generating a unique identifier are beyond the scope of this specification. A collision in tag-ids may result in false positives/negatives in software integrity checks or misidentification of installed software, undermining CoSWID use cases such as vulnerability identification, software inventory, etc. If such a collision is detected, then the tag consumer may want to contact the maintainer of the CoSWID to have them issue a correction addressing the collision; however, this also discloses to the maintainer that the consumer has the other tag with the given tag-id in their database.
More generally speaking, a tag consumer needs to be robust against such collisions lest the collision become a viable attack vector.</t>
      <t>CoSWID tags are designed to be easily added and removed from an
endpoint along with the installation or removal of software components.
On endpoints where the addition or removal of software components is
tightly controlled, the addition or removal of CoSWID tags can be
similarly controlled.  On more open systems, where many users can
manage the software inventory, CoSWID tags can be easier to add or
remove.  On such systems, it can be possible to add or remove CoSWID
tags in a way that does not reflect the actual presence or absence of
corresponding software components.  Similarly, not all software
products automatically install CoSWID tags, so products can be present
on an endpoint without providing a corresponding CoSWID tag.  As such,
any collection of CoSWID tags cannot automatically be assumed to
represent either a complete or fully accurate representation of the
software inventory of the endpoint.  However, especially on endpoint devices
that more strictly control the ability to add or remove applications,
CoSWID tags are an easy way to provide a preliminary understanding of
that endpoint's software inventory.</t>
      <t>As CoSWID tags do not expire, inhibiting new CoSWID tags from reaching an intended consumer would render that consumer stuck with outdated information, potentially leaving associated vulnerabilities or weaknesses unmitigated. Therefore, a CoSWID tag consumer should actively check for updated tag-versions via more than one means.</t>
      <t>This specification makes use of relative paths (e.g., filesystem
paths) in several places.
A signed CoSWID tag cannot make use of these to derive information
that is considered to be covered under the signature.
Typically, relative filesystem paths will be used to identify
targets for an installation, not sources of tag information.</t>
      <t>Any report of an endpoint's CoSWID tag collection provides
information about the software inventory of that endpoint.  If such a
report is exposed to an attacker, this can tell them which software
products and versions thereof are present on the endpoint.  By
examining this list, the attacker might learn of the presence of
applications that are vulnerable to certain types of attacks.  As
noted earlier, CoSWID tags are designed to be easily discoverable by authorized applications and users on an
endpoint, but this does not present a significant risk, since an
attacker would already need to have access to the endpoint to view
that information.  However, when the endpoint transmits its software
inventory to another party or that inventory is stored on a server
for later analysis, this can potentially expose this information to
attackers who do not yet have access to the endpoint.  For this reason, it is
important to protect the confidentiality of CoSWID tag information that
has been collected from an endpoint in transit and at rest, not because those tags
individually contain sensitive information but because the
collection of CoSWID tags and their association with an endpoint
reveals information about that endpoint's attack surface.</t>
      <t>Finally, both the ISO-19770-2:2015 XML Schema SWID definition and the
CoSWID CDDL specification allow for the construction of "infinite"
tags with link item loops or tags that contain malicious content with the intent
of creating non-deterministic states during validation or processing of those tags. While software
providers are unlikely to do this, CoSWID tags can be created by any party and the CoSWID tags
collected from an endpoint could contain a mixture of tags created by vendors and tags not created by vendors. For this
reason, a CoSWID tag might contain potentially malicious
content. Input sanitization, loop detection, and signature
verification are ways that implementations can address this concern.</t>
      <t>More generally speaking, the Security Considerations sections of <xref target="RFC8949"/>,
<xref target="RFC9052"/>, and <xref target="RFC9338"/> apply.</t>
    </section>
    <section anchor="privacy-consideration">
      <name>Privacy Considerations</name>
      <t>As noted in <xref target="sec-sec"/>, collected information about an endpoint's software load, such as what might be represented by an endpoint's CoSWID tag collection, could be used by attackers to identify vulnerable software. Collections of endpoint software information also can have privacy implications for users. The set of applications a user installs can provide clues regarding personal matters such as political affiliation, banking and investments, gender, sexual orientation, medical concerns, etc. While the collection of CoSWID tags on an endpoint wouldn't increase privacy risks (since a party able to view those tags could also view the applications themselves), if those CoSWID tags are gathered and stored in a repository somewhere, visibility into the repository now also provides visibility into a user's application collection. For this reason, not only do repositories of collected CoSWID tags need to be protected against collection by malicious parties but even authorized parties will need to be vetted and made aware of privacy responsibilities associated with having access to this information. Likewise, users should be made aware that their software inventories are being collected from endpoints. Furthermore, when collected and stored by authorized parties or systems, the inventory data needs to be protected as both security and privacy-sensitive information.</t>
    </section>
  </middle>
  <back>

<displayreference target="RFC8126" to="BCP26"/>
<displayreference target="RFC6648" to="BCP178"/>

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>

<referencegroup anchor="BCP26" target="https://www.rfc-editor.org/info/bcp26">
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"/>
</referencegroup>
<referencegroup anchor="BCP178" target="https://www.rfc-editor.org/info/bcp178">
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6648.xml"/>
</referencegroup>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3629.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5198.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5646.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5890.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8949.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7252.xml"/>

<!-- draft-ietf-cose-rfc8152bis-struct (RFC 9052; published) -->
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9052.xml"/>

<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8412.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8288.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8610.xml"/>

<!-- draft-ietf-cose-countersign (RFC 9338; published) -->
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9338.xml"/>

        <reference anchor="SAM" target="https://www.iso.org/standard/68291.html">
          <front>
            <title>Information technology - IT asset management - Part 5: Overview and vocabulary</title>
            <author>
              <organization/>
            </author>
            <date year="2015" month="August"/>
          </front>
          <refcontent>ISO/IEC 19770-5:2015</refcontent>
        </reference>

        <reference anchor="SWID" target="https://www.iso.org/standard/65666.html">
          <front>
            <title>Information technology - IT asset management - Part 2: Software identification tag</title>
            <author>
              <organization/>
            </author>
            <date year="2015" month="October"/>
          </front>
         <refcontent>ISO/IEC 19770-2:2015</refcontent>
        </reference>

        <reference anchor="UNSPSC" target="https://www.unspsc.org/">
          <front>
            <title>United Nations Standard Products and Services Code</title>
            <author>
              <organization/>
            </author>
            <date year="2022"/>
          </front>
        </reference>

        <reference anchor="W3C.REC-xpath20-20101214" target="https://www.w3.org/TR/2010/REC-xpath20-20101214/">
          <front>
            <title>XML Path Language (XPath) 2.0 (Second Edition)</title>
            <author fullname="Anders Berglund" role="editor"/>
            <author fullname="Scott Boag" role="editor"/>
            <author fullname="Don Chamberlin" role="editor"/>
            <author fullname="Mary F. Fernández" role="editor"/>
            <author fullname="Michael Kay" role="editor"/>
            <author fullname="Jonathan Robie" role="editor"/>
            <author fullname="Jérôme Siméon" role="editor"/>
            <date day="14" month="December" year="2010"/>
          </front>
         <refcontent>W3C Recommendation REC-xpath20-20101214</refcontent>
        </reference>

        <reference anchor="W3C.REC-mediaqueries-3-20220405"  target="https://www.w3.org/TR/mediaqueries-3/">
          <front>
            <title>Media Queries Level 3</title>
            <author fullname="Florian Rivoal" role="editor"/>
            <date day="05" month="April" year="2022"/>
          </front>
         <refcontent>W3C Recommendation REC-mediaqueries-3-20220405</refcontent>
        </reference>
        <reference anchor="W3C.REC-xmlschema-2-20041028" target="https://www.w3.org/TR/2004/REC-xmlschema-2-20041028/">
          <front>
            <title>XML Schema Part 2: Datatypes Second Edition</title>
            <author fullname="Paul V. Biron" role="editor"/>
            <author fullname="Ashok Malhotra" role="editor"/>
            <date day="28" month="October" year="2004"/>
          </front>
         <refcontent>W3C Recommendation REC-xmlschema-2-20041028</refcontent>
        </reference>

        <reference anchor="IANA.named-information" target="https://www.iana.org/assignments/named-information">
          <front>
            <title>Named Information</title>
            <author>
              <organization abbrev="IANA">Internet Assigned Numbers Authority</organization>
            </author>
            <date/>
          </front>
        </reference>

<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>

        <reference anchor="IANA.media-types" target="https://www.iana.org/assignments/media-types">
          <front>
            <title>Media Types</title>
            <author>
              <organization abbrev="IANA">Internet Assigned Numbers Authority</organization>
            </author>
            <date/>
          </front>
        </reference>

        <reference anchor="IANA.core-parameters" target="https://www.iana.org/assignments/core-parameters">
          <front>
            <title>Constrained RESTful Environments (CoRE) Parameters</title>
            <author>
              <organization abbrev="IANA">Internet Assigned Numbers Authority</organization>
            </author>
            <date/>
          </front>
        </reference>

        <reference anchor="IANA.cbor-tags" target="https://www.iana.org/assignments/cbor-tags">
          <front>
            <title>Concise Binary Object Representation (CBOR) Tags</title>
            <author>
              <organization abbrev="IANA">Internet Assigned Numbers Authority</organization>
            </author>
            <date/>
          </front>
        </reference>

        <reference anchor="IANA.uri-schemes" target="https://www.iana.org/assignments/uri-schemes">
          <front>
            <title>Uniform Resource Identifier (URI) Schemes</title>
            <author>
              <organization abbrev="IANA">Internet Assigned Numbers Authority</organization>
            </author>
            <date/>
          </front>
        </reference>

        <reference anchor="IANA.pa-tnc-parameters" target="https://www.iana.org/assignments/pa-tnc-parameters">
          <front>
            <title>Posture Attribute (PA) Protocol Compatible with Trusted Network Connect (TNC) Parameters</title>
            <author>
              <organization abbrev="IANA">Internet Assigned Numbers Authority</organization>
            </author>
            <date/>
          </front>
        </reference>
      </references>
      <references>
        <name>Informative References</name>

<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3444.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4122.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7595.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8322.xml"/>
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8520.xml"/>

<!-- draft-ietf-rats-architecture (RFC 9334; published) -->
<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9334.xml"/>

        <reference anchor="CamelCase" target="http://wiki.c2.com/?CamelCase">
          <front>
            <title>Camel Case (upper camel case)</title>
            <author>
              <organization/>
            </author>
            <date year="2014" month="December" day="18"/>
          </front>
        </reference>

        <reference anchor="KebabCase" target="http://wiki.c2.com/?KebabCase">
          <front>
            <title>Kebab Case</title>
            <author>
              <organization/>
            </author>
            <date year="2014" month="August" day="29"/>
          </front>
        </reference>

        <reference anchor="SEMVER" target="https://semver.org/spec/v2.0.0.html">
          <front>
            <title>Semantic Versioning 2.0.0</title>
            <author initials="T." surname="Preston-Werner" fullname="Tom Preston-Werner">
              <organization/>
            </author>
            <date/>
          </front>
        </reference>

        <reference anchor="X.1520" target="https://www.itu.int/rec/T-REC-X.1520">
          <front>
            <title>Common vulnerabilities and exposures</title>
            <author>
              <organization>ITU-T</organization>
            </author>
            <date year="2014" month="January"/>
          </front>
         <refcontent>ITU-T Recommendation X.1520</refcontent>
        </reference>

        <reference anchor="SWID-GUIDANCE" target="https://doi.org/10.6028/NIST.IR.8060">
          <front>
            <title>Guidelines for the Creation of Interoperable Software Identification (SWID) Tags</title>
            <author initials="D." surname="Waltermire" fullname="David Waltermire">
              <organization>National Institute for Standards and Technology</organization>
            </author>
            <author initials="B. A." surname="Cheikes" fullname="Brant A. Cheikes">
              <organization>The MITRE Corporation</organization>
            </author>
            <author initials="L." surname="Feldman" fullname="Larry Feldman">
              <organization>G2, Inc</organization>
            </author>
            <author initials="G." surname="Witte" fullname="Greg Witte">
              <organization>G2, Inc</organization>
            </author>
            <date year="2016" month="April"/>
          </front>
         <refcontent>NISTIR 8060</refcontent>
        </reference>
      </references>
    </references>
    <section numbered="false" anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>This document draws heavily on the concepts defined in the ISO/IEC 19770-2:2015 specification. The authors of this document are grateful for the prior work of the 19770-2 contributors.</t>
      <t>We are also grateful for the careful reviews provided by the IESG
reviewers.  Special thanks go to <contact fullname="Benjamin Kaduk"/>.</t>
</section>
    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
      <name>Contributors</name>
      <contact initials="C." surname="Bormann" fullname="Carsten Bormann">
        <organization>Universität Bremen TZI</organization>
        <address>
          <postal>
            <street>Postfach 330440</street>
            <city>Bremen</city>
            <code>D-28359</code>
            <country>Germany</country>
          </postal>
          <phone>+49-421-218-63921</phone>
          <email>cabo@tzi.org</email>
        </address>
      </contact>
      <t><contact fullname="Carsten Bormann"/> contributed to the CDDL specifications and the IANA considerations.</t>
    </section>
  </back>
</rfc>
