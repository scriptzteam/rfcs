<?xml version='1.0' encoding='UTF-8'?>

<!DOCTYPE rfc [
 <!ENTITY nbsp    "&#160;">
 <!ENTITY zwsp   "&#8203;">
 <!ENTITY nbhy   "&#8209;">
 <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" category="std" docName="draft-ietf-6man-hbh-processing-20" number="9673" ipr="trust200902" updates="8200" obsoletes="" consensus="true" submissionType="IETF" tocInclude="true" tocDepth="4" symRefs="true" sortRefs="true" version="3" xml:lang="en">

  <front>


    <title abbrev="HBH Options Processing">IPv6 Hop-by-Hop Options Processing Procedures</title>
    <seriesInfo name="RFC" value="9673"/>
    <author fullname="Robert M. Hinden" initials="R" surname="Hinden">
      <organization>Check Point Software</organization>
      <address>
        <postal>
          <street>100 Oracle Parkway, Suite 800</street>
          <city>Redwood City</city>
          <region>CA</region>
          <code>94065</code>
          <country>United States of America</country>
        </postal>
        <email>bob.hinden@gmail.com</email>
      </address>
    </author>
    <author fullname="Godred Fairhurst" initials="G" surname="Fairhurst">
      <organization>University of Aberdeen</organization>
      <address>
        <postal>
          <street>School of Engineering</street>
          <street>Fraser Noble Building</street>
          <city>Aberdeen</city>
          <code>AB24 3UE</code>
          <country>United Kingdom</country>
        </postal>
        <email>gorry@erg.abdn.ac.uk</email>
       </address>
    </author>
    <date month="October" year="2024"/>
    <area>INT</area>
    <workgroup>6man</workgroup>

<abstract>
    
  <t>This document specifies procedures for processing IPv6 Hop-by-Hop
  options in IPv6 routers and hosts. It modifies the procedures specified
  in the IPv6 Protocol Specification (RFC 8200) to make processing of the IPv6
  Hop-by-Hop Options header practical with the goal of making IPv6
  Hop-by-Hop options useful to deploy and use at IPv6 routers and hosts.
  This document updates RFC 8200.</t>

</abstract>

</front>

<middle>

<section anchor="INTRO">
  <name>Introduction</name>
  <t>This document specifies procedures for processing IPv6 Hop-by-Hop
  options in IPv6 routers and hosts.
  It modifies the procedures specified in the IPv6
  Protocol Specification <xref
  target="RFC8200"/> to make processing of the IPv6 Hop-by-Hop Options header
  practical with the goal of making IPv6 Hop-by-Hop options useful to
  deploy and use at IPv6 routers and hosts.</t>

  <t>An IPv6 packet includes Hop-by-Hop
  options by including a Hop-by-Hop
  Options header. The current list of defined Hop-by-Hop options can be found at <xref
  target="IANA-HBH"/>.
  The focus for this document is to set the minimum requirements
  for router processing of Hop-by-Hop options. It also discusses
  how Hop-by-Hop options are used by hosts.
  This document 
  does not propose a specific bound to the number or size of Hop-by-Hop options
  that ought to be processed.</t>

  <t>This document updates <xref target="RFC8200"/>.</t>

</section>

<section>
  <name>Requirements Language</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
    interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/> <xref
    target="RFC8174"/> when, and only when, they appear in all capitals, as
    shown here.
        </t>
</section>

<section anchor="TERM">
  <name>Terminology</name>
  <t>This document uses the following loosely defined
   terms:</t>

   <dl spacing="normal">

       <dt>Forwarding Plane:</dt><dd>IPv6 routers exchange user or applications data through the
       Forwarding Plane.  Routers process fields contained in IPv6 packet
       headers.  However, they do not process information contained in packet
       payloads.</dd>
       
       <dt>Control Plane:</dt><dd>IPv6 routers exchange control
       information through the
       Control Plane.  The Control Plane processes the management and routing
       information exchanged with other routers.</dd>

       <dt>Fast Path:</dt><dd>A path through a router that is optimized for
       forwarding packets. The Fast Path
       might be supported by Application-Specific Integrated Circuits (ASICs),
       a Network Processor (NP),
       or other special purpose hardware. This is the typical processing path
       within a router taken by the Forwarding Plane.</dd>

       <dt>Slow Path:</dt><dd>A path through a router that is capable of
       general purpose processing and is not optimized for any particular
       function.  This processing path is used for packets that require
       special processing or that differ from assumptions made in Fast Path
       heuristics or to process router control protocols used by the Control
       Plane.</dd>

       <dt>Full Forwarding Rate:</dt><dd>The rate at which a router can
       forward packets without adversely impacting the aggregate
       forwarding rate. For example, a router could process packets
       with Hop-by-Hop options at a rate that allows it to maintain the full
       speed on its outgoing interfaces, which is sometimes called
       "wire speed".</dd>

       <dt>Source:</dt><dd>The node originating the packet.</dd>
   </dl>
   
   <t>NOTE: <xref target="RFC6192"/> is an example of how designs can
   separate Control Plane and Forwarding Plane
   functions. The separation between hardware and software processing
   described in <xref target="RFC6398"/> does not apply to all router
   architectures.  However, a router that performs all or most processing
   in software might still incur more processing cost when providing
   special processing for Hop-by-Hop options.</t>

</section>

<section anchor="BACKGROUND">
  <name>Background</name>

    <t>
    In early versions of the IPv6 protocol specification
    <xref target="RFC1883"/>
    <xref target="RFC2460"/>,
    Hop-by-Hop options were
    required to be processed by all nodes: routers and hosts. This proved to
    not be practical in current high speed routers, as observed in <xref target="RFC7045" sectionFormat="of" section="2.2"/>: "it is to be expected that high-performance routers will
    either ignore it or assign packets containing it to a slow processing
    path". The reasons behind this include the following:</t>

    <ul spacing="normal">

        <li>The inability to process Hop-by-Hop options at the Full Forwarding
        Rate can result in issues.
        In some cases, Hop-by-Hop options would be sent to the
	control/management components that run on the Slow Path.
        This could degrade a router's performance and also its ability to process
        critical control traffic, both of which could be exploited as a
        Denial-of-Service (DoS) attack against the router.</li>

        <li>If a subset of packets within a flow includes Hop-by-Hop
	options, it could lead to an increased number of reordered
	packets and greater reordering distances for packets delivered to
	the destination.
        Such reordering could occur if the Hop-by-Hop
	Options header is included
	only in some packets or if a specific Hop-by-Hop option results
	in different processing for some of the packets within the
	flow. Significant reordering of packets within a flow can
	negatively impact the performance of upper-layer protocols and
	should therefore be avoided. 
        </li>

        <li>Packets could include multiple Hop-by-Hop options. Too many
        options could make the
        previous issues worse by increasing the resources required to process
        them. The total size of the options determines the number of header bytes
        that might need to be processed. Measurements <xref target="Cus23a"/> show
        that the probability of successful transmission across the
	public Internet is currently
        higher for packets that include Options that result in a short
        total Extension Header (EH) Chain size (i.e., less than 40 bytes).</li>

    </ul>

    <t><xref target="RFC6564"/> specifies a uniform format for new IPv6 Extension
    Headers, and this update was incorporated into
    <xref target="RFC8200" sectionFormat="of" section="4.8"/> (note that
    <xref target="RFC8200"/> obsoleted <xref target="RFC2460"/>).</t>
    
    <t>When the IPv6 protocol specification was updated and published in
    July 2017 as
    <xref target="RFC8200"/>, the procedures relating to Hop-by-Hop options
    were specified (paragraphs 5 and 6 of <xref target="RFC8200" sectionFormat="of" section="4"/>) as follows:</t>

   <blockquote><t>
       The Hop-by-Hop Options header is not inserted or deleted, but may be
       examined or processed by any node along a packet's delivery path,
       until the packet reaches the node (or each of the set of nodes, in
       the case of multicast) identified in the Destination Address field of
       the IPv6 header.  The Hop-by-Hop Options header, when present, must
       immediately follow the IPv6 header.  Its presence is indicated by the
       value zero in the Next Header field of the IPv6 header.</t>
<t>
       NOTE: While <xref target="RFC2460"/> required that all nodes
       must examine and process the Hop-by-Hop Options header, it is now
       expected that nodes along a packet's delivery path only examine
       and process the Hop-by-Hop Options header if explicitly configured
       to do so.</t>
   </blockquote>

    <t>
    The changes meant that an implementation complied with the IPv6 protocol
    specification even if it did not process Hop-by-Hop options and that
    routers were expected to add configuration information to
    control whether they process the Hop-by-Hop Options header.
    In practice, routers may include configuration options to control
    which Hop-by-Hop options they will process.</t>

    <t>The text regarding the processing of Hop-by-Hop options in <xref
     target="RFC8200"/> was not intended to change the processing of these
    options. It documented how they were being used in
    the Internet at the time RFC 8200 was published (see <xref
    target="RFC8200" sectionFormat="of" section="B"/>).  This was a constraint on
    publishing the IPv6 protocol specification as an IETF Standard.</t>

    <t>The main issues remain:</t>

    <ul spacing="normal">
        <li>Routers can be configured
        to drop transit packets containing Hop-by-Hop Options that
        require processing by a processor that implements the Control Plane.
        This could be done to protect against a DoS attack on the
	router <xref target="RFC9098"/> <xref target="RFC9288"/>.</li>

        <li>IPv6 packets that include a Hop-by-Hop Options header are dropped
        by some Internet paths.
        A survey in 2015 reported a high loss rate in transit Autonomous Systems (ASes) for packets that include
        Hop-by-Hop options <xref target="RFC7872"/>.
        The operational implications of IPv6 packets that include
        Extension Headers are discussed in <xref target="RFC9098"/>.
	
        Measurements taken in 2023 confirm this to still be the case for many types of
	network paths <xref target="Cus23b"/>. </li>

        <li>Allowing multiple Hop-by-Hop options in a single packet in some cases
        consumes more router resources to process these packets.  It also adds
        complexity to the number of permutations that might need to be
        processed/configured.</li>

        <li>Including larger or multiple Hop-by-Hop options in a
        Hop-by-Hop Options header increases
        the number of bytes that need to be processed in forwarding,
        which in some designs can impact
        the cost of processing a packet, and in turn could increase the probability of
        drop <xref target="RFC7872"/>. A larger Extension Header
        could also reduce the probability of a router locating all
        the header bytes required to successfully process
        an access control list operating on fields after the Hop-by-Hop
        Options header.</li>

        <li>Any option that can be used to force packets into the
	processor that implements the router's Control Plane can be 
	exploited as a DoS
        attack on a transit router by saturating the resources needed for
        router management protocols (routing protocols, network management
        protocols, etc.), which could cause adverse router operation.
        This is an issue for the
        Router Alert Option <xref target="RFC2711"/>, which
	intentionally forwards packets to the Control Plane
        as discussed in <xref target="RFC6398"/>.
        This impact could be mitigated by limiting
        the use of Control Plane resources by a specific packet and/or
        by using per-function rate-limiters for packets processed
        by the Control Plane.
	</li>

    </ul>
    
    <t><xref target="RFC6398" sectionFormat="of" section="3"/> includes a summary of processing the IP Router Alert Option:</t>

    <blockquote>
        In a nutshell, the IP Router Alert Option does not provide a
        convenient universal mechanism to accurately and reliably distinguish
        between IP Router Alert packets of interest and unwanted IP Router
        Alert packets.  This, in turn, creates a security concern when the IP
        Router Alert Option is used, because, short of appropriate
        router-implementation-specific mechanisms, the router slow path is at risk
        of being flooded by unwanted traffic.
    </blockquote>

        <t>This is an example of the need to limit the resources that can
        be consumed when a particular function is executed and to avoid consuming
        Control Plane resources
        where support for a function has not been configured.</t>

    <t>There has been research that has discussed
    the general problem with dropping packets containing IPv6 Extension
    Headers, including the Hop-by-Hop Options header.
    For example, <xref target="Hendriks"/> states that "Dropping all
    packets that contain Extension Headers is a bad practice" and that "The share
    of traffic containing more than one EH however, is very small. For the
    design of hardware able to handle the dynamic nature of EHs, we therefore
    recommend to support at least one EH".  Operational aspects of the topics
    discussed in this section are further discussed in <xref target="I-D.ietf-v6ops-hbh"/>.</t>

    <t>"Transmission and Processing of IPv6 Extension Headers" <xref
    target="RFC7045"/> clarifies how intermediate nodes should process
    Extension Headers.  This document is generally consistent with
    <xref target="RFC7045"/> and addresses an issue that was raised for
    discussion when <xref target="RFC2460"/> was updated and replaced by
    <xref target="RFC8200"/>. This document updates <xref
    target="RFC8200"/> as described in the next section and consequently
    clarifies the description in <xref target="RFC7045" sectionFormat="of" section="2.2"/>,
    using the language of BCP 14 <xref target="RFC2119"/> <xref
    target="RFC8174"/>.</t>

    <t>This document defines a set of procedures for the Hop-by-Hop
    Options header that are intended to make the processing of Hop-by-Hop
    options practical in modern routers. The common cases are
    that some Hop-by-Hop options will be processed across the Internet,
    while others will only be processed within a limited domain <xref
    target="RFC8799"/> (e.g., where a specific service is made available
    in that network segment that relies on one or more Hop-by-Hop
    options).</t>


</section>

<section anchor="HBH">
  <name>Hop-by-Hop Header Processing Procedures</name>

    <t>This section describes several changes to <xref
    target="RFC8200"/>. <xref target="FAST"/> describes the processing of
    the Hop-by-Hop options Extension Header, and <xref target="ONE"/> describes
    the processing of individual Hop-by-Hop options.
    These sections update the text in paragraph 6 of
   <xref target="RFC8200" sectionFormat="of" section="4"/> and, as noted in <xref target="ONE"/>, modify	 		
   <xref target="RFC8200" sectionFormat="of" section="4.2"/>.</t>

    <section anchor="FAST">
      <name>Processing the Extension Header Carrying Hop-by-Hop Options</name>

       <t>When a packet includes one or more Extension Headers, the Next Header
        field of the IPv6 Header identifies the type of Extension Header.
        It does not identify the transport protocol.</t>
        
       <t>The Extension Header used to carry Hop-by-Hop options
       is defined in <xref target="RFC8200" sectionFormat="of" section="4.3"/> and is identified
       by a Next Header value of 0 in the IPv6
        header.  <xref target="RFC8200" sectionFormat="of" section="4.1"/> requires this Hop-by-Hop
        Options header to appear immediately after the IPv6 header.  <xref
          target="RFC8200"/> also requires that a Hop-by-Hop Options header
        only appear at most once in a packet.</t>

        <t>The Hop-by-Hop Options header as defined in
        <xref target="RFC8200"/> can contain
        one or more Hop-by-Hop options.</t>
        
        <t>Routers that process the Hop-by-Hop Options header <bcp14>SHOULD</bcp14> do
        so using the method defined in this document.
	Exceptions to this <bcp14>SHOULD</bcp14> include routers that are configured to
	drop packets with a Hop-by-Hop Options header to protect
	downstream devices that do not comply with this
	specification  (see <xref target="RFC9288"/>).</t>

        <t>Even if a router does not process the Hop-by-Hop Options
        header (for example, when based on configuration), it <bcp14>MUST</bcp14> forward the
        packet normally based on the remaining Extension Header(s) after
        the Hop-by-Hop Options header.  A router <bcp14>MUST NOT</bcp14> drop a packet
        solely because it contains an Extension Header carrying
        Hop-by-Hop options.  A configuration could control whether normal
        processing skips any or all of the Hop-by-Hop options carried in
        the Hop-by-Hop Options header.</t>
   
        <t>It is expected that the Hop-by-Hop Options header will be
        processed by the destination(s).
        Hosts <bcp14>SHOULD</bcp14> process the Hop-by-Hop Options header in
        received packets.  A constrained host is an example of a node
	that does not process the Hop-by-Hop Options header.
        If a destination does not process the Hop-by-Hop Options header,
        it <bcp14>MUST</bcp14> process the remainder of the packet normally.
        </t>

    <section anchor="CONFIG">
      <name>Configuration Enabling Hop-by-Hop Header Processing</name>

        <t><xref target="RFC8200" sectionFormat="of" section="4"/> allows a router to control its processing
        of IPv6 Hop-by-Hop options by local configuration.  The text is:</t>
        <blockquote>
           NOTE: While <xref target="RFC2460"/> required that all nodes must examine and
           process the Hop-by-Hop Options header, it is now expected that nodes
           along the path only examine and process the
           Hop-by-Hop Options header if explicitly configured to do so.
        </blockquote>

         <t>
	 This document clarifies that a configuration could control whether
  processing skips any specific Hop-by-Hop options carried in the Hop-
  by-Hop Options header.  A router that does not process the contents
  of the Hop-by-Hop Options header does not process any of the
  Option Types contained in the Hop-by-Hop Options header.
	 </t>

    </section> 
    </section> 

    <section anchor="ONE">
      <name>Hop-by-Hop Options Processing</name>

        <t>A Source creating packets with a Hop-by-Hop Options header <bcp14>SHOULD</bcp14> use
           a method that is robust to network nodes selectively processing only
           some of the Hop-by-Hop options that are included in the packet or that forward
           packets without the option(s) being processed (see <xref target="HOW"/>).
           
        A Source <bcp14>MAY</bcp14>, based on local configuration,
        allow only one Hop-by-Hop option to be included in a packet,
        or it could allow more than one Hop-by-Hop option
        but limit their size to increase the likelihood of successful
        transfer across a network path.
        Because some routers might only process one or a limited number of
        options in the Hop-by-Hop Options header, Sources are motivated to
        order the placement of Hop-by-Hop options within the Hop-by-Hop
        Options header in decreasing order of importance for their
        processing by nodes on the path.
	</t>

        <t>A router configuration needs to avoid vulnerabilities that
        arise when it cannot process the first Hop-by-Hop option at the Full
        Forwarding Rate.  Therefore, a router <bcp14>SHOULD NOT</bcp14> be configured to
        process the first Hop-by-Hop option if this adversely impacts the
        aggregate forwarding rate.  A router <bcp14>SHOULD</bcp14> process additional
        Hop-by-Hop options, if configured to do so, providing that these
        also do not adversely impact the aggregate forwarding rate.</t>

        <t>If a router is unable to process a specific Hop-by-Hop option
        (or is not configured to do so), it
        <bcp14>SHOULD</bcp14> behave in the same way specified for an unrecognized Option Type when the
        action bits are set to "00", and it
        <bcp14>SHOULD</bcp14> skip the remaining options
        using the "Hdr Ext Len" field in the
        Hop-by-Hop Options header.  This field specifies the length of the Options
        Header in 8-octet units.  After skipping an option, the router continues
        processing the remaining options in the header.
        Skipped options do not need to be verified.</t>
        
        <t>The Router
        Alert Option <xref target="RFC2711"/> is an exception
        to this because it is designed to tell a router
	that the packet needs additional processing, which is usually done
        in the Control Plane; see <xref target="RTRALERT"/>.
        </t>

        <t><xref target="RFC8200" sectionFormat="of" section="4.2"/>
        defines the Option Type identifiers as internally encoded such that their
        highest-order 2 bits specify the action that must be taken if the
        processing IPv6 node does not recognize the Option Type. The text is:</t>

<!--NOTE: authors requested that the quoted text below not be in <blockquote>. It should exactly match the formatting in RFC 8200.
-->

<artwork align="left" name="" type="" alt=""><![CDATA[
   00 - skip over this option and continue processing the header.

   01 - discard the packet.

   10 - discard the packet and, regardless of whether or not the
        packet's Destination Address was a multicast address, 
        send an ICMP Parameter Problem, Code 2, message to the
        packet's Source Address, pointing to the unrecognized 
        Option Type.

   11 - discard the packet and, only if the packet's Destination
        Address was not a multicast address, send an ICMP Parameter
        Problem, Code 2, message to the packet's Source Address,
        pointing to the unrecognized Option Type.
]]></artwork>	

        <t>This document modifies this behavior for the "01", "10", and
	"11" action bits so that if a router is unable to process a specific Hop-by-Hop option
        (or is not configured to do so), it <bcp14>SHOULD</bcp14> behave in the same way
	specified for an unrecognized Option Type when the 
        action bits are set to "00".
            
        It also modifies the behavior for values "10" and "11" in the case where 
        the packet is discarded and the
        node <bcp14>MAY</bcp14> send an ICMP Parameter Problem, Code 2 <xref target="RFC4443"/>,
	message to the packet's Source Address, pointing to the unrecognized Option Type.</t>

	<t>The modified text for values "01", "10", and "11" is:</t>
	
<artwork align="left" name="" type="" alt=""><![CDATA[
   01 - MAY discard the packet, if so configured. Nodes should not
        rely on routers dropping these unrecognized Option Types.

   10 - MAY discard the packet, if so configured, regardless of
        whether or not the packet's Destination Address was a
        multicast address. If the packet was discarded, an ICMP
        Parameter Problem, Code 2, message MAY be sent to the 
        packet's Source Address, pointing to the unrecognized 
        Option Type.

   11 - MAY discard the packet, if so configured. If the packet
        was discarded and the packet's Destination Address was 
        not a multicast address, an ICMP Parameter Problem, 
        Code 2, message MAY be sent to the packet's Source 
        Address, pointing to the unrecognized Option Type.
]]></artwork>

        <t>When an ICMP Parameter Problem, Code 2, message is delivered to the
        Source, it
	indicates that at least one node on the
        path has failed to recognize the option <xref target="RFC4443"/>.
        Generating any ICMP message
        incurs additional router processing.
        Reception of this message is
        not guaranteed;
        routers might be unable to be configured so that they do not generate
        these messages, 
	and they are not always forwarded to the Source.
        The motivation here is to loosen
        the requirement to send an ICMPv6 Parameter Problem message when a router
        forwards a packet without processing the list of all options.</t>

    <section anchor="RTRALERT">
      <name>Router Alert Option</name>

        <t>The purpose of the Router Alert Option <xref target="RFC2711"/> is to tell
        a router that the packet needs additional processing in the Control Plane.
        </t>
        <t>The Router Alert Option includes a two-octet Value field that
        describes the protocol that is carried in the packet.
	The
	current specified values can 
        be found in the "IPv6 Router Alert Option Values" IANA registry <xref
        target="IANA-RA"/>.</t>
	
        <t>DISCUSSION</t>
        <t indent="3">The function of a Router Alert Option can result in the processing
 that this specification is proposing to eliminate, that is,
 instructing a router to process the packet in the Control Plane.
 This processing causes concerns, which are discussed in <xref target="BACKGROUND"/>.
 One approach would be to deprecate this, because current usage 
 beyond the local network appears to be limited, and packets containing 
 Hop-by-Hop options are frequently dropped. Deprecation would allow 
 current implementations to continue, and its use could be phased out 
 over time.</t>

        <t indent="3">The Router Alert Option could potentially be used with new
 functions that have to be processed in the Control Plane.  Keeping
 this as the single exception for processing in the Control Plane
 with the restrictions that follow is a reasonable compromise to
 allow future flexibility.  These restrictions are compatible 
 with <xref target="RFC6398" sectionFormat="of" section="5"/>.</t>

        <t>
        As noted in <xref target="RFC6398"/>, 
        "Implementations of the IP Router Alert Option
        <bcp14>SHOULD</bcp14> offer the configuration option to simply ignore the presence
        of 'IP Router Alert' in IPv4 and IPv6 packets."</t>

        <t>A node that is configured to process a Router Alert Option
        <bcp14>MUST</bcp14> protect itself from an infrastructure attack
        that could result from processing in the Control Plane. This might include
        some combination of an access control list to only permit access from trusted nodes,
        rate limiting of processing, or other methods <xref target="RFC6398"/>.</t>

        <t>As specified in <xref target="RFC2711"/>, the top two bits of the Option Type
        for the Router Alert Option are always set to "00", indicating that the node
        should skip over this option as if it does not recognize the Option
	Type and continue processing the header.
        An implementation that does recognize the Router Alert Option
	<bcp14>SHOULD</bcp14> verify that the Router Alert Option contains a
        protocol, as indicated by the Value field in the Router Alert Option,
        that is configured as a protocol of interest to that
        router.  A verified packet <bcp14>SHOULD</bcp14> be sent to the Control Plane for further processing
        <xref target="RFC6398"/>.  Otherwise, the router implementation <bcp14>SHOULD</bcp14> forward
        this packet subject to all normal policies and forwarding rules.
        </t>

    </section>

    <section anchor="CONFIG2">
      <name>Configuration of Hop-by-Hop Options Processing</name>

      <t>A router can be configured to process a specific Option.  The set
      of enabled options <bcp14>SHOULD</bcp14> be configurable by the operator of the
      router.</t>

      <t>A possible approach to implementing this is to maintain a lookup
      table based on an Option Type of the IPv6 options that can be
      processed at the Full Forwarding Rate.  This would allow a router to
      quickly determine if an option is supported and can be processed.
      If the option is not supported, then the router processes the
      option as described in <xref target="FAST"/> of this document.</t>

    <t>The actions of the lookup table should be configurable by the operator of
    the router.</t>
    </section> 
    </section>


</section>

<section anchor="NEW">
  <name>Defining New Hop-by-Hop Options</name>

    <t>This section updates <xref target="RFC8200" sectionFormat="of" section="4.8"/>.</t>
  
    <t>Any future new IPv6 Hop-by-Hop options should be designed to
    be processed at the Full Forwarding Rate and should have the following characteristics:</t>

    <ul spacing="normal">

        <li>New Hop-by-Hop options should
        be designed to ensure the router can process the options at the Full
        Forwarding Rate. That is, they should be simple to process. 
        </li>

        <li>New Hop-by-Hop options should be defined with the Action type (highest-order 2
        bits of the Option Type) set to "00", which enables skipping over this option
	and continuing with the processing of the header if a router does not recognize
	the option.</li>

        <li>The size of Hop-by-Hop options should not extend beyond what can be
        expected to be executed at the Full Forwarding Rate.  A larger Hop-by-Hop
        Options header can increase the likelihood that a packet will be
        dropped <xref target="Cus23b"/>.  
        </li>

        <li>New Hop-by-Hop options should be designed with the expectation that a router
        might be configured to only process a subset of Hop-by-Hop options (e.g., the first option) in the
        Hop-by-Hop Options header.</li>

        <li>The design of protocols that use new Hop-by-Hop options should consider
        that a router may drop packets containing the new Hop-by-Hop option.
        </li>
    </ul>

    <t>If a new Hop-by-Hop option does not meet
    these criteria, its specification must include a detailed
    explanation why that is the case and show that there
    is a reasonable expectation that the option can still proceed at the Full
    Forwarding Rate.  This is consistent with [RFC6564].
    This is consistent with <xref target="RFC6564"/>.</t>

    <t>The general issue of robust operation of packets with new
    Hop-by-Hop options is described in <xref target="HOW"/>.</t>

    <section anchor="HOW">
      <name>Example of Robust Usage</name>
        <t>Recent measurement
        surveys (e.g., <xref target="Cus23a"/>)
        show that packets that include Extension Headers can cause the packets to
        be dropped by some
        Internet paths. In a limited domain, routers can be configured or updated
        to provide support for any required Hop-by-Hop options.</t>

        <t>The primary motivation of this document is to make it
        more practical to use Hop-by-Hop options beyond such a limited domain, with the
        expectation that applications can improve the
        quality of or add new features to their offered service when
        the path successfully forwards packets with the required Hop-by-Hop options
        and otherwise refrains from using these options.
        The focus is on incremental deployability.

        A protocol feature (such as using Hop-by-Hop options) is incrementally
        deployable if early adopters gain some
        benefit on the paths being used, even though other paths do not support the
        protocol feature.
	A Source ought to order the Hop-by-Hop options that are carried
	in the Hop-by-Hop Options header in decreasing order of
        importance for processing by nodes on the path.
	</t>
        
        <t>Methods can be developed that do not rely upon all routers
        to implement a specific Hop-by-Hop option (e.g., <xref target="RFC9268"/>)
        and that are robust when the
        current path drops packets that contain a Hop-by-Hop option (e.g.,
        <xref target="RFC9098"/>).</t>

        <t>For example, an application can be designed to first send
        a test packet that includes the required option or combination
        of options and then send other packets without including
        the option. The application does not send additional
        packets that include this option (or set of options) until the
        test packet(s) is acknowledged.
        The need for potential loss recovery when a path drops
        these test packets can be avoided by choosing packets that do not
        carry application data that needs to be reliably delivered.</t>
	
        <t>Since the set of nodes forming a path can change with time,
        this discovery process ought to be repeated from time to time.
        The process of sending packets both with and without a specific
        header to discover whether a path can support a specific header
        is sometimes called "racing". Transport protocol racing
        is explained in <xref target="I-D.ietf-taps-arch"/>,
        and A/B protocol feature testing is described in <xref target="Tram17"/>.</t>

    </section> 

</section>

<section anchor="IANA">
  <name>IANA Considerations</name>

    <t>This document updates the processing of
        Hop-by-Hop options.
        IANA has added this document as an
        additional reference for the "Destination Options and Hop-by-Hop Options" registry
        in the "Internet Protocol Version 6 (IPv6) Parameters" registry group <xref target="IANA-HBH"/>.</t>
</section>

<section anchor="Security">
  <name>Security Considerations</name>
    <t>Security issues caused by including IPv6 Hop-by-Hop options are well known and have
    been documented in several places, including
    <xref target="RFC6398"/>,
    <xref target="RFC6192"/>, <xref target="RFC7045"/>, and
    <xref target="RFC9098"/>.
    The main issue, as noted in <xref target="BACKGROUND"/>, is that
    any mechanism that can be used to force packets into the
    router's Control Plane or Slow Path can be exploited as a DoS attack on a
    router by saturating the resources needed for router management
    (routing protocols, network management protocols, etc.), and this can
    cause the router to fail or perform suboptimally. </t>

    <t>While Hop-by-Hop options are not required to be processed in the
    Control Plane, the Router Alert Option is the one exception that is designed
    to be processed in the Control Plane.</t>
  
    <t>Some IPv6 nodes implement features that access more of the protocol
    information than a typical IPv6 router (e.g., <xref target="RFC9098"/>).
    Examples are nodes that provide
    DoS mitigation, firewall/access control, traffic engineering,
    or traffic normalization. These nodes
    could be configured to drop packets when they are unable to access
    and process all Extension Headers or are unable to locate and process
    the higher-layer packet information. This document provides guidance
    on the requirements concerning Hop-by-Hop options.</t>

    <t> Finally, this document notes that Internet protocol processing needs to be robust for
    malformed/malicious protocol fields.

    For example, a packet with an
    excessive number of options could consume significant resources;
    inclusion of a large Extension Header could potentially cause an
    on-path router to be unable to utilize hardware optimizations
    to process later headers (e.g., to perform equal cost multipath
    forwarding or port filtering).
    
    This requirement is not specific to
    Hop-by-Hop options. It is important that implementations
    fail gracefully when a malformed or malicious Hop-by-Hop option is encountered.</t>

    <t>This document changes how the Hop-by-Hop Options header is processed,
    which significantly reduces the attack surface.  These changes include the following:
    </t>

    <ul spacing="normal">

        <li>A router configuration needs to avoid vulnerabilities that
            arise when it cannot process a Hop-by-Hop option at the Full
            Forwarding Rate; therefore, it <bcp14>SHOULD NOT</bcp14> be configured to
            process the Hop-by-Hop option if it adversely impacts the
            aggregate forwarding rate. Instead, it
            <bcp14>SHOULD</bcp14> behave in the same way specified for an unrecognized Option Type when the
            action bits are set to "00", as specified in <xref target="ONE"/>.</li>
	    
        <li>This document adds criteria for the Router Alert Option (<xref target="RTRALERT"/>)
        to allow control over how it is
        processed and describes how a node configured to support these options must
        protect itself from attacks by using the Router Alert Option.</li>

        <li>This document sets the expectation that if a packet
        includes a Hop-by-Hop Options header, the packet will be forwarded across the network path.
        </li>

        <li>A Source <bcp14>MAY</bcp14> include a single Hop-by-Hop option (based on
        local configuration) or <bcp14>MAY</bcp14> be configured to include more
        Hop-by-Hop options. The configuration of intermediate nodes determines
    whether a node processes any of these options, and if so, which ones and how many.</li>

        <li>This document adds guidance for the design of
        any future new Hop-by-Hop option that reduces the
        computational requirements and encourages a
        limit to their size.</li>

    </ul>

    <t>The intent of this document is to highlight that these changes significantly reduce the
    security issues relating to processing the IPv6 Hop-by-Hop Options header
    and enable Hop-by-Hop options to be safely used in the Internet.</t>

</section>

</middle>

<back>
  <displayreference target="I-D.ietf-v6ops-hbh" to="HBH"/>
  <displayreference target="I-D.ietf-taps-arch" to="TAPS-ARCH"/>
  <references>
      <name>Normative References</name>

      <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8200.xml"/>
      <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
      <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>

      <reference anchor="IANA-HBH"
       target="https://www.iana.org/assignments/ipv6-parameters/">
          <front>
            <title>Destination Options and Hop-by-Hop Options</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>

    </references>
  
  <references>
     <name>Informative References</name>

     <reference anchor="IANA-RA"
       target="https://www.iana.org/assignments/ipv6-routeralert-values/">
          <front>
            <title>IPv6 Router Alert Option Values</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>

    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1883.xml"/>
    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2460.xml"/>
    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2711.xml"/>
    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4443.xml"/>
    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6398.xml"/>
    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6192.xml"/>
    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6564.xml"/>
    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7045.xml"/>
    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7872.xml"/>
    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8799.xml"/>
    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9098.xml"/>
    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9268.xml"/>
    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9288.xml"/>

<!-- [I-D.ietf-v6ops-hbh] IESG state: Expired as of 09/30/24-->
    <xi:include href="https://datatracker.ietf.org/doc/bibxml3/draft-ietf-v6ops-hbh.xml"/>

<!-- [I-D.ietf-taps-arch] IESG state: RFC Ed Queue (EDIT) as of 09/30/24 (C508 document). Missing editors. -->

<reference anchor="I-D.ietf-taps-arch" target="https://datatracker.ietf.org/doc/html/draft-ietf-taps-arch-19">
<front>
<title>
Architecture and Requirements for Transport Services
</title>
<author initials="T." surname="Pauly" fullname="Tommy Pauly" role="editor">
<organization>Apple Inc.</organization>
</author>
<author initials="B." surname="Trammell" fullname="Brian Trammell" role="editor">
<organization>Google Switzerland GmbH</organization>
</author>
<author initials="A." surname="Brunstrom" fullname="Anna Brunstrom">
<organization>Karlstad University</organization>
</author>
<author initials="G." surname="Fairhurst" fullname="Gorry Fairhurst">
<organization>University of Aberdeen</organization>
</author>
<author initials="C." surname="Perkins" fullname="Colin Perkins">
<organization>University of Glasgow</organization>
</author>
<date month="November" day="9" year="2023"/>
</front>
<seriesInfo name="Internet-Draft" value="draft-ietf-taps-arch-19"/>
</reference>


    <reference anchor="Hendriks" target="http://dl.ifip.org/db/conf/tma/tma2017/tma2017_paper22.pdf">
       <front>
          <title>Threats and Surprises behind IPv6 Extension Headers</title>
          <author initials="L" surname="Hendriks" fullname="Luuk Hendriks">
           <organization>University of Twente</organization>
            </author>
          <author initials="P" surname="Velan" fullname="Petr Velan">
           <organization>University of Twente</organization>
            </author>
          <author initials="RO" surname="Schmidt" fullname="Ricardo de O. Schmidt">
           <organization>University of Twente</organization>
            </author>
          <author initials="P" surname="Boer" fullname="Pieter-Tjerk de Boer">
           <organization>University of Twente</organization>
            </author>
          <author initials="A" surname="Aiko" fullname="Aiko Pras">
           <organization>University of Twente</organization>
            </author>
            <date month="August" year="2017" />
        </front>
        <seriesInfo name="DOI" value="10.23919/TMA.2017.8002912" />
        <refcontent>2017 Network Traffic Measurement and Analysis Conference (TMA)</refcontent>
   </reference>

   <reference anchor="Tram17" target="https://irtf.org/anrw/2017/anrw17-final16.pdf">
       <front>
          <title>Tracking Transport-Layer Evolution with PATHspider</title>
          <author initials="B" surname="Trammell" fullname="Brian Trammell">
          </author>
          <author initials="M" surname="Kühlewind" fullname="Mirja Kühlewind">
          </author>
          <author initials="P" surname="De Vaere" fullname="Piet De Vaere">
          </author>
          <author initials="I" surname="Learmonth" fullname="Iain Learmonth ">
          </author>
          <author initials="G" surname="Fairhurst" fullname="Gorry Fairhurst">
          </author>
            <date month="July" year="2017" />
        </front>
        <seriesInfo name="DOI" value="10.1145/3106328.3106336" />
        <refcontent>ANRW '17: Proceedings of the 2017 Applied Networking Research Workshop</refcontent>
   </reference>

 
   <reference anchor="Cus23a" target="http://www.iepg.org/2023-03-26-ietf116/eh.pdf">
       <front>
          <title>Internet Measurements: IPv6 Extension Header Edition</title>
          <author initials="A" surname="Custura" fullname="Ana Custura ">
          </author>
          <author initials="G" surname="Fairhurst" fullname="Gorry Fairhurst">
          </author>
            <date month="March" year="2023" />
        </front>
        <refcontent>IEPG Meeting: IETF 116</refcontent>
   </reference>

  <reference anchor="Cus23b" target="https://www.sciencedirect.com/science/article/pii/S0140366423003705">
   <front>
    <title>Is it possible to extend IPv6?</title>
    <author initials="A." surname="Custura" fullname="A. Custura"></author>
    <author initials="R." surname="Secchi" fullname="R. Secchi"></author>
    <author initials="E." surname="Boswell" fullname="E. Boswell"></author>
    <author initials="G." surname="Fairhurst" fullname="G. Fairhurst"></author>
    <date year="2024" month="Jan"/>
  </front>
  <refcontent>Computer Communications, vol. 214, pp. 90-99</refcontent>
  <seriesInfo name="DOI" value="10.1016/j.comcom.2023.10.006"/>
</reference>
   
</references>
<section anchor="Ack" numbered="false">
  <name>Acknowledgments</name>
    <t>Helpful comments were received from <contact fullname="Brian
    Carpenter"/>, <contact fullname="Ron Bonica"/>, <contact fullname="Ole
    Troan"/>, <contact fullname="Mike Heard"/>, <contact fullname="Tom
    Herbert"/>, <contact fullname="Cheng Li"/>, <contact fullname="Éric
    Vyncke"/>, <contact fullname="Greg Mirsky"/>, <contact fullname="Xiao
    Min"/>, <contact fullname="Fernando Gont"/>, <contact fullname="Darren
    Dukes"/>, <contact fullname="Peng Shuping"/>, <contact fullname="Dave
    Thaler"/>, <contact fullname="Ana Custura"/>, <contact fullname="Tim
    Winters"/>, <contact fullname="Jingrong Xie"/>, <contact fullname="Lorenzo
    Colitti"/>, <contact fullname="Toerless Eckert"/>, <contact
    fullname="Suresh Krishnan"/>, <contact fullname="Mikael Abrahamsson"/>,
    <contact fullname="Adrian Farrel"/>, <contact fullname="Jie Dong"/>,
    <contact fullname="Jen Linkova"/>, <contact fullname="Erik Kline"/>, and
    other members of the 6MAN Working Group.</t>

</section>
</back>
</rfc>
