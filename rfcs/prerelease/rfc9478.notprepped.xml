<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" submissionType="IETF" category="std" consensus="true" docName="draft-ietf-ipsecme-labeled-ipsec-12" number="9478" xml:lang="en" updates="" obsoletes="" tocInclude="true" tocDepth="4" symRefs="true" sortRefs="true" version="3">

  <!-- xml2rfc v2v3 conversion 3.17.1 -->
  <front>
    <title abbrev="Labeled IPsec">Labeled IPsec Traffic Selector Support for the Internet Key Exchange Protocol Version 2 (IKEv2)</title>
    <seriesInfo name="RFC" value="9478"/>
    <author initials="P." surname="Wouters" fullname="Paul Wouters">
      <organization>Aiven</organization>
      <address>
        <email>paul.wouters@aiven.io</email>
      </address>
    </author>
    <author fullname="Sahana Prasad" initials="S." surname="Prasad">
      <organization>Red Hat</organization>
      <address>
        <email>sahana@redhat.com</email>
      </address>
    </author>
    <date year="2023" month="October"/>
    <area>sec</area>
    <workgroup>ipsecme</workgroup>
    <keyword>IKEv2</keyword>
    <keyword>SPD</keyword>
    <keyword>SAD</keyword>
    <abstract>
      <t> This document defines a new Traffic Selector Type (TS Type) for
      the Internet Key Exchange Protocol version 2 (IKEv2) to add support for negotiating
      Mandatory Access Control (MAC) security labels as a Traffic Selector 
      of the Security Policy Database (SPD). Security Labels for IPsec
      are also known as "Labeled IPsec".  The new TS Type, TS_SECLABEL,
      consists of a variable length opaque field that specifies the
      security label.</t>
    </abstract>
  </front>
  <middle>
    <section numbered="true" toc="default">
      <name>Introduction</name>
      <t> In computer security, Mandatory Access Control (MAC) usually
        refers to systems in which all subjects and objects are assigned
        a security label. A security label is composed of a set of
        security attributes. Along with a system
        authorization policy, the security labels determine access. Rules within the system
        authorization policy determine whether the access will be granted
      based on the security attributes of the subject and object.</t>
      
      <t> Historically, security labels used by Multi-Level Secure
        (MLS) systems are comprised of a sensitivity level (or classification)
        field and a compartment (or category) field, as defined in <xref target="RFC5570" format="default"/>. As MAC systems
        evolved, other MAC models gained popularity. For example,
        SELinux, a Flux Advanced Security Kernel (FLASK) implementation,
        has security labels represented as colon-separated ASCII strings
        composed of values for identity, role, and type. The security
        labels are often referred to as security contexts.</t>
      <t>Traffic Selector (TS) payloads specify the selection criteria
        for packets that will be forwarded over the newly set up IPsec
        Security Association (SA) as enforced by the Security Policy Database
        (SPD) <xref target="RFC4301" format="default"/>.</t>
      <t>This document specifies a new TS Type,
        TS_SECLABEL, for IKEv2 that can be used to negotiate security
        labels as additional selectors for the SPD
        to further restrict the type of traffic that is allowed to be sent
        and received over the IPsec SA.</t>
      <section numbered="true" toc="default">
        <name>Requirements Language</name>
        <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
        "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>", "<bcp14>MAY</bcp14>", and
        "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as described in BCP
        14 <xref target="RFC2119" format="default"/> <xref target="RFC8174" format="default"/> when, and only
        when, they appear in all capitals, as shown here.</t>
      </section>
      <section numbered="true" toc="default">
        <name>Traffic Selector Clarification</name>
        <t>The negotiation of Traffic Selectors is specified in <xref target="RFC7296" sectionFormat="of" section="2.9"/>, where it defines two TS
        Types (TS_IPV4_ADDR_RANGE and TS_IPV6_ADDR_RANGE). The TS payload format is specified in <xref target="RFC7296" sectionFormat="of" section="3.13"/>.
        However, the term "Traffic Selector" is used to denote the TS payloads and individual Traffic Selectors of that payload. Sometimes,
        the exact meaning can only be learned from context or if the
        item is written in plural ("Traffic Selectors" or "TSes"). This
        section clarifies these terms as follows:</t>
        <t>A Traffic Selector (capitalized, no acronym) is one selector for traffic
        of a specific Traffic Selector Type (TS Type).  For example, a
        Traffic Selector of TS Type TS_IPV4_ADDR_RANGE for UDP (protocol 17) traffic in
        the IP network 198.51.100.0/24 covering all ports is denoted as
        (17, 0, 198.51.100.0-198.51.100.255).</t>
        <t>A TS payload is a set of one or more Traffic
        Selectors of the same or different TS Types. It typically contains
        one or more of the TS Type of TS_IPV4_ADDR_RANGE and/or TS_IPV6_ADDR_RANGE.
        For example, the above Traffic Selector by itself in a TS payload is denoted as
        TS((17, 0, 198.51.100.0-198.51.100.255))</t>
      </section>
      <section numbered="true" toc="default">
        <name>Security Label Traffic Selector Negotiation</name>
        <t>The negotiation of Traffic Selectors is specified in <xref target="RFC7296" sectionFormat="of" section="2.9"/> and states that the TSi/TSr payloads <bcp14>MUST</bcp14> contain at least one
        TS Type. This document adds a new TS Type of TS_SECLABEL that is
        valid only with at least one other TS Type. That is, it cannot
        be the only TS Type present in a TSi or TSr payload. It <bcp14>MUST</bcp14> be used along with
        an IP address selector type, such as TS_IPV4_ADDR_RANGE and/or TS_IPV6_ADDR_RANGE.</t>
      </section>
    </section>
    <section numbered="true" toc="default">
      <name>TS_SECLABEL Traffic Selector Type</name>
      <t>This document defines a new TS Type, TS_SECLABEL, that contains a single new opaque Security Label.</t>
      <section numbered="true" toc="default">
        <name>TS_SECLABEL Payload Format</name>
        <figure anchor="tstype_seclabel">
          <name>Labeled IPsec Traffic Selector</name>
          <artwork align="left" name="" type="" alt=""><![CDATA[
                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+-------------------------------+
|   TS Type     |    Reserved   |       Selector Length         |
+---------------+---------------+-------------------------------+
|                                                               |
~                         Security Label*                       ~
|                                                               |
+---------------------------------------------------------------+
]]></artwork>
        </figure>
        <t>Note: All fields other than TS Type and Selector Length depend on
   the TS Type. The fields shown are for TS Type TS_SECLABEL, which is the
   selector that this document defines.
        </t>
<dl newline="true">
          <dt>TS Type (one octet):</dt><dd>Set to 10 for TS_SECLABEL.</dd>
          <dt>Selector Length (two octets, unsigned integer):</dt><dd>Specifies the
      length of this Traffic Selector substructure including the header.</dd>
          <dt>Security Label:</dt><dd>An opaque byte stream of at least one octet.</dd>
        </dl>
      </section>
      <section numbered="true" toc="default">
        <name>TS_SECLABEL Properties</name>
        <t>The TS_SECLABEL TS Type does not support narrowing or
      wildcards. It <bcp14>MUST</bcp14> be used as an exact match value.</t>
        <t>The TS_SECLABEL TS Type <bcp14>MUST NOT</bcp14> be the only TS Type
      present in the TS payload, as TS_SECLABEL is complimentary to another
      type of Traffic Selector. There <bcp14>MUST</bcp14> be an IP address Traffic Selector
      Type in addition to the TS_SECLABEL TS Type in the TS payload. If a TS payload is received with only TS_SECLABEL
      TS Types, the exchange <bcp14>MUST</bcp14> be aborted with an Error Notify
      message containing TS_UNACCEPTABLE.</t>
        <t>The Security Label contents are opaque to the IKE implementation.
   That is, the IKE implementation might not have any knowledge regarding
   the meaning of this selector other than recognizing it as a type and
   opaque value to pass to the SPD.</t>
        <t>A zero-length Security Label <bcp14>MUST NOT</bcp14> be used. If a received
      TS payload contains a TS Type of TS_SECLABEL with a zero-length
      Security Label, that specific TS payload <bcp14>MUST</bcp14> be ignored. If no other TS payload contains an acceptable TS_SECLABEL TS Type, the exchange <bcp14>MUST</bcp14> be aborted with a TS_UNACCEPTABLE Error Notify
      message. A zero-length Security Label <bcp14>MUST NOT</bcp14> be interpreted as a
      wildcard security label.</t>
        <t> If multiple Security Labels are allowed for a Traffic Selector's IP address range, protocol, and port range, the initiator includes all of these acceptable Security Labels. The responder <bcp14>MUST</bcp14> select exactly one of the Security Labels.</t>
        <t>A responder that selected a TS with TS_SECLABEL <bcp14>MUST</bcp14> use the Security
      Label for all selector operations on the resulting TS. It <bcp14>MUST
      NOT</bcp14> select a TS_SECLABEL without using the specified Security Label,
      even if it deems the Security Label optional, as the initiator has
      indicated (and expects) that the Security Label will be set for all 
      traffic matching the negotiated TS.</t>
      </section>
    </section>
    <section numbered="true" toc="default">
      <name>Traffic Selector Negotiation</name>
      <t>If the TSi payload contains a Traffic Selector with TS Type
     TS_SECLABEL (along with another TS Type), the responder <bcp14>MUST</bcp14> create
     each TS response for the other TS Types using its normal rules
     specified for each of those TS Types, such as narrowing them following
     the rules specified for that TS Type and then adding exactly one for the
     TS Type of TS_SECLABEL to the TS payload(s). If this is not possible,
     it <bcp14>MUST</bcp14> return a TS_UNACCEPTABLE Error Notify payload.</t>
      <t>If the Security Label TS Type is optional from a
      configuration point of view, an initiator will add the
      TS_SECLABEL to the TSi/TSr payloads. If the responder replies with
      TSi/TSr payloads that include the TS_SECLABEL, then the Child SA
      <bcp14>MUST</bcp14> be created and include the negotiated Security Label. If the
      responder did not include a TS_SECLABEL in its response, then the
      initiator (which deemed the Security Label optional) will install
      the Child SA without including any Security Label. If the initiator
      required the TS_SECLABEL, it <bcp14>MUST NOT</bcp14> install the Child SA and it <bcp14>MUST</bcp14>
      send a Delete notification for the Child SA so the responder can
      uninstall its Child SA.</t>
      <section numbered="true" toc="default">
        <name>Example TS Negotiation</name>
        <t>An initiator could send the following:</t>
        <figure anchor="tstype_example_i">
          <name>Initiator TS Payloads Example</name>
          <artwork align="left" name="" type="" alt=""><![CDATA[
TSi = ((17,24233,198.51.100.12-198.51.100.12),
       (0,0,198.51.100.0-198.51.100.255),
       (0,0,192.0.2.0-192.0.2.255),
       TS_SECLABEL1, TS_SECLABEL2)
            
TSr = ((17,53,203.0.113.1-203.0.113.1),
       (0,0,203.0.113.0-203.0.113.255),
       TS_SECLABEL1, TS_SECLABEL2)
]]></artwork>
        </figure>
        <t>The responder could answer with the following:</t>
        <figure anchor="tstype_example_r">
          <name>Responder TS Payloads Example</name>
          <artwork align="left" name="" type="" alt=""><![CDATA[
TSi = ((0,0,198.51.100.0-198.51.100.255),
       TS_SECLABEL1)
            
TSr = ((0,0,203.0.113.0-203.0.113.255),
       TS_SECLABEL1)
]]></artwork>
        </figure>
      </section>
      <section numbered="true" toc="default">
        <name>Considerations for Using Multiple TS Types in a TS</name>
        <t>It would be unlikely that the traffic for TSi and TSr would have
     a different Security Label, but this specification allows this to
     be specified. 
If the initiator does not support this and wants to prevent the responder from
picking different labels for the TSi/TSr payloads, it should attempt a Child
SA negotiation and start with the first Security Label only. Upon failure, the
initiator should retry a new Child SA negotiation with only the second
Security Label.</t>
        <t>If different IP ranges can only use different specific Security
     Labels, then these should be negotiated in two different Child SA
     negotiations. In the example above, if the initiator only allows
     192.0.2.0/24 with TS_SECLABEL1 and 198.51.100.0/24 with TS_SECLABEL2,
     then it <bcp14>MUST NOT</bcp14> combine these two ranges and security labels
     into one Child SA negotiation.</t>
      </section>
    </section>
    <section anchor="Security" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>It is assumed that the Security Label can be matched by the IKE
       implementation to its own configured value, even if the IKE
       implementation itself cannot interpret the Security Label value.</t>
      <t>A packet that matches an SPD entry for all components, except the
       Security Label, would be treated as "not matching". If no other SPD
       entries match, the (mislabeled) traffic might end up being transmitted
       in the clear. It is presumed that other MAC methods
       are in place to prevent mislabeled traffic from reaching the IPsec
       subsystem or that the IPsec subsystem itself would install a REJECT/DISCARD
       rule in the SPD to prevent unlabeled traffic otherwise matching
       a labeled security SPD rule from being transmitted without IPsec protection.
      </t>
    </section>
    <section anchor="IANA" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>IANA has added a new entry in the "IKEv2 Traffic Selector Types" registry <xref target="RFC7296"/> as follows.</t>
<table anchor="iana_requests">
  <name>IKEv2 Traffic Selector Types Registry</name>
  <thead>
    <tr>
      <th>Value</th>
      <th>TS Type</th>
      <th>Reference</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>10</td>
      <td>TS_SECLABEL</td>
      <td>RFC 9478</td>
    </tr>
  </tbody>
</table>
    </section>
  </middle>
  <back>

<displayreference target="I-D.jml-ipsec-ikev2-security-label" to="LABELED-IPSEC"/>

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7296.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4301.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5570.xml"/>

<!-- [I-D.jml-ipsec-ikev2-security-label] IESG state Expired -->
<xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.jml-ipsec-ikev2-security-label.xml"/>

      </references>
    </references>
    <section anchor="acknowledgements" numbered="false" toc="default">
      <name>Acknowledgements</name>
      <t>A large part of the introduction text was taken verbatim from <xref
      target="I-D.jml-ipsec-ikev2-security-label" format="default"/>, whose
      authors are <contact fullname="Joy Latten"/>, <contact fullname="David
      Quigley"/>, and <contact fullname="Jarrett Lu"/>. <contact
      fullname="Valery Smyslov"/> provided valuable input regarding IKEv2
      Traffic Selector semantics.</t>
    </section>
  </back>
</rfc>
