<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" submissionType="IETF" category="std" consensus="true" docName="draft-ietf-ntp-yang-data-model-17" number="9249" ipr="trust200902" obsoletes="" updates="" xml:lang="en" tocInclude="true" tocDepth="3" symRefs="true" sortRefs="true" version="3">
  
  <front>
    <title abbrev="YANG for NTP">A YANG Data Model for NTP</title>
    <seriesInfo name="RFC" value="9249"/>
    <author fullname="Nan Wu" initials="N." surname="Wu">
      <organization>Huawei</organization>
      <address>
        <postal>
	  <street>Huawei Bld., No.156 Beiqing Rd.</street>
          <city>Beijing</city>
          <code>100095</code>
          <country>China</country>
        </postal>
        <email>eric.wu@huawei.com</email>
      </address>
    </author>
    <author fullname="Dhruv Dhody" initials="D." surname="Dhody" role="editor">
      <organization>Huawei</organization>
      <address>
        <postal>
          <street>Divyashree Techno Park, Whitefield</street>
          <city>Bangalore</city>
          <region>Kanataka</region>
          <code>560066</code>
          <country>India</country>
        </postal>
        <email>dhruv.ietf@gmail.com</email>
      </address>
    </author>
    <author fullname="Ankit Kumar Sinha" initials="A." surname="Sinha" role="editor">
      <organization>RtBrick Inc.</organization>
      <address>
        <postal>
          <street/>
          <city>Bangalore</city>
          <region>Kanataka</region>
          <code/>
          <country>India</country>
        </postal>
        <email>ankit.ietf@gmail.com</email>
      </address>
    </author>
    <author fullname="Anil Kumar S N" initials="A." surname="Kumar S N">
      <organization>RtBrick Inc.</organization>
      <address>
        <postal>
          <street/>
          <city>Bangalore</city>
          <region>Kanataka</region>
          <code/>
          <country>India</country>
        </postal>
        <email>anil.ietf@gmail.com</email>
      </address>
    </author>
    <author fullname="Yi Zhao" initials="Y." surname="Zhao">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street>China Digital Kingdom Bld., No.1 WangJing North Rd.</street>
          <city>Beijing</city>
          <code>100102</code>
          <country>China</country>
        </postal>
        <email>yi.z.zhao@ericsson.com</email>
      </address>
    </author>
    <date year="2022" month="July" />
    <area>int</area>
    <workgroup>ntp</workgroup>
    <keyword>NTP</keyword>
    <keyword>YANG</keyword>

    <abstract>
      <t>This document defines a YANG data model that can be used to 
   configure and manage Network Time Protocol (NTP) version 4.  It can 
   also be used to configure and manage version 3.  The data model 
   includes configuration data and state data.</t>
    </abstract>
  </front>
  <middle>
    <section numbered="true" toc="default">
      <name>Introduction</name>
      <t>This document defines a YANG data model <xref target="RFC7950" format="default"/> that can be used to configure and manage
      Network Time Protocol version 4 <xref target="RFC5905" format="default"/>. Note that the model could also be used to configure and manage NTPv3 <xref target="RFC1305" format="default"/> (see <xref target="ver" format="default"/>).</t>
      <t>The data model covers configuration of system parameters of NTP
      such as access rules, authentication and VPN Routing and Forwarding (VRF) binding, and various modes of NTP and per-interface parameters.
      It also provides access to information about running state of NTP
      implementations.</t>
      <section numbered="true" toc="default">
        <name>Operational State</name>
        <t>NTP operational state is included in the same tree as NTP configuration,
        consistent with "<xref target="RFC8342" format="title"/>" <xref target="RFC8342" format="default"/>.
        NTP current state and statistics are also maintained
        in the operational state. The operational state also includes the NTP association state.</t>
      </section>
      <section numbered="true" toc="default">
        <name>Terminology</name>
        <t>The terminology used in this document is aligned with <xref target="RFC5905" format="default"/> and <xref target="RFC1305" format="default"/>.</t>
      </section>
      <section numbered="true" toc="default">
        <name>Tree Diagrams</name>
        <t>A simplified graphical representation of the data model is used in
        this document. 
    This document uses the graphical representation of data models
    defined in <xref target="RFC8340" format="default"/>.
        </t>
      </section>
      <section toc="default" numbered="true">
        <name>Prefixes in Data Node Names</name>
        <t>In this document, names of data nodes and other data
   model objects are often used without a prefix, as long as it is clear
   from the context in which YANG module each name is defined.
   Otherwise, names are prefixed using the standard prefix associated
   with the corresponding YANG module, as shown in <xref target="tab.prefixes" format="default"/>.</t>
        <table anchor="tab.prefixes" align="center">
          <name>Prefixes and Corresponding YANG Modules</name>
          <thead>
            <tr>
              <th align="left">Prefix</th>
              <th align="left">YANG Module</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">yang</td>
              <td align="left">ietf-yang-types</td>
              <td align="left">
                <xref target="RFC6991" format="default"/></td>
            </tr>
            <tr>
              <td align="left">inet</td>
              <td align="left">ietf-inet-types</td>
              <td align="left">
                <xref target="RFC6991" format="default"/></td>
            </tr>
            <tr>
              <td align="left">if</td>
              <td align="left">ietf-interfaces</td>
              <td align="left">
                <xref target="RFC8343" format="default"/></td>
            </tr>
            <tr>
              <td align="left">sys</td>
              <td align="left">ietf-system</td>
              <td align="left">
                <xref target="RFC7317" format="default"/></td>
            </tr>
            <tr>
              <td align="left">acl</td>
              <td align="left">ietf-access-control-list</td>
              <td align="left">
                <xref target="RFC8519" format="default"/></td>
            </tr>
            <tr>
              <td align="left">rt-types</td>
              <td align="left">ietf-routing-types</td>
              <td align="left">
                <xref target="RFC8294" format="default"/></td>
            </tr>
            <tr>
              <td align="left">nacm</td>
              <td align="left">ietf-netconf-acm</td>
              <td align="left">
                <xref target="RFC8341" format="default"/></td>
            </tr>
          </tbody>
        </table>
      </section>
      <section toc="default" numbered="true">
        <name>References in the Model</name>
        <t>The following documents are referenced in the model defined in this
   document.</t>
        <table anchor="tab.ref" align="center">
          <name>References in the YANG Module</name>
          <thead>
            <tr>
              <th align="left">Title</th>
              <th align="left">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">Network Time Protocol Version 4: Protocol and Algorithms Specification</td>
              <td align="left">
                <xref target="RFC5905" format="default"/></td>
            </tr>
            <tr>
              <td align="left">Common YANG Data Types</td>
              <td align="left">
                <xref target="RFC6991" format="default"/></td>
            </tr>
            <tr>
              <td align="left">A YANG Data Model for System Management</td>
              <td align="left">
                <xref target="RFC7317" format="default"/></td>
            </tr>
            <tr>
              <td align="left">Common YANG Data Types for the Routing Area</td>
              <td align="left">
                <xref target="RFC8294" format="default"/></td>
            </tr>
            <tr>
              <td align="left">Network Configuration Access Control Model</td>
              <td align="left">
                <xref target="RFC8341" format="default"/></td>
            </tr>
            <tr>
              <td align="left">A YANG Data Model for Interface Management</td>
              <td align="left">
                <xref target="RFC8343" format="default"/></td>
            </tr>
            <tr>
              <td align="left">YANG Data Model for Network Access Control Lists (ACLs)</td>
              <td align="left">
                <xref target="RFC8519" format="default"/></td>
            </tr>
            <tr>
              <td align="left">Message Authentication Code for the Network Time Protocol</td>
              <td align="left">
                <xref target="RFC8573" format="default"/></td>
            </tr>
            <tr>
              <td align="left">The AES-CMAC Algorithm</td>
              <td align="left">
                <xref target="RFC4493" format="default"/></td>
            </tr>
            <tr>
              <td align="left">The MD5 Message-Digest Algorithm</td>
              <td align="left">
                <xref target="RFC1321" format="default"/></td>
            </tr>
            <tr>
              <td align="left">US Secure Hash Algorithm 1 (SHA1)</td>
              <td align="left">
                <xref target="RFC3174" format="default"/></td>
            </tr>
            <tr>
              <td align="left">FIPS 180-4: Secure Hash Standard (SHS)</td>
              <td align="left">
                <xref target="SHS" format="default"/></td>
            </tr>
          </tbody>
        </table>
      </section>
          <section>
	    <name>Requirements Language</name>
         <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
    interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/> <xref
    target="RFC8174"/> when, and only when, they appear in all capitals, as
    shown here.
        </t>
    </section>
    </section>
    <section numbered="true" toc="default">
      <name>NTP Data Model</name>
      <t>This document defines the YANG module "ietf-ntp", which has the
      following condensed structure:</t>    
  
<sourcecode type="yangtree"><![CDATA[
module: ietf-ntp
  +--rw ntp!
     +--rw port?                    inet:port-number {ntp-port}?
     +--rw refclock-master!
     |  +--rw master-stratum?   ntp-stratum
     +--rw authentication {authentication}?
     |  +--rw auth-enabled?          boolean
     |  +--rw authentication-keys* [keyid]
     |     +--rw keyid       uint32
     |     +--...
     +--rw access-rules {access-rules}?
     |  +--rw access-rule* [access-mode]
     |     +--rw access-mode    identityref
     |     +--rw acl?           -> /acl:acls/acl/name
     +--ro clock-state
     |  +--ro system-status
     |     +--ro clock-state                  identityref
     |     +--ro clock-stratum                ntp-stratum
     |     +--ro clock-refid                  refid
     |     +--...
     +--rw unicast-configuration* [address type]
     |       {unicast-configuration}?
     |  +--rw address           inet:ip-address
     |  +--rw type              identityref
     |  +--...
     +--rw associations
     |  +--ro association* [address local-mode isconfigured]
     |     +--ro address           inet:ip-address
     |     +--ro local-mode        identityref
     |     +--ro isconfigured      boolean
     |     +--...
     |     +--ro ntp-statistics
     |        +--...
     +--rw interfaces
     |  +--rw interface* [name]
     |     +--rw name                if:interface-ref
     |     +--rw broadcast-server! {broadcast-server}?
     |     |  +--...
     |     +--rw broadcast-client! {broadcast-client}?
     |     +--rw multicast-server* [address] {multicast-server}?
     |     |  +--rw address
     |     |  |       rt-types:ip-multicast-group-address
     |     |  +--...
     |     +--rw multicast-client* [address] {multicast-client}?
     |     |  +--rw address    rt-types:ip-multicast-group-address
     |     +--rw manycast-server* [address] {manycast-server}?
     |     |  +--rw address    rt-types:ip-multicast-group-address
     |     +--rw manycast-client* [address] {manycast-client}?
     |        +--rw address
     |        |       rt-types:ip-multicast-group-address
     |        +--...
     +--ro ntp-statistics
        +--...

  rpcs:
    +---x statistics-reset
       +---w input
          +---w (association-or-all)?
             +--:(association)
             |  +---w associations-address?
             |  |       -> /ntp/associations/association/address
             |  +---w associations-local-mode?
             |  |       -> /ntp/associations/association/local-mode
             |  +---w associations-isconfigured?
             |          -> /ntp/associations/association/isconfigured
             +--:(all)

]]></sourcecode>
      <t>The full data model tree for the YANG module "ietf-ntp" is in <xref target="full" format="default"/>.</t>
      <t>This data model defines one top-level container that includes both
        the NTP configuration and the NTP running state including access rules,
      authentication, associations, unicast configurations, interfaces, system status, and associations.</t>
    </section>
    <section numbered="true" toc="default">
      <name>Relationship with NTPv4-MIB</name>
      <t>If the device implements the NTPv4-MIB <xref target="RFC5907" format="default"/>, data
      nodes from the YANG module can be mapped
      to table entries in the NTPv4-MIB.</t>
      <t>The following tables list the YANG data nodes with corresponding
      objects in the NTPv4-MIB.</t>
      <table align="center">
	<name>YANG NTP Data Nodes in /ntp/clock-state/system-status and Related NTPv4-MIB Objects</name>
        <thead>
          <tr>
            <th align="center">YANG Data Nodes in /ntp/clock-state/system-status</th>
            <th align="center">NTPv4-MIB Objects</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="center">clock-state</td>
            <td align="center">ntpEntStatusCurrentMode</td>
          </tr>
          <tr>
            <td align="center">clock-stratum</td>
            <td align="center">ntpEntStatusStratum</td>
          </tr>
          <tr>
            <td align="center">clock-refid</td>
            <td align="center"><ul empty="true" spacing="compact" bare="true"><li>ntpEntStatusActiveRefSourceId</li><li>ntpEntStatusActiveRefSourceName</li></ul></td>
          </tr>

          <tr>
            <td align="center">clock-precision</td>
            <td align="center">ntpEntTimePrecision</td>
          </tr>
          <tr>
            <td align="center">clock-offset</td>
            <td align="center">ntpEntStatusActiveOffset</td>
          </tr>
          <tr>
            <td align="center">root-dispersion</td>
            <td align="center">ntpEntStatusDispersion</td>
          </tr>
        </tbody>
      </table>
      <t keepWithPrevious="true"/>
      <table align="center">
		<name>YANG NTP Data Nodes in /ntp/associations/ and Related NTPv4-MIB Objects</name>
        <thead>
          <tr>
            <th align="center">YANG Data Nodes in /ntp/associations/</th>
            <th align="center">NTPv4-MIB Objects</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="center">address</td>
            <td align="center"><ul empty="true" spacing="compact" bare="true"><li>ntpAssocAddressType</li><li>ntpAssocAddress</li></ul></td>
          </tr>

          <tr>
            <td align="center">stratum</td>
            <td align="center">ntpAssocStratum</td>
          </tr>
          <tr>
            <td align="center">refid</td>
            <td align="center">ntpAssocRefId</td>
          </tr>
          <tr>
            <td align="center">offset</td>
            <td align="center">ntpAssocOffset</td>
          </tr>
          <tr>
            <td align="center">delay</td>
            <td align="center">ntpAssocStatusDelay</td>
          </tr>
          <tr>
            <td align="center">dispersion</td>
            <td align="center">ntpAssocStatusDispersion</td>
          </tr>
          <tr>
            <td align="center">ntp-statistics/packet-sent</td>
            <td align="center">ntpAssocStatOutPkts</td>
          </tr>
          <tr>
            <td align="center">ntp-statistics/packet-received</td>
            <td align="center">ntpAssocStatInPkts</td>
          </tr>
          <tr>
            <td align="center">ntp-statistics/packet-dropped</td>
            <td align="center">ntpAssocStatProtocolError</td>
          </tr>
        </tbody>
      </table>

    </section>
    <section numbered="true" toc="default">
      <name>Relationship with RFC 7317</name>
      <t>This section describes the relationship with definition of NTP in
      Section <xref target="RFC7317" section="3.2" sectionFormat="bare">System Time Management</xref> of <xref target="RFC7317" format="default"/>.
      YANG data nodes in /ntp/ also support per-interface 
      configuration, which is not supported in /system/ntp.
      If the YANG data model defined in this document is implemented, then
      /system/ntp <bcp14>SHOULD NOT</bcp14> be used and <bcp14>MUST</bcp14> be ignored.</t>
      <table align="center">
	<name>YANG NTP Configuration Data Nodes and Counterparts from RFC 7317</name>
        <thead>
          <tr>
            <th align="center">YANG Data Nodes in /ntp/ </th>
            <th align="center">YANG Data Nodes in /system/ntp</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="center">ntp!</td>
            <td align="center">enabled</td>
          </tr>
          <tr>
            <td align="center">unicast-configuration</td>
            <td align="center"><ul empty="true" spacing="compact" bare="true"><li>server</li><li>server/name</li></ul></td>
          </tr>
          <tr>
            <td align="center">unicast-configuration/address</td>
            <td align="center">server/transport/udp/address</td>
          </tr>
          <tr>
            <td align="center">unicast-configuration/port</td>
            <td align="center">server/transport/udp/port</td>
          </tr>
          <tr>
            <td align="center">unicast-configuration/type</td>
            <td align="center">server/association-type</td>
          </tr>
          <tr>
            <td align="center">unicast-configuration/iburst</td>
            <td align="center">server/iburst</td>
          </tr>
          <tr>
            <td align="center">unicast-configuration/prefer</td>
            <td align="center">server/prefer</td>
          </tr>
        </tbody>
      </table>
    </section>
    <section numbered="true" toc="default">
      <name>Access Rules</name>
      
      <t>The access rules in this section refer to the on-the-wire
      access control to the NTP service and are completely independent
      of any management API access control, e.g., NETCONF Access
      Control Model (NACM) <xref target="RFC8341"
      format="default"/>.</t>
      
      <t>An Access Control List (ACL) is one of the basic elements used to
   configure device-forwarding behavior. An ACL is a user-ordered set of rules that is used to filter traffic
   on a networking device.</t>
      <t>As per <xref target="RFC1305" format="default"/> (for NTPv3) and <xref target="RFC5905" format="default"/> (for NTPv4), NTP could
include an access-control feature that prevents unauthorized access and
that controls which peers are allowed to update the local clock. Further, it is useful to differentiate between the various kinds of access and attach a different acl-rule to each. For this, the YANG module allows such configuration via /ntp/access-rules. The access-rule itself is configured via <xref target="RFC8519" format="default"/>.</t>
      <t>The following access-modes are supported:
      </t>
      <dl spacing="normal">
        <dt>Peer:</dt> <dd>Permit others to synchronize their time with the NTP entity or vice versa.  NTP control queries are also accepted.</dd>
        <dt>Server:</dt><dd>Permit others to synchronize their time with the NTP entity, but vice versa is not supported. NTP control queries are accepted.</dd>
        <dt>Server-only:</dt><dd>Permit others to synchronize their time with the NTP entity, but vice versa is not supported. NTP control queries are not accepted.</dd>
        <dt>Query-only:</dt><dd>Only control queries are accepted.</dd>
      </dl>
      <t>Query-only is the most restricted whereas the peer is the full access authority. The ability to give different ACL rules for different access-modes allows for a greater control by the operator.</t>
    </section>
    <section numbered="true" toc="default">
      <name>Key Management</name>
      <t>As per <xref target="RFC1305" format="default"/> (for NTPv3) and <xref target="RFC5905" format="default"/> (for NTPv4), when authentication is enabled, NTP employs
a crypto-checksum, computed by the sender and checked by the receiver,
together with a set of predistributed algorithms, and
cryptographic keys indexed by a key identifier included in the NTP message. This keyid is a 32-bit unsigned integer that <bcp14>MUST</bcp14> be configured on the NTP peers before the authentication can be used. 
For this reason, this YANG module allows such configuration via /ntp/authentication/authentication-keys/. Further at the time of configuration of NTP association (for example, unicast server), the keyid is specified.</t>
      <t>The 'nacm:default-deny-all' is
used to prevent retrieval of the actual key information after it is set.</t>
    </section>
    <section anchor="ver" numbered="true" toc="default">
      <name>NTP Version</name>
      <t>This YANG data model allows a version to be configured for the NTP association, i.e., an operator can control the use of NTPv3 <xref target="RFC1305" format="default"/> or NTPv4 <xref target="RFC5905" format="default"/> for each association it forms. This allows backward compatibility with a legacy system. Note that NTPv3 <xref target="RFC1305" format="default"/> is obsoleted by NTPv4 <xref target="RFC5905" format="default"/>.
      </t>
    </section>
    <section numbered="true" toc="default">
      <name>NTP YANG Module</name>
      
      <sourcecode name="ietf-ntp@2022-07-05.yang" type="yang" markers="true"><![CDATA[
module ietf-ntp {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-ntp";
  prefix ntp;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC 6991: Common YANG Data Types";
  }
  import ietf-inet-types {
    prefix inet;
    reference
      "RFC 6991: Common YANG Data Types";
  }
  import ietf-interfaces {
    prefix if;
    reference
      "RFC 8343: A YANG Data Model for Interface Management";
  }
  import ietf-system {
    prefix sys;
    reference
      "RFC 7317: A YANG Data Model for System Management";
  }
  import ietf-access-control-list {
    prefix acl;
    reference
      "RFC 8519: YANG Data Model for Network Access Control
       Lists (ACLs)";
  }
  import ietf-routing-types {
    prefix rt-types;
    reference
      "RFC 8294: Common YANG Data Types for the Routing Area";
  }
  import ietf-netconf-acm {
    prefix nacm;
    reference
      "RFC 8341: Network Configuration Access Control Model";
  }

  organization
    "IETF NTP (Network Time Protocol) Working Group";
  contact
    "WG Web:  <https://datatracker.ietf.org/wg/ntp/>
     WG List:  <mailto: ntp@ietf.org
     Editor:   Dhruv Dhody
              <mailto:dhruv.ietf@gmail.com>
     Editor:   Ankit Kumar Sinha
              <mailto:ankit.ietf@gmail.com>";
  description
    "This document defines a YANG data model that can be used
     to configure and manage  Network Time Protocol (NTP) version 4.
     It can also be used to configure and manage version 3.
     The data model includes configuration data and state data.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.

     Copyright (c) 2022 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Revised BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 9249; see the
     RFC itself for full legal notices.";

  revision 2022-07-05 {
    description
      "Initial revision";
    reference
      "RFC 9249: A YANG Data Model for NTP";
  }

  /* Typedef Definitions */

  typedef ntp-stratum {
    type uint8 {
      range "1..16";
    }
    description
      "The level of each server in the hierarchy is defined by
       a stratum.  Primary servers are assigned with stratum
       one; secondary servers at each lower level are assigned with
       one stratum greater than the preceding level.";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 3";
  }

  typedef ntp-version {
    type uint8 {
      range "3..max";
    }
    default "4";
    description
      "The current NTP version supported by the corresponding
       association";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 1";
  }

  typedef refid {
    type union {
      type inet:ipv4-address;
      type uint32;
      type string {
        length "4";
      }
    }
    description
      "A code identifying the particular server or reference
       clock.  The interpretation depends upon stratum.  It
       could be an IPv4 address, the first 32 bits of the MD5 hash
       of the IPv6 address, or a string for the Reference Identifier
       and kiss codes.  Some examples:

       -- a refclock ID like '127.127.1.0' for local clock sync

       -- uni/multi/broadcast associations for IPv4 will look like
          '203.0.113.1' and '0x4321FEDC' for IPv6

       -- sync with a primary source will look like 'DCN', 'NIST',
          'ATOM'

       -- kiss codes will look like 'AUTH', 'DROP', or 'RATE'

       Note that the use of an MD5 hash for IPv6 addresses is not 
       for cryptographic purposes.";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 7.3";
  }

  typedef ntp-date-and-time {
    type union {
      type yang:date-and-time;
      type uint8;
    }
    description
      "Follows the date-and-time format when valid values exist.
       Otherwise, allows for setting a special value such as
       zero.";
    reference
      "RFC 6991: Common YANG Data Types";
  }

  typedef log2seconds {
    type int8;
    description
      "An 8-bit signed integer that represents signed log2
       seconds.";
  }

  /* features */

  feature ntp-port {
    description
      "Support for NTP port configuration";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 7.2";
  }

  feature authentication {
    description
      "Support for NTP symmetric key authentication";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 7.3";
  }

  feature deprecated {
    description
      "Support deprecated MD5-based authentication (RFC 8573),
       SHA-1, or any other deprecated authentication mechanism.
       It is enabled to support legacy compatibility when secure
       cryptographic algorithms are not available to use.
       It is also used to configure keystrings in ASCII format.";
    reference
      "RFC 1321: The MD5 Message-Digest Algorithm,
       RFC 3174: US Secure Hash Algorithm 1 (SHA1), 
       SHS: Secure Hash Standard (SHS) (FIPS PUB 180-4)";
  }

  feature hex-key-string {
    description
      "Support hexadecimal key string";
  }

  feature access-rules {
    description
      "Support for NTP access control";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 9.2";
  }

  feature unicast-configuration {
    description
      "Support for NTP client/server or active/passive
       in unicast";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 3";
  }

  feature broadcast-server {
    description
      "Support for broadcast server";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 3";
  }

  feature broadcast-client {
    description
      "Support for broadcast client";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 3";
  }

  feature multicast-server {
    description
      "Support for multicast server";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 3.1";
  }
  feature multicast-client {
    description
      "Support for multicast client";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 3.1";
  }

  feature manycast-server {
    description
      "Support for manycast server";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 3.1";
  }

  feature manycast-client {
    description
      "Support for manycast client";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 3.1";
  }

  /* Identity */
  /* unicast-configurations types */

  identity unicast-configuration-type {
    if-feature "unicast-configuration";
    description
      "This defines NTP unicast mode of operation as used
       for unicast-configurations.";
  }

  identity uc-server {
    if-feature "unicast-configuration";
    base unicast-configuration-type;
    description
      "Use client association mode where the unicast server
       address is configured.";
  }

  identity uc-peer {
    if-feature "unicast-configuration";
    base unicast-configuration-type;
    description
      "Use symmetric active association mode where the peer
       address is configured.";
  }

  /* association-modes */

  identity association-mode {
    description
      "The NTP association modes";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 3";
  }

  identity active {
    base association-mode;
    description
      "Use symmetric active association mode (mode 1).
       This device may synchronize with its NTP peer
       or provide synchronization to a configured NTP peer.";
  }

  identity passive {
    base association-mode;
    description
      "Use symmetric passive association mode (mode 2).
       This device has learned this association dynamically.
       This device may synchronize with its NTP peer.";
  }

  identity client {
    base association-mode;
    description
      "Use client association mode (mode 3).
       This device will not provide synchronization
       to the configured NTP server.";
  }

  identity server {
    base association-mode;
    description
      "Use server association mode (mode 4).
       This device will provide synchronization to
       NTP clients.";
  }

  identity broadcast-server {
    base association-mode;
    description
      "Use broadcast server mode (mode 5).
       This mode defines that it's either working
       as a broadcast server or a multicast server.";
  }

  identity broadcast-client {
    base association-mode;
    description
      "This mode defines that it's either working
       as a broadcast client (mode 6) or a multicast client.";
  }

  /* access-mode */

  identity access-mode {
    if-feature "access-rules";
    description
      "This defines NTP access-modes.  These identify
       how the ACL is applied with NTP.";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Section 9.2";
  }

  identity peer-access-mode {
    if-feature "access-rules";
    base access-mode;
    description
      "Permit others to synchronize their time with this NTP
       or vice versa.
       NTP control queries are also accepted.  This enables
       full access authority.";
  }

  identity server-access-mode {
    if-feature "access-rules";
    base access-mode;
    description
      "Permit others to synchronize their time with this NTP
       entity, but vice versa is not supported.  NTP control
       queries are accepted.";
  }

  identity server-only-access-mode {
    if-feature "access-rules";
    base access-mode;
    description
      "Permit others to synchronize their time with this NTP
       entity, but vice versa is not supported.  NTP control
       queries are not accepted.";
  }

  identity query-only-access-mode {
    if-feature "access-rules";
    base access-mode;
    description
      "Only control queries are accepted.";
  }

  /* clock-state */

  identity clock-state {
    description
      "This defines NTP clock status at a high level.";
  }

  identity synchronized {
    base clock-state;
    description
      "Indicates that the local clock has been synchronized with
       an NTP server or the reference clock.";
  }

  identity unsynchronized {
    base clock-state;
    description
      "Indicates that the local clock has not been synchronized
       with any NTP server.";
  }

  /* ntp-sync-state */

  identity ntp-sync-state {
    description
      "This defines NTP clock sync state at a more granular
       level.  Referred to as 'Clock state definitions' in
       RFC 5905.";
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Appendix A.1.1";
  }

  identity clock-never-set {
    base ntp-sync-state;
    description
      "Indicates the clock was never set.";
  }

  identity freq-set-by-cfg {
    base ntp-sync-state;
    description
      "Indicates the clock frequency is set by
       NTP configuration or file.";
  }

  identity spike {
    base ntp-sync-state;
    description
      "Indicates a spike is detected.";
  }

  identity freq {
    base ntp-sync-state;
    description
      "Indicates the frequency mode.";
  }

  identity clock-synchronized {
    base ntp-sync-state;
    description
      "Indicates that the clock is synchronized.";
  }

  /* crypto-algorithm */

  identity crypto-algorithm {
    description
      "Base identity of cryptographic algorithm options.";
  }

  identity md5 {
    if-feature "deprecated";
    base crypto-algorithm;
    description
      "The MD5 algorithm.  Note that RFC 8573
       deprecates the use of MD5-based authentication.";
    reference
      "RFC 1321: The MD5 Message-Digest Algorithm";
  }

  identity sha-1 {
    if-feature "deprecated";
    base crypto-algorithm;
    description
      "The SHA-1 algorithm";
    reference
      "RFC 3174: US Secure Hash Algorithm 1 (SHA1)";
  }

  identity hmac-sha-1 {
    if-feature "deprecated";
    base crypto-algorithm;
    description
      "HMAC-SHA-1 authentication algorithm";
    reference
      "SHS: Secure Hash Standard (SHS) (FIPS PUB 180-4)";
  }

  identity hmac-sha1-12 {
    if-feature "deprecated";
    base crypto-algorithm;
    description
      "The HMAC-SHA1-12 algorithm";
  }

  identity hmac-sha-256 {
    description
      "HMAC-SHA-256 authentication algorithm";
    reference
      "SHS: Secure Hash Standard (SHS) (FIPS PUB 180-4)";
  }

  identity hmac-sha-384 {
    description
      "HMAC-SHA-384 authentication algorithm";
    reference
      "SHS: Secure Hash Standard (SHS) (FIPS PUB 180-4)";
  }

  identity hmac-sha-512 {
    description
      "HMAC-SHA-512 authentication algorithm";
    reference
      "SHS: Secure Hash Standard (SHS) (FIPS PUB 180-4)";
  }

  identity aes-cmac {
    base crypto-algorithm;
    description
      "The AES-CMAC algorithm -- required by
       RFC 8573 for MAC for the NTP.";
    reference
      "RFC 4493: The AES-CMAC Algorithm,
       RFC 8573: Message Authentication Code for the Network
       Time Protocol";
  }

  /* Groupings */

  grouping key {
    description
      "The key";
    nacm:default-deny-all;
    choice key-string-style {
      description
        "Key string styles";
      case keystring {
        leaf keystring {
          if-feature "deprecated";
          type string;
          description
            "Key string in ASCII format";
        }
      }
      case hexadecimal {
        if-feature "hex-key-string";
        leaf hexadecimal-string {
          type yang:hex-string;
          description
            "Key in hexadecimal string format.  When compared
             to ASCII, specification in hexadecimal affords
             greater key entropy with the same number of
             internal key-string octets.  Additionally, it
             discourages use of well-known words or
             numbers.";
        }
      }
    }
  }

  grouping authentication-key {
    description
      "To define an authentication key for an NTP
       time source.";
    leaf keyid {
      type uint32 {
        range "1..max";
      }
      description
        "Authentication key identifier";
    }
    leaf algorithm {
      type identityref {
        base crypto-algorithm;
      }
      description
        "Authentication algorithm.  Note that RFC 8573
         deprecates the use of MD5-based authentication
         and recommends AES-CMAC.";
    }
    container key {
      uses key;
      description
        "The key.  Note that RFC 8573 deprecates the use
         of MD5-based authentication.";
    }
    leaf istrusted {
      type boolean;
      description
        "Keyid is trusted or not";
    }
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification, Sections 7.3 and 7.4";
  }

  grouping authentication {
    description
      "Authentication";
    choice authentication-type {
      description
        "Type of authentication";
      case symmetric-key {
        leaf keyid {
          type leafref {
            path "/ntp:ntp/ntp:authentication/"
               + "ntp:authentication-keys/ntp:keyid";
          }
          description
            "Authentication key id referenced in this
             association.";
        }
      }
    }
  }

  grouping statistics {
    description
      "NTP packet statistic";
    leaf discontinuity-time {
      type ntp-date-and-time;
      description
        "The time on the most recent occasion at which any one or
         more of these NTP counters suffered a discontinuity.  If
         no such discontinuities have occurred, then this node
         contains the time the NTP association was
         (re-)initialized.";
    }
    leaf packet-sent {
      type yang:counter32;
      description
        "The total number of NTP packets delivered to the
         transport service by this NTP entity for this
         association.
         Discontinuities in the value of this counter can occur
         upon cold start, reinitialization of the NTP entity or the
         management system, and at other times.";
    }
    leaf packet-sent-fail {
      type yang:counter32;
      description
        "The number of times NTP packet sending failed.";
    }
    leaf packet-received {
      type yang:counter32;
      description
        "The total number of NTP packets delivered to the
         NTP entity from this association.
         Discontinuities in the value of this counter can occur
         upon cold start, reinitialization of the NTP entity or the
         management system, and at other times.";
    }
    leaf packet-dropped {
      type yang:counter32;
      description
        "The total number of NTP packets that were delivered
         to this NTP entity from this association and that this
         entity was not able to process due to an NTP error.
         Discontinuities in the value of this counter can occur
         upon cold start, reinitialization of the NTP entity or the
         management system, and at other times.";
    }
  }

  grouping common-attributes {
    description
      "NTP common attributes for configuration";
    leaf minpoll {
      type log2seconds;
      default "6";
      description
        "The minimum poll interval used in this association";
      reference
        "RFC 5905: Network Time Protocol Version 4: Protocol and
         Algorithms Specification, Section 7.2";
    }
    leaf maxpoll {
      type log2seconds;
      default "10";
      description
        "The maximum poll interval used in this association";
      reference
        "RFC 5905: Network Time Protocol Version 4: Protocol and
         Algorithms Specification, Section 7.2";
    }
    leaf port {
      if-feature "ntp-port";
      type inet:port-number {
        range "123 | 1024..max";
      }
      default "123";
      description
        "Specify the port used to send NTP packets.";
      reference
        "RFC 5905: Network Time Protocol Version 4: Protocol and
         Algorithms Specification, Section 7.2";
    }
    leaf version {
      type ntp-version;
      description
        "NTP version";
    }
    reference
      "RFC 5905: Network Time Protocol Version 4: Protocol and
       Algorithms Specification";
  }

  grouping association-ref {
    description
      "Reference to NTP association mode";
    leaf associations-address {
      type leafref {
        path "/ntp:ntp/ntp:associations/ntp:association"
           + "/ntp:address";
      }
      description
        "Indicates the association's address
         that results in clock synchronization.";
    }
    leaf associations-local-mode {
      type leafref {
        path "/ntp:ntp/ntp:associations/ntp:association"
           + "/ntp:local-mode";
      }
      description
        "Indicates the association's local-mode
         that results in clock synchronization.";
    }
    leaf associations-isconfigured {
      type leafref {
        path "/ntp:ntp/ntp:associations/ntp:association/"
           + "ntp:isconfigured";
      }
      description
        "Indicates if the association (that resulted in the
         clock synchronization) is explicitly configured.";
    }
  }

  container ntp {
    when 'false() = boolean(/sys:system/sys:ntp)' {
      description
        "Applicable when the system /sys/ntp/ is not used.";
    }
    presence "NTP is enabled and system should attempt to
              synchronize the system clock with an NTP server
              from the 'ntp/associations' list.";
    description
      "Configuration parameters for NTP";
    leaf port {
      if-feature "ntp-port";
      type inet:port-number {
        range "123 | 1024..max";
      }
      default "123";
      description
        "Specify the port used to send and receive NTP packets.";
      reference
        "RFC 5905: Network Time Protocol Version 4: Protocol and
         Algorithms Specification, Section 7.2";
    }
    container refclock-master {
      presence "NTP master clock is enabled.";
      description
        "Configures the local clock of this device as NTP server.";
      leaf master-stratum {
        type ntp-stratum;
        default "16";
        description
          "Stratum level from which NTP clients get their time
           synchronized.";
      }
    }
    container authentication {
      if-feature "authentication";
      description
        "Configuration of authentication";
      leaf auth-enabled {
        type boolean;
        default "false";
        description
          "Controls whether NTP authentication is enabled
           or disabled on this device.";
      }
      list authentication-keys {
        key "keyid";
        uses authentication-key;
        description
          "List of authentication keys";
      }
    }
    container access-rules {
      if-feature "access-rules";
      description
        "Configuration to control access to NTP service
         by using the NTP access-group feature.
         The access-mode identifies how the ACL is
         applied with NTP.";
      list access-rule {
        key "access-mode";
        description
          "List of access rules";
        leaf access-mode {
          type identityref {
            base access-mode;
          }
          description
            "The NTP access-mode.  Some of the possible values
             include peer, server, synchronization, query,
             etc.";
        }
        leaf acl {
          type leafref {
            path "/acl:acls/acl:acl/acl:name";
          }
          description
            "Control access configuration to be used.";
        }
        reference
          "RFC 5905: Network Time Protocol Version 4: Protocol and
           Algorithms Specification, Section 9.2";
      }
    }
    container clock-state {
      config false;
      description
        "Clock operational state of the NTP";
      container system-status {
        description
          "System status of NTP";
        leaf clock-state {
          type identityref {
            base clock-state;
          }
          mandatory true;
          description
            "The state of the system clock.  Some of the possible
             values include synchronized and unsynchronized.";
        }
        leaf clock-stratum {
          type ntp-stratum;
          mandatory true;
          description
            "The NTP entity's own stratum value.  Should be one
             greater than the preceding level.
             16 if unsynchronized.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Section 3";
        }
        leaf clock-refid {
          type refid;
          mandatory true;
          description
            "A code identifying the particular server or reference
             clock.  The interpretation depends upon stratum.  It
             could be an IPv4 address, the first 32 bits of the MD5
             hash of the IPv6 address, or a string for the Reference
             Identifier and kiss codes.  Some examples:

             -- a refclock ID like '127.127.1.0' for local clock sync

             -- uni/multi/broadcast associations for IPv4 will look 
                like '203.0.113.1' and '0x4321FEDC' for IPv6

             -- sync with primary source will look like 'DCN', 
                'NIST', 'ATOM'
 
             -- kiss codes will look like 'AUTH', 'DROP', 'RATE'

             Note that the use of MD5 hash for IPv6 address is not 
             for cryptographic purposes.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Section 7.3";
        }
        uses association-ref {
          description
            "Reference to association";
        }
        leaf nominal-freq {
          type decimal64 {
            fraction-digits 4;
          }
          units "Hz";
          mandatory true;
          description
            "The nominal frequency of the local clock.  An ideal
             frequency with zero uncertainty.";
        }
        leaf actual-freq {
          type decimal64 {
            fraction-digits 4;
          }
          units "Hz";
          mandatory true;
          description
            "The actual frequency of the local clock";
        }
        leaf clock-precision {
          type log2seconds;
          mandatory true;
          description
            "Clock precision of this system in signed integer format,
             in log 2 seconds -  (prec=2^(-n)).  A value of 5 would
             mean 2^-5 = 0.03125 seconds = 31.25 ms.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Section 7.3";
        }
        leaf clock-offset {
          type decimal64 {
            fraction-digits 3;
          }
          units "milliseconds";
          description
            "The signed time offset to the current selected reference
             time source, e.g., '0.032ms' or '1.232ms'.  The negative
             value indicates that the local clock is behind the
             current selected reference time source.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Section 9.1";
        }
        leaf root-delay {
          type decimal64 {
            fraction-digits 3;
          }
          units "milliseconds";
          description
            "Total delay along the path to the root clock";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Sections 4 and 7.3";
        }
        leaf root-dispersion {
          type decimal64 {
            fraction-digits 3;
          }
          units "milliseconds";
          description
            "The dispersion to the local clock
             and the root clock, e.g., '6.927ms'.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Sections 4, 7.3, and 10";
        }
        leaf reference-time {
          type ntp-date-and-time;
          description
            "The reference timestamp.  Time when the system clock was
             last set or corrected.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Section 7.3";
        }
        leaf sync-state {
          type identityref {
            base ntp-sync-state;
          }
          mandatory true;
          description
            "The synchronization status of the local clock.  Referred 
             to as 'Clock state definitions' in RFC 5905.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Appendix A.1.1";
        }
      }
    }
    list unicast-configuration {
      if-feature "unicast-configuration";
      key "address type";
      description
        "List of NTP unicast-configurations";
      leaf address {
        type inet:ip-address;
        description
          "Address of this association";
      }
      leaf type {
        type identityref {
          base unicast-configuration-type;
        }
        description
          "The unicast configuration type, for example,
           unicast-server";
      }
      container authentication {
        if-feature "authentication";
        description
          "Authentication used for this association";
        uses authentication;
      }
      leaf prefer {
        type boolean;
        default "false";
        description
          "Whether or not this association is preferred";
      }
      leaf burst {
        type boolean;
        default "false";
        description
          "If set, a series of packets are sent instead of a single
           packet within each synchronization interval to achieve
           faster synchronization.";
        reference
          "RFC 5905: Network Time Protocol Version 4: Protocol 
           and Algorithms Specification, Section 13.1";
      }
      leaf iburst {
        type boolean;
        default "false";
        description
          "If set, a series of packets are sent instead of a single
           packet within the initial synchronization interval to
           achieve faster initial synchronization.";
        reference
          "RFC 5905: Network Time Protocol Version 4: Protocol 
           and Algorithms Specification, Section 13.1";
      }
      leaf source {
        type if:interface-ref;
        description
          "The interface whose IP address is used by this association
           as the source address.";
      }
      uses common-attributes {
        description
          "Common attributes like port, version, and min and max
           poll.";
      }
    }
    container associations {
      description
        "Association parameters";
      list association {
        key "address local-mode isconfigured";
        config false;
        description
          "List of NTP associations.  Here address, local-mode,
           and isconfigured are required to uniquely identify
           a particular association.  Let's take the following
           examples:

           1) If RT1 is acting as broadcast server
              and RT2 is acting as broadcast client, then RT2
              will form a dynamic association with the address as
              RT1, local-mode as client, and isconfigured as false.

           2) When RT2 is configured with unicast server RT1, 
              then RT2 will form an association with the address as 
              RT1, local-mode as client, and isconfigured as true.

           Thus, all three leaves are needed as key to uniquely 
           identify the association.";
        leaf address {
          type inet:ip-address;
          description
            "The remote address of this association.  Represents the
             IP address of a unicast/multicast/broadcast address.";
        }
        leaf local-mode {
          type identityref {
            base association-mode;
          }
          description
            "Local-mode of this NTP association";
        }
        leaf isconfigured {
          type boolean;
          description
            "Indicates if this association is configured (true) or
             dynamically learned (false).";
        }
        leaf stratum {
          type ntp-stratum;
          description
            "The association stratum value";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Section 3";
        }
        leaf refid {
          type refid;
          description
            "A code identifying the particular server or reference
             clock.  The interpretation depends upon stratum.  It
             could be an IPv4 address or first 32 bits of the MD5 
             hash of the IPv6 address or a string for the Reference 
             Identifier and kiss codes.  Some examples:

             -- a refclock ID like '127.127.1.0' for local clock sync

             -- uni/multi/broadcast associations for IPv4 will look 
                like '203.0.113.1' and '0x4321FEDC' for IPv6

             -- sync with primary source will look like 'DCN', 
                'NIST', or 'ATOM'

             -- kiss codes will look like 'AUTH', 'DROP', or 'RATE'

             Note that the use of an MD5 hash for IPv6 address is 
             not for cryptographic purposes.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Section 7.3";
        }
        leaf authentication {
          if-feature "authentication";
          type leafref {
            path "/ntp:ntp/ntp:authentication/"
               + "ntp:authentication-keys/ntp:keyid";
          }
          description
            "Authentication key used for this association";
        }
        leaf prefer {
          type boolean;
          default "false";
          description
            "Indicates if this association is preferred";
        }
        leaf peer-interface {
          type if:interface-ref;
          description
            "The interface that is used for communication";
        }
        uses common-attributes {
          description
            "Common attributes like port, version, and min and
             max poll";
        }
        leaf reach {
          type uint8;
          description
            "An 8-bit shift register that tracks packet
             generation and receipt.  It is used to determine
             whether the server is reachable and the data are
             fresh.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Sections 9.2 and 13";
        }
        leaf unreach {
          type uint8;
          units "seconds";
          description
            "A count of how long in second the server has been
             unreachable, i.e., the reach value has been zero.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Sections 9.2 and 13";
        }
        leaf poll {
          type log2seconds;
          description
            "The polling interval for current association in signed
             log2 seconds.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Section 7.3";
        }
        leaf now {
          type uint32;
          units "seconds";
          description
            "The time since the last NTP packet was
             received or last synchronized.";
        }
        leaf offset {
          type decimal64 {
            fraction-digits 3;
          }
          units "milliseconds";
          description
            "The signed offset between the local clock
             and the peer clock, e.g., '0.032ms' or '1.232ms'.  The
             negative value indicates that the local clock is behind
             the peer.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Section 8";
        }
        leaf delay {
          type decimal64 {
            fraction-digits 3;
          }
          units "milliseconds";
          description
            "The network delay between the local clock
             and the peer clock";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Section 8";
        }
        leaf dispersion {
          type decimal64 {
            fraction-digits 3;
          }
          units "milliseconds";
          description
            "The root dispersion between the local clock
             and the peer clock.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Section 10";
        }
        leaf originate-time {
          type ntp-date-and-time;
          description
            "This is the local time, in timestamp format,
             when the latest NTP packet was sent to the peer
             (called T1).";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol and
             Algorithms Specification, Section 8";
        }
        leaf receive-time {
          type ntp-date-and-time;
          description
            "This is the local time, in timestamp format,
             when the latest NTP packet arrived at the peer
             (called T2).  If the peer becomes unreachable,
             the value is set to zero.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol 
             and Algorithms Specification, Section 8";
        }
        leaf transmit-time {
          type ntp-date-and-time;
          description
            "This is the local time, in timestamp format,
             at which the NTP packet departed the peer 
             (called T3).  If the peer becomes unreachable,
             the value is set to zero.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol
             and Algorithms Specification, Section 8";
        }
        leaf input-time {
          type ntp-date-and-time;
          description
            "This is the local time, in timestamp format,
             when the latest NTP message from the peer arrived 
             (called T4).  If the peer becomes unreachable, 
             value is set to zero.";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol
             and Algorithms Specification, Section 8";
        }
        container ntp-statistics {
          description
            "Per peer packet send and receive statistics";
          uses statistics {
            description
              "NTP send and receive packet statistics";
          }
        }
      }
    }
    container interfaces {
      description
        "Configuration parameters for NTP interfaces";
      list interface {
        key "name";
        description
          "List of interfaces";
        leaf name {
          type if:interface-ref;
          description
            "The interface name";
        }
        container broadcast-server {
          if-feature "broadcast-server";
          presence "NTP broadcast-server is configured on this
                    interface.";
          description
            "Configuration of broadcast server";
          leaf ttl {
            type uint8;
            description
              "Specifies the time to live (TTL) for a
               broadcast packet";
            reference
              "RFC 5905: Network Time Protocol Version 4: Protocol
               and Algorithms Specification, Section 3.1";
          }
          container authentication {
            if-feature "authentication";
            description
              "Authentication used on this interface";
            uses authentication;
          }
          uses common-attributes {
            description
              "Common attributes such as port, version, and min and
               max poll";
          }
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol 
             and Algorithms Specification, Section 3.1";
        }
        container broadcast-client {
          if-feature "broadcast-client";
          presence "NTP broadcast-client is configured on this
                    interface.";
          description
            "Configuration of broadcast client";
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol 
             and Algorithms Specification, Section 3.1";
        }
        list multicast-server {
          if-feature "multicast-server";
          key "address";
          description
            "Configuration of multicast server";
          leaf address {
            type rt-types:ip-multicast-group-address;
            description
              "The IP address to send NTP multicast packets";
          }
          leaf ttl {
            type uint8;
            description
              "Specifies the TTL for a  multicast packet";
            reference
              "RFC 5905: Network Time Protocol Version 4: Protocol 
               and Algorithms Specification, Section 3.1";
          }
          container authentication {
            if-feature "authentication";
            description
              "Authentication used on this interface";
            uses authentication;
          }
          uses common-attributes {
            description
              "Common attributes such as port, version, and min and
               max poll";
          }
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol
             and Algorithms Specification, Section 3.1";
        }
        list multicast-client {
          if-feature "multicast-client";
          key "address";
          description
            "Configuration of a multicast client";
          leaf address {
            type rt-types:ip-multicast-group-address;
            description
              "The IP address of the multicast group to
               join";
          }
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol
             and Algorithms Specification, Section 3.1";
        }
        list manycast-server {
          if-feature "manycast-server";
          key "address";
          description
            "Configuration of a manycast server";
          leaf address {
            type rt-types:ip-multicast-group-address;
            description
              "The multicast group IP address to receive
               manycast client messages.";
          }
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol
             and Algorithms Specification, Section 3.1";
        }
        list manycast-client {
          if-feature "manycast-client";
          key "address";
          description
            "Configuration of manycast-client";
          leaf address {
            type rt-types:ip-multicast-group-address;
            description
              "The group IP address that the manycast client
               broadcasts the request message to";
          }
          container authentication {
            if-feature "authentication";
            description
              "Authentication used on this interface";
            uses authentication;
          }
          leaf ttl {
            type uint8;
            description
              "Specifies the maximum TTL for the expanding 
               ring search";
            reference
              "RFC 5905: Network Time Protocol Version 4: Protocol 
               and Algorithms Specification, Section 3.1";
          }
          leaf minclock {
            type uint8;
            description
              "The minimum manycast survivors in this
               association";
            reference
              "RFC 5905: Network Time Protocol Version 4: Protocol
               and Algorithms Specification, Section 13.2";
          }
          leaf maxclock {
            type uint8;
            description
              "The maximum manycast candidates in this
               association";
            reference
              "RFC 5905: Network Time Protocol Version 4: Protocol
               and Algorithms Specification, Section 13.2";
          }
          leaf beacon {
            type log2seconds;
            description
              "The beacon is the upper limit of the poll interval. 
               When the TTL reaches its limit without finding the 
               minimum number of manycast servers, the poll interval 
               increases until reaching the beacon value, when it
               starts over from the beginning.";
            reference
              "RFC 5905: Network Time Protocol Version 4: Protocol
               and Algorithms Specification, Section 13.2";
          }
          uses common-attributes {
            description
              "Common attributes like port, version, and min and
               max poll";
          }
          reference
            "RFC 5905: Network Time Protocol Version 4: Protocol
             and Algorithms Specification, Section 3.1";
        }
      }
    }
    container ntp-statistics {
      config false;
      description
        "Total NTP packet statistics";
      uses statistics {
        description
          "NTP send and receive packet statistics";
      }
    }
  }

  rpc statistics-reset {
    description
      "Reset statistics collected.";
    input {
      choice association-or-all {
        description
          "Resets statistics for a particular association or
           all.";
        case association {
          uses association-ref;
          description
            "This resets all the statistics collected for
             the association.";
        }
        case all {
          description
            "This resets all the statistics collected.";
        }
      }
    }
  }
}
]]></sourcecode>
    </section>
    <section numbered="true" toc="default">
      <name>Usage Example</name>
      <t>This section include examples for illustration purposes.</t>
      <t>Note: '\' indicates line wrapping per <xref target="RFC8792" format="default"/>.</t>
      <section numbered="true" toc="default">
        <name>Unicast Association</name>
        <t>This example describes how to configure a preferred unicast server present at 192.0.2.1 running at port 1025 with authentication-key 10 and version 4 (default).</t>
<sourcecode type="xml"><![CDATA[
  <edit-config xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
    <target>
      <running/>
    </target>
    <config>
      <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
        <unicast-configuration>
          <address>192.0.2.1</address>
          <type>uc-server</type>
          <prefer>true</prefer>
          <port>1025</port>
          <authentication>
            <symmetric-key>
              <keyid>10</keyid>
            </symmetric-key>
          </authentication>
        </unicast-configuration>
      </ntp>
    </config>
  </edit-config>
]]></sourcecode>
        <t keepWithNext="true">An example with IPv6 would use an IPv6 address (say 2001:db8::1) in the "address" leaf with no change in any other data tree.</t>
    
<sourcecode type="xml"><![CDATA[
  <edit-config xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
    <target>
      <running/>
    </target>
    <config>
      <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
        <unicast-configuration>
          <address>2001:db8::1</address>
          <type>uc-server</type>
          <prefer>true</prefer>
          <port>1025</port>
          <authentication>
            <symmetric-key>
              <keyid>10</keyid>
            </symmetric-key>
          </authentication>
        </unicast-configuration>
      </ntp>
    </config>
  </edit-config>
]]></sourcecode>
        <t>This example is for retrieving unicast configurations: </t>
<sourcecode type="xml"><![CDATA[
<get>
  <filter type="subtree">
  <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <unicast-configuration>
      </unicast-configuration>
  </ntp>
  </filter>
</get>

<data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
    <unicast-configuration>
      <address>192.0.2.1</address>
      <type>uc-server</type>
        <authentication>
          <symmetric-key>
            <keyid>10</keyid>
          </symmetric-key>
        </authentication>
      <prefer>true</prefer>
      <burst>false</burst>
      <iburst>true</iburst>
      <source/>
      <minpoll>6</minpoll>
      <maxpoll>10</maxpoll>
      <port>1025</port>
      <stratum>9</stratum>
      <refid>203.0.113.1</refid>
      <reach>255</reach>
      <unreach>0</unreach>
      <poll>128</poll>
      <now>10</now>
      <offset>0.025</offset>
      <delay>0.5</delay>
      <dispersion>0.6</dispersion>
      <originate-time>10-10-2017 07:33:55.253 Z+05:30\
      </originate-time>
      <receive-time>10-10-2017 07:33:55.258 Z+05:30\
      </receive-time>
      <transmit-time>10-10-2017 07:33:55.300 Z+05:30\
      </transmit-time>
      <input-time>10-10-2017 07:33:55.305 Z+05:30\
      </input-time>
      <ntp-statistics>
        <packet-sent>20</packet-sent>
        <packet-sent-fail>0</packet-sent-fail>
        <packet-received>20</packet-received>
        <packet-dropped>0</packet-dropped>
      </ntp-statistics>
    </unicast-configuration>
  </ntp>
</data>
          ]]></sourcecode>
      </section>
      <section numbered="true" toc="default">
        <name>Refclock Master</name>
        <t>This example describes how to configure reference clock with stratum 8:</t>
<sourcecode type="xml"><![CDATA[
<edit-config xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <target>
    <running/>
  </target>
  <config>
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <refclock-master>
        <master-stratum>8</master-stratum>
      </refclock-master>
    </ntp>
  </config>
</edit-config>
          ]]></sourcecode>
<t keepWithNext="true">This example describes how to get reference clock configuration: </t>
<sourcecode type="xml"><![CDATA[     
<get>
  <filter type="subtree">
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <refclock-master>
      </refclock-master>
    </ntp>
  </filter>
</get>

<data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
    <refclock-master>
      <master-stratum>8</master-stratum>
    </refclock-master>
  </ntp>
</data>
          ]]></sourcecode>
      </section>
      <section numbered="true" toc="default">
        <name>Authentication Configuration</name>
        <t>This example describes how to enable authentication and configure trusted authentication key 10 with mode as AES-CMAC and a hexadecimal string key:</t>
  
<sourcecode type="xml"><![CDATA[
<edit-config xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <target>
    <running/>
  </target>
  <config>
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <authentication>
        <auth-enabled>true</auth-enabled>
        <authentication-keys>
          <keyid>10</keyid>
          <algorithm>aes-cmac</algorithm>
          <key>
            <hexadecimal-string>
              bb1d6929e95937287fa37d129b756746
            </hexadecimal-string>  
          </key>
          <istrusted>true</istrusted>
        </authentication-keys>
      </authentication>
    </ntp>
  </config>
</edit-config>
]]></sourcecode>

      </section>
      <section numbered="true" toc="default">
        <name>Access Configuration</name>
        <t>This example describes how to configure "peer-access-mode" associated with ACL 2000:</t>
    
<sourcecode type="xml"><![CDATA[
<edit-config xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <target>
    <running/>
  </target>
  <config>
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <access-rules>
        <access-rule>
          <access-mode>peer-access-mode</access-mode>
          <acl>2000</acl>
        </access-rule>
      </access-rules>
    </ntp>
  </config>
</edit-config>
          ]]></sourcecode>
        <t>This example describes how to get access-related configuration:</t>
     
<sourcecode type="xml"><![CDATA[
<get>
  <filter type="subtree">
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <access-rules>
      </access-rules>
    </ntp>
  </filter>
</get>

<data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
    <access-rules>
      <access-rule>
        <access-mode>peer-access-mode</access-mode>
        <acl>2000</acl>
      </access-rule>
    </access-rules>
  </ntp>
</data>
          ]]></sourcecode>
      </section>
      <section numbered="true" toc="default">
        <name>Multicast Configuration</name>
        <t>This example describes how to configure a multicast server with an address of "224.0.1.1", port of 1025, version of 3, and authentication keyid of 10.</t>
<sourcecode type="xml"><![CDATA[
<edit-config xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <target>
    <running/>
  </target>
  <config>
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <interfaces>
        <interface>
          <name>Ethernet3/0/0</name>
          <multicast-server>
            <address>224.0.1.1</address>
            <authentication>
              <symmetric-key>
                <keyid>10</keyid>
              </symmetric-key>
            </authentication>
            <port>1025</port>
            <version>3</version>
          </multicast-server>
        </interface>
      </interfaces>
    </ntp>
  </config>
</edit-config>
          ]]></sourcecode>
        <t keepWithNext="true">This example describes how to get multicast-server-related configuration:</t>
       <sourcecode type="xml"><![CDATA[
<get>
  <filter type="subtree">
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <interfaces>
        <interface>
          <multicast-server>
          </multicast-server>
        </interface>
      </interfaces>
    </ntp>
  </filter>
</get>

<data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
    <interfaces>
      <interface>
        <name>Ethernet3/0/0</name>
        <multicast-server>
          <address>224.0.1.1</address>
          <ttl>8</ttl>
          <authentication>
            <symmetric-key>
              <keyid>10</keyid>
            </symmetric-key>
          </authentication>
          <minpoll>6</minpoll>
          <maxpoll>10</maxpoll>
          <port>1025</port>
          <version>3</version>
        </multicast-server>
      </interface>
    </interfaces>
  </ntp>
</data>
          ]]></sourcecode>
       <t keepWithNext="true">This example describes how to configure a multicast client with an address of "224.0.1.1":</t>
       <sourcecode type="xml"><![CDATA[
<edit-config xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <target>
    <running/>
  </target>
  <config>
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <interfaces>
        <interface>
          <name>Ethernet3/0/0</name>
          <multicast-client>
            <address>224.0.1.1</address>
          </multicast-client>
        </interface>
      </interfaces>
    </ntp>
  </config>
</edit-config>
          ]]></sourcecode>
       <t>This example describes how to get multicast-client-related configuration:</t>
       <sourcecode type="xml"><![CDATA[
<get>
  <filter type="subtree">
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <interfaces>
        <interface>
          <multicast-client>
          </multicast-client>
        </interface>
      </interfaces>
    </ntp>
  </filter>
</get>

<data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
    <interfaces>
      <interface>
        <name>Ethernet3/0/0</name>
        <multicast-client>
          <address>224.0.1.1</address>
        </multicast-client>
      </interface>
    </interfaces>
  </ntp>
</data>
          ]]></sourcecode>
      </section>
      <section numbered="true" toc="default">
        <name>Manycast Configuration</name>
        <t>This example describes how to configure a manycast-client with an address of "224.0.1.1", port of 1025, and authentication keyid of 10:</t>
       
<sourcecode type="xml"><![CDATA[
<edit-config xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <target>
    <running/>
  </target>
  <config>
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <interfaces>
        <interface>
          <name>Ethernet3/0/0</name>
          <manycast-client>
            <address>224.0.1.1</address>
            <authentication>
              <symmetric-key>
                <keyid>10</keyid>
              </symmetric-key>
            </authentication>
            <port>1025</port>
          </manycast-client>
        </interface>
      </interfaces>
    </ntp>
  </config>
</edit-config>
          ]]></sourcecode>
        <t keepWithNext="true">This example describes how to get manycast-client-related configuration:</t>
 
<sourcecode type="xml"><![CDATA[
<get>
  <filter type="subtree">
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <interfaces>
        <interface>
          <manycast-client>
          </manycast-client>
        </interface>
      </interfaces>
    </ntp>
  </filter>
</get>

<data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
    <interfaces>
      <interface>
        <name>Ethernet3/0/0</name>
        <manycast-client>
          <address>224.0.1.1</address>
          <authentication>
            <symmetric-key>
              <keyid>10</keyid>
            </symmetric-key>
          </authentication>
          <ttl>8</ttl>
          <minclock>3</minclock>
          <maxclock>10</maxclock>
          <beacon>6</beacon>
          <minpoll>6</minpoll>
          <maxpoll>10</maxpoll>
          <port>1025</port>
        </manycast-client>
      </interface>
    </interfaces>
  </ntp>
</data>
          ]]></sourcecode>
        <t keepWithNext="true">This example describes how to configure a manycast-server with an address of "224.0.1.1":</t>
      <sourcecode type="xml"><![CDATA[
<edit-config xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <target>
    <running/>
  </target>
  <config>
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <interfaces>
        <interface>
          <name>Ethernet3/0/0</name>
          <manycast-server>
            <address>224.0.1.1</address>
          </manycast-server>
        </interface>
      </interfaces>
    </ntp>
  </config>
</edit-config>
          ]]></sourcecode>
        <t>This example describes how to get manycast-server-related configuration:</t>
      <sourcecode type="xml"><![CDATA[
<get>
  <filter type="subtree">
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <interfaces>
        <interface>
          <manycast-server>
          </manycast-server>
        </interface>
      </interfaces>
    </ntp>
  </filter>
</get>

<data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
    <interfaces>
      <interface>
        <name>Ethernet3/0/0</name>
        <manycast-server>
          <address>224.0.1.1</address>
        </manycast-server>
      </interface>
    </interfaces>
  </ntp>
</data>
          ]]></sourcecode>
      </section>
      <section numbered="true" toc="default">
        <name>Clock State</name>

	
        <t>This example describes how to get current clock state:</t>
  <sourcecode type="xml"><![CDATA[
<get>
  <filter type="subtree">
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <clock-state>
      </clock-state>
    </ntp>
  </filter>
</get>

<data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
    <clock-state>
      <system-status>
        <clock-state>synchronized</clock-state>
        <clock-stratum>7</clock-stratum>
        <clock-refid>192.0.2.1</clock-refid>
        <associations-address>192.0.2.1\
        </associations-address>
        <associations-local-mode>client\
        </associations-local-mode>
        <associations-isconfigured>yes\
        </associations-isconfigured>
        <nominal-freq>100.0</nominal-freq>
        <actual-freq>100.0</actual-freq>
        <clock-precision>18</clock-precision>
        <clock-offset>0.025</clock-offset>
        <root-delay>0.5</root-delay>
        <root-dispersion>0.8</root-dispersion>
        <reference-time>10-10-2017 07:33:55.258 Z+05:30\
        </reference-time>
        <sync-state>clock-synchronized</sync-state>
      </system-status>
    </clock-state>
  </ntp>
</data>
          ]]></sourcecode>
      </section>
      <section numbered="true" toc="default">
        <name>Get All Association</name>
        <t>This example describes how to get all associations present in the system:</t>
        <sourcecode type="xml"><![CDATA[
<get>
  <filter type="subtree">
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <associations>
      </associations>
    </ntp>
  </filter>
</get>

<data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
    <associations>
      <association>
        <address>192.0.2.1</address>
        <stratum>9</stratum>
        <refid>203.0.113.1</refid>
        <local-mode>client</local-mode>
        <isconfigured>true</isconfigured>
        <authentication-key>10</authentication-key>
        <prefer>true</prefer>
        <peer-interface>Ethernet3/0/0</peer-interface>
        <minpoll>6</minpoll>
        <maxpoll>10</maxpoll>
        <port>1025</port>
        <version>4</version>
        <reach>255</reach>
        <unreach>0</unreach>
        <poll>128</poll>
        <now>10</now>
        <offset>0.025</offset>
        <delay>0.5</delay>
        <dispersion>0.6</dispersion>
        <originate-time>10-10-2017 07:33:55.253 Z+05:30\
        </originate-time>
        <receive-time>10-10-2017 07:33:55.258 Z+05:30\
        </receive-time>
        <transmit-time>10-10-2017 07:33:55.300 Z+05:30\
        </transmit-time>
        <input-time>10-10-2017 07:33:55.305 Z+05:30\
        </input-time>
        <ntp-statistics>
          <packet-sent>20</packet-sent>
          <packet-sent-fail>0</packet-sent-fail>
          <packet-received>20</packet-received>
          <packet-dropped>0</packet-dropped>
        </ntp-statistics>
      </association>
    </associations>
  </ntp>
</data>
          ]]></sourcecode>
      </section>
      <section numbered="true" toc="default">
        <name>Global Statistic</name>
        <t>This example describes how to get global statistics:</t>
     <sourcecode type="xml"><![CDATA[
<get>
  <filter type="subtree">
    <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
      <ntp-statistics>
      </ntp-statistics>
    </ntp>
  </filter>
</get>

<data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <ntp xmlns="urn:ietf:params:xml:ns:yang:ietf-ntp">
    <ntp-statistics>
      <packet-sent>30</packet-sent>
      <packet-sent-fail>5</packet-sent-fail>
      <packet-received>20</packet-received>
      <packet-dropped>2</packet-dropped>
    </ntp-statistics>
  </ntp>
</data>
          ]]></sourcecode>
      </section>
    </section>
    <section anchor="IANA" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <section numbered="true" toc="default">
        <name>IETF XML Registry</name>
        <t>This document registers a URI in the "IETF XML Registry" <xref target="RFC3688" format="default"/>. Following the format in RFC 3688, the following
	registration has been made.</t>
	<dl spacing="normal">
        <dt>URI:</dt><dd>urn:ietf:params:xml:ns:yang:ietf-ntp</dd>
        <dt>Registrant Contact:</dt><dd>The IESG.</dd>
        <dt>XML:</dt><dd>N/A; the requested URI is an XML namespace.</dd>
      </dl>
      </section>
      <section numbered="true" toc="default">
        <name>YANG Module Names</name>
        <t>This document registers a YANG module in the "YANG Module Names"
      registry <xref target="RFC6020" format="default"/>.</t>
      <dl spacing="normal">
	<dt>Name:</dt><dd>ietf-ntp</dd>
        <dt>Namespace:</dt><dd>urn:ietf:params:xml:ns:yang:ietf-ntp</dd>
        <dt>Prefix:</dt><dd>ntp</dd>
        <dt>Reference:</dt><dd>RFC 9249</dd>
      </dl>
      </section>
    </section>
    <section anchor="Security" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>The YANG module specified in this document defines a schema for data that is designed to be accessed via network management protocols such as NETCONF <xref target="RFC6241" format="default"/> or RESTCONF <xref target="RFC8040" format="default"/>. The lowest NETCONF layer is the secure transport layer, and the mandatory-to-implement secure transport is Secure Shell (SSH) <xref target="RFC6242" format="default"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-implement secure transport is TLS <xref target="RFC8446" format="default"/>.</t>
      <t>The Network Configuration Access Control Model (NACM) <xref target="RFC8341" format="default"/> provides the means to restrict access for particular NETCONF or RESTCONF users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.
      The 'nacm:default-deny-all' is used to prevent retrieval of the key information. </t>
      <t>There are a number of data nodes defined in this YANG module that are writable/creatable/deletable (i.e., config true, which is the default). These data nodes may be considered sensitive or vulnerable in some network environments. Write operations (e.g., edit-config) to these data nodes without proper protection can have a negative effect on network operations. These are the subtrees and data nodes and their sensitivity/vulnerability:
      </t>
      <dl spacing="normal">
        <dt>/ntp/port:</dt><dd>This data node specifies the port number to be used to send NTP packets. Unexpected changes could lead to disruption and/or network misbehavior.</dd>
        <dt>/ntp/authentication and /ntp/access-rules:</dt><dd>The entries in the list include the authentication and access control configurations. Care should be taken while setting these parameters.</dd>
        <dt>/ntp/unicast-configuration:</dt><dd>The entries in the list include all unicast configurations (server or peer mode) and indirectly creates or modifies the NTP
associations. Unexpected changes could lead to disruption and/or network misbehavior.</dd>
        <dt>/ntp/interfaces/interface:</dt><dd>The entries in the list include all per-interface configurations related to broadcast, multicast, and manycast mode, and indirectly creates or modifies the NTP
associations. Unexpected changes could lead to disruption and/or network misbehavior. It could also lead to synchronization over an untrusted source over trusted ones.</dd>
      </dl>
      <t>Some of the readable data nodes in this YANG module may be considered sensitive or vulnerable in some network environments. It is thus important to control read access (e.g., via get, get-config, or notification) to these data nodes. These are the subtrees and data nodes and their sensitivity/vulnerability:
      </t>
      <dl  spacing="normal">
        <dt>/ntp/authentication/authentication-keys:</dt><dd>The entries in the list include all the NTP authentication keys. Unauthorized access to the keys can be easily exploited to permit unauthorized access to the NTP service. This information is sensitive; thus, unauthorized access to this needs to be curtailed. </dd>
        <dt>/ntp/associations/association/:</dt><dd>The entries in the list include all active NTP associations of all modes. Exposure of these nodes
could reveal network topology or trust relationships. Unauthorized access to this also needs to be curtailed. </dd>
        <dt>/ntp/authentication and /ntp/access-rules:</dt><dd>The entries in the list include the authentication and access control configurations. Exposure of these nodes
could reveal network topology or trust relationships.</dd>
      </dl>     
 <t>Some of the RPC operations in this YANG module may be considered sensitive or vulnerable in some network environments. It is thus important to control access to these operations. These are the operations and their sensitivity/vulnerability:
      </t>
      <dl spacing="normal">
        <dt>statistics-reset:</dt><dd>The RPC is used to reset statistics. Unauthorized reset could impact monitoring.</dd>
      </dl>
      <t>The leaf /ntp/authentication/authentication-keys/algorithm can be set to cryptographic algorithms that are no longer considered to be secure. As per <xref target="RFC8573" format="default"/>, AES-CMAC is the recommended algorithm. </t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3688.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5905.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6020.xml"/>
	<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6241.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6242.xml"/>	
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6991.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7317.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7950.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8040.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8294.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8340.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8341.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8343.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8519.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8573.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1305.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1321.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3174.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4493.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5907.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8342.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8792.xml"/>

        <reference anchor="SHS" target="https://doi.org/10.6028/NIST.FIPS.180-4">
          <front>
            <title>Secure Hash Standard (SHS)</title>
            <author initials="" surname="" fullname="">
              <organization>National Institute of Standards and Technology (NIST)</organization>
            </author>
            <date month="August" year="2015"/>
          </front>
	   <seriesInfo name="DOI" value="10.6028/NIST.FIPS.180-4"/>
          <seriesInfo name="FIPS PUB" value="180-4"/>
        </reference>
      </references>
    </references>
    <section anchor="full" numbered="true" toc="default">
      <name>Full YANG Tree</name>
      <t>The full tree for the ietf-ntp YANG data model is as follows. </t>
     <sourcecode type="yangtree"><![CDATA[
module: ietf-ntp
  +--rw ntp!
     +--rw port?                    inet:port-number {ntp-port}?
     +--rw refclock-master!
     |  +--rw master-stratum?   ntp-stratum
     +--rw authentication {authentication}?
     |  +--rw auth-enabled?          boolean
     |  +--rw authentication-keys* [keyid]
     |     +--rw keyid       uint32
     |     +--rw algorithm?   identityref
     |     +--rw key
     |     |  +--rw (key-string-style)?
     |     |     +--:(keystring)
     |     |     |  +--rw keystring?            string {deprecated}?
     |     |     +--:(hexadecimal) {hex-key-string}?
     |     |        +--rw hexadecimal-string?   yang:hex-string
     |     +--rw istrusted?   boolean
     +--rw access-rules {access-rules}?
     |  +--rw access-rule* [access-mode]
     |     +--rw access-mode    identityref
     |     +--rw acl?           -> /acl:acls/acl/name
     +--ro clock-state
     |  +--ro system-status
     |     +--ro clock-state                  identityref
     |     +--ro clock-stratum                ntp-stratum
     |     +--ro clock-refid                  refid
     |     +--ro associations-address?
     |     |       -> /ntp/associations/association/address
     |     +--ro associations-local-mode?
     |     |       -> /ntp/associations/association/local-mode
     |     +--ro associations-isconfigured?
     |     |       -> /ntp/associations/association/isconfigured
     |     +--ro nominal-freq                 decimal64
     |     +--ro actual-freq                  decimal64
     |     +--ro clock-precision              log2seconds
     |     +--ro clock-offset?                decimal64
     |     +--ro root-delay?                  decimal64
     |     +--ro root-dispersion?             decimal64
     |     +--ro reference-time?              ntp-date-and-time
     |     +--ro sync-state                   identityref
     +--rw unicast-configuration* [address type]
     |       {unicast-configuration}?
     |  +--rw address           inet:ip-address
     |  +--rw type              identityref
     |  +--rw authentication {authentication}?
     |  |  +--rw (authentication-type)?
     |  |     +--:(symmetric-key)
     |  |        +--rw keyid?   leafref
     |  +--rw prefer?           boolean
     |  +--rw burst?            boolean
     |  +--rw iburst?           boolean
     |  +--rw source?           if:interface-ref
     |  +--rw minpoll?          log2seconds
     |  +--rw maxpoll?          log2seconds
     |  +--rw port?             inet:port-number {ntp-port}?
     |  +--rw version?          ntp-version
     +--rw associations
     |  +--ro association* [address local-mode isconfigured]
     |     +--ro address           inet:ip-address
     |     +--ro local-mode        identityref
     |     +--ro isconfigured      boolean
     |     +--ro stratum?          ntp-stratum
     |     +--ro refid?            refid
     |     +--ro authentication?
     |     |       -> /ntp/authentication/authentication-keys/keyid
     |     |       {authentication}?
     |     +--ro prefer?           boolean
     |     +--ro peer-interface?   if:interface-ref
     |     +--ro minpoll?          log2seconds
     |     +--ro maxpoll?          log2seconds
     |     +--ro port?             inet:port-number {ntp-port}?
     |     +--ro version?          ntp-version
     |     +--ro reach?            uint8
     |     +--ro unreach?          uint8
     |     +--ro poll?             log2seconds
     |     +--ro now?              uint32
     |     +--ro offset?           decimal64
     |     +--ro delay?            decimal64
     |     +--ro dispersion?       decimal64
     |     +--ro originate-time?   ntp-date-and-time
     |     +--ro receive-time?     ntp-date-and-time
     |     +--ro transmit-time?    ntp-date-and-time
     |     +--ro input-time?       ntp-date-and-time
     |     +--ro ntp-statistics
     |        +--ro discontinuity-time?   ntp-date-and-time
     |        +--ro packet-sent?          yang:counter32
     |        +--ro packet-sent-fail?     yang:counter32
     |        +--ro packet-received?      yang:counter32
     |        +--ro packet-dropped?       yang:counter32
     +--rw interfaces
     |  +--rw interface* [name]
     |     +--rw name                if:interface-ref
     |     +--rw broadcast-server! {broadcast-server}?
     |     |  +--rw ttl?              uint8
     |     |  +--rw authentication {authentication}?
     |     |  |  +--rw (authentication-type)?
     |     |  |     +--:(symmetric-key)
     |     |  |        +--rw keyid?   leafref
     |     |  +--rw minpoll?          log2seconds
     |     |  +--rw maxpoll?          log2seconds
     |     |  +--rw port?             inet:port-number {ntp-port}?
     |     |  +--rw version?          ntp-version
     |     +--rw broadcast-client! {broadcast-client}?
     |     +--rw multicast-server* [address] {multicast-server}?
     |     |  +--rw address
     |     |  |       rt-types:ip-multicast-group-address
     |     |  +--rw ttl?              uint8
     |     |  +--rw authentication {authentication}?
     |     |  |  +--rw (authentication-type)?
     |     |  |     +--:(symmetric-key)
     |     |  |        +--rw keyid?   leafref
     |     |  +--rw minpoll?          log2seconds
     |     |  +--rw maxpoll?          log2seconds
     |     |  +--rw port?             inet:port-number {ntp-port}?
     |     |  +--rw version?          ntp-version
     |     +--rw multicast-client* [address] {multicast-client}?
     |     |  +--rw address    rt-types:ip-multicast-group-address
     |     +--rw manycast-server* [address] {manycast-server}?
     |     |  +--rw address    rt-types:ip-multicast-group-address
     |     +--rw manycast-client* [address] {manycast-client}?
     |        +--rw address
     |        |       rt-types:ip-multicast-group-address
     |        +--rw authentication {authentication}?
     |        |  +--rw (authentication-type)?
     |        |     +--:(symmetric-key)
     |        |        +--rw keyid?   leafref
     |        +--rw ttl?              uint8
     |        +--rw minclock?         uint8
     |        +--rw maxclock?         uint8
     |        +--rw beacon?           log2seconds
     |        +--rw minpoll?          log2seconds
     |        +--rw maxpoll?          log2seconds
     |        +--rw port?             inet:port-number {ntp-port}?
     |        +--rw version?          ntp-version
     +--ro ntp-statistics
        +--ro discontinuity-time?   ntp-date-and-time
        +--ro packet-sent?          yang:counter32
        +--ro packet-sent-fail?     yang:counter32
        +--ro packet-received?      yang:counter32
        +--ro packet-dropped?       yang:counter32

  rpcs:
    +---x statistics-reset
       +---w input
          +---w (association-or-all)?
             +--:(association)
             |  +---w associations-address?
             |  |       -> /ntp/associations/association/address
             |  +---w associations-local-mode?
             |  |       -> /ntp/associations/association/local-mode
             |  +---w associations-isconfigured?
             |          -> /ntp/associations/association/isconfigured
             +--:(all)
          ]]></sourcecode>
   </section>

    <section numbered="false" toc="default">
      <name>Acknowledgments</name>
      <t>The authors would like to express their thanks to <contact fullname=" Sladjana Zoric"/>,
      <contact fullname="Danny Mayer"/>,  <contact fullname="Harlan Stenn"/>,  <contact fullname="Ulrich Windl"/>,  <contact fullname="Miroslav Lichvar"/>,  <contact fullname="Maurice Angermann"/>,  <contact fullname="Watson Ladd"/>, and  <contact fullname="Rich Salz"/> for their
      review and suggestions.</t>
      <t>Thanks to  <contact fullname="Andy Bierman"/> for the YANG doctor review.</t>
      <t>Thanks to  <contact fullname="Dieter Sibold"/> for being the Document Shepherd and  <contact fullname="Erik Kline"/> for being the Responsible AD.</t>
      <t>Thanks to  <contact fullname="Takeshi Takahashi"/> for SECDIR review. Thanks to  <contact fullname="Tim Evens"/> for GENART review.</t>
      <t>A special thanks to  <contact fullname="Tom Petch"/> for a very detailed YANG review and providing great suggestions for improvements.</t>
      <t>Thanks for the IESG review from  <contact fullname="Benjamin Kaduk"/>,  <contact fullname="Francesca Palombini"/>,  <contact fullname="Eric Vyncke"/>,  <contact fullname="Murray Kucherawy"/>,  <contact fullname="Robert Wilton"/>,  <contact fullname="Roman Danyliw"/>, and  <contact fullname="Zaheduzzaman Sarker"/>.</t>
    </section>

   
  </back>
</rfc>
